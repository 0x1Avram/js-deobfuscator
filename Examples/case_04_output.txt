require('source-map-support').install();
module.exports = function (b) {
    function g(h) {
        if (f[h]) {
            return f[h].exports;
        }
        var k = f[h] = {
            i: h,
            l: !1,
            exports: {}
        };
        b[h].call(k.exports, k, k.exports, g);
        k.l = !0;
        return k.exports;
    }
    g.m = b;
    g.c = f;
    g.d = function (h, i, j) {
        const l = { enumerable: !0 };
        g.o(h, i) || Object.defineProperty(h, i, l);
    };
    g.r = function (h) {
        const i = { value: !0 };
        if ('undefined' != typeof Symbol && Symbol.toStringTag) {
            Object.defineProperty(h, Symbol.toStringTag, { value: 'Module' });
        }
        Object.defineProperty(h, '__esModule', i);
    };
    g.t = function (h, i) {
        if (1 & i && (h = g(h)), 8 & i) {
            return h;
        }
        if (4 & i && 'object' == typeof h && h && h.__esModule) {
            return h;
        }
        var l = Object.create(null);
        const p = { enumerable: !0 };
        if (g.r(l), Object.defineProperty(l, 'default', p), 2 & i && 'string' != typeof h) {
            for (var m in h)
                g.d(l, m, function (q) {
                    return h[q];
                }.bind(null, m));
        }
        return l;
    };
    g.n = function (h) {
        var k = h && h.__esModule ? function () {
            return h.default;
        } : function () {
            return h;
        };
        g.d(k, 'a', k);
        return k;
    };
    g.o = function (h, i) {
        return Object.prototype.hasOwnProperty.call(h, i);
    };
    g.p = '';
    return g(g.s = 247);
}([
    function (b, c) {
        b.exports = require('inversify');
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.Factory__ICalleeDataExtractor = 'Factory<ICalleeDataExtractor>';
            j.Factory__IControlFlowCustomNode = 'Factory<IControlFlowCustomNode>';
            j.Factory__IControlFlowReplacer = 'Factory<IControlFlowReplacer>';
            j.Factory__ICustomCodeHelper = 'Factory<ICustomCodeHelper>';
            j.Factory__ICustomCodeHelperGroup = 'Factory<ICustomCodeHelperGroup>';
            j.Factory__IDeadCodeInjectionCustomNode = 'Factory<IDeadCodeInjectionCustomNode>';
            j.Factory__IIdentifierNamesGenerator = 'Factory<IIdentifierNamesGenerator>';
            j.Factory__IIdentifierObfuscatingReplacer = 'Factory<IIdentifierObfuscatingReplacer>';
            j.Factory__INodeGuard = 'Factory<INodeGuard>';
            j.Factory__INodeTransformer = 'Factory<INodeTransformer[]>';
            j.Factory__IObfuscatedCode = 'Factory<IObfuscatedCode>';
            j.Factory__IObfuscatingReplacer = 'Factory<IObfuscatingReplacer>';
            j.Factory__IObjectExpressionKeysTransformerCustomNode = 'Factory<IObjectExpressionKeysTransformerCustomNode>';
            j.Factory__IObjectExpressionExtractor = 'Factory<IObjectExpressionExtractor>';
            j.Factory__TControlFlowStorage = 'Factory<TControlFlowStorage>';
            j.IArrayUtils = 'IArrayUtils';
            j.ICalleeDataExtractor = 'ICalleeDataExtractor';
            j.ICallsGraphAnalyzer = 'ICallsGraphAnalyzer';
            j.ICryptUtils = 'ICryptUtils';
            j.ICustomCodeHelper = 'ICustomCodeHelper';
            j.ICustomCodeHelperGroup = 'ICustomCodeHelperGroup';
            j.IControlFlowReplacer = 'IControlFlowReplacer';
            j.ICustomCodeHelperFormatter = 'ICustomCodeHelperFormatter';
            j.ICustomCodeHelperObfuscator = 'ICustomCodeHelperObfuscator';
            j.IEscapeSequenceEncoder = 'IEscapeSequenceEncoder';
            j.IIdentifierNamesGenerator = 'IIdentifierNamesGenerator';
            j.IIdentifierObfuscatingReplacer = 'IIdentifierObfuscatingReplacer';
            j.IJavaScriptObfuscator = 'IJavaScriptObfuscator';
            j.ILevelledTopologicalSorter = 'ILevelledTopologicalSorter';
            j.ILogger = 'ILogger';
            j.INodeGuard = 'INodeGuard';
            j.INodeTransformer = 'INodeTransformer';
            j.INodeTransformerNamesGroupsBuilder = 'INodeTransformerNamesGroupsBuilder';
            j.IObfuscationEventEmitter = 'IObfuscationEventEmitter';
            j.IObfuscatedCode = 'IObfuscatedCode';
            j.IOptions = 'IOptions';
            j.IOptionsNormalizer = 'IOptionsNormalizer';
            j.IObfuscatingReplacer = 'IObfuscatingReplacer';
            j.IPrevailingKindOfVariablesAnalyzer = 'IPrevailingKindOfVariablesAnalyzer';
            j.IObjectExpressionExtractor = 'IObjectExpressionExtractor';
            j.IRandomGenerator = 'IRandomGenerator';
            j.IScopeIdentifiersTraverser = 'IScopeIdentifiersTraverser';
            j.ISourceCode = 'ISourceCode';
            j.IScopeAnalyzer = 'IScopeAnalyzer';
            j.IStringArrayStorage = 'IStringArrayStorage';
            j.IStringArrayStorageAnalyzer = 'IStringArrayStorageAnalyzer';
            j.ITransformersRunner = 'ITransformersRunner';
            j.Newable__ICustomNode = 'Newable<ICustomNode>';
            j.Newable__TControlFlowStorage = 'Newable<TControlFlowStorage>';
            j.TCustomNodeGroupStorage = 'TCustomNodeGroupStorage';
            j.TInputOptions = 'TInputOptions';
        }(d.ServiceIdentifiers || (d.ServiceIdentifiers = {})));
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        const j = f(35);
        class k {
            static isArrayPatternNode(l) {
                return l.type === j.NodeType.ArrayPattern;
            }
            static isArrowFunctionExpressionNode(l) {
                return l.type === j.NodeType.ArrowFunctionExpression;
            }
            static isAssignmentExpressionNode(l) {
                return l.type === j.NodeType.AssignmentExpression;
            }
            static isAssignmentPatternNode(l) {
                return l.type === j.NodeType.AssignmentPattern;
            }
            static isAwaitExpressionNode(l) {
                return l.type === j.NodeType.AwaitExpression;
            }
            static isBlockStatementNode(l) {
                return l.type === j.NodeType.BlockStatement;
            }
            static isBreakStatementNode(l) {
                return l.type === j.NodeType.BreakStatement;
            }
            static isCallExpressionNode(l) {
                return l.type === j.NodeType.CallExpression;
            }
            static isClassDeclarationNode(l) {
                return l.type === j.NodeType.ClassDeclaration && null !== l.id;
            }
            static isContinueStatementNode(l) {
                return l.type === j.NodeType.ContinueStatement;
            }
            static isDirectiveNode(l) {
                return l.type === j.NodeType.ExpressionStatement && 'directive' in l;
            }
            static isExportNamedDeclarationNode(l) {
                return l.type === j.NodeType.ExportNamedDeclaration;
            }
            static isExpressionStatementNode(l) {
                return l.type === j.NodeType.ExpressionStatement && !('directive' in l);
            }
            static isFunctionNode(l) {
                return k.isFunctionDeclarationNode(l) || k.isFunctionExpressionNode(l) || k.isArrowFunctionExpressionNode(l);
            }
            static isFunctionDeclarationNode(l) {
                return l.type === j.NodeType.FunctionDeclaration && null !== l.id;
            }
            static isFunctionExpressionNode(l) {
                return l.type === j.NodeType.FunctionExpression;
            }
            static isIdentifierNode(l) {
                return l.type === j.NodeType.Identifier;
            }
            static isImportDeclarationNode(l) {
                return l.type === j.NodeType.ImportDeclaration;
            }
            static isImportSpecifierNode(l) {
                return l.type === j.NodeType.ImportSpecifier;
            }
            static isLabelIdentifierNode(l, m) {
                const p = k.isLabeledStatementNode(m) && m.label === l;
                const q = k.isContinueStatementNode(m) && m.label === l;
                const s = k.isBreakStatementNode(m) && m.label === l;
                return p || q || s;
            }
            static isLabeledStatementNode(l) {
                return l.type === j.NodeType.LabeledStatement;
            }
            static isLiteralNode(l) {
                return l.type === j.NodeType.Literal;
            }
            static isMemberExpressionNode(l) {
                return l.type === j.NodeType.MemberExpression;
            }
            static isMethodDefinitionNode(l) {
                return l.type === j.NodeType.MethodDefinition;
            }
            static isNode(l) {
                return l && void 0 !== !l.type;
            }
            static isNodeWithLexicalScope(l) {
                return k.isProgramNode(l) || k.isFunctionNode(l);
            }
            static isNodeWithBlockLexicalScope(l) {
                return k.isNodeWithLexicalScope(l) || k.isBlockStatementNode(l);
            }
            static isNodeWithLexicalScopeStatements(l, m) {
                return k.isProgramNode(l) || k.isBlockStatementNode(l) && k.nodesWithLexicalStatements.includes(m.type);
            }
            static isNodeWithStatements(l) {
                return k.isProgramNode(l) || k.isBlockStatementNode(l) || k.isSwitchCaseNode(l);
            }
            static isNodeWithComments(l) {
                return Boolean(l.leadingComments) || Boolean(l.trailingComments);
            }
            static isObjectPatternNode(l) {
                return l.type === j.NodeType.ObjectPattern;
            }
            static isObjectExpressionNode(l) {
                return l.type === j.NodeType.ObjectExpression;
            }
            static isProgramNode(l) {
                return l.type === j.NodeType.Program;
            }
            static isPropertyNode(l) {
                return l.type === j.NodeType.Property;
            }
            static isRestElementNode(l) {
                return l.type === j.NodeType.RestElement;
            }
            static isReturnStatementNode(l) {
                return l.type === j.NodeType.ReturnStatement;
            }
            static isSequenceExpressionNode(l) {
                return l.type === j.NodeType.SequenceExpression;
            }
            static isSuperNode(l) {
                return l.type === j.NodeType.Super;
            }
            static isSwitchCaseNode(l) {
                return l.type === j.NodeType.SwitchCase;
            }
            static isTaggedTemplateExpressionNode(l) {
                return l.type === j.NodeType.TaggedTemplateExpression;
            }
            static isTemplateLiteralNode(l) {
                return l.type === j.NodeType.TemplateLiteral;
            }
            static isUnaryExpressionNode(l) {
                return l.type === j.NodeType.UnaryExpression;
            }
            static isUseStrictOperator(l) {
                return k.isDirectiveNode(l) && 'use strict' === l.directive;
            }
            static isVariableDeclarationNode(l) {
                return l.type === j.NodeType.VariableDeclaration;
            }
            static isVariableDeclaratorNode(l) {
                return l.type === j.NodeType.VariableDeclarator;
            }
            static isWhileStatementNode(l) {
                return l.type === j.NodeType.WhileStatement;
            }
        }
        d.NodeGuards = k;
        k.nodesWithLexicalStatements = [
            j.NodeType.ArrowFunctionExpression,
            j.NodeType.FunctionDeclaration,
            j.NodeType.FunctionExpression,
            j.NodeType.MethodDefinition
        ];
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (g, h, j) {
        'use strict';
        var p = this && this.__importStar || function (B) {
            if (B && B.__esModule) {
                return B;
            }
            if (null != B) {
                for (var D in B)
                    if (Object.hasOwnProperty.call(B, D)) {
                        C[D] = B[D];
                    }
            }
            return C;
        };
        Object.defineProperty(h, '__esModule', q);
        const u = p(j(47));
        const v = p(j(12));
        const w = j(44);
        const x = j(57);
        const y = j(4);
        const z = j(18);
        class A {
            static addXVerbatimPropertyTo(B) {
                B['x-verbatim-property'] = {
                    content: B.raw,
                    precedence: u.Precedence.Primary
                };
                return B;
            }
            static clone(B) {
                return A.parentizeAst(A.cloneRecursive(B));
            }
            static convertCodeToStructure(B) {
                const C = {
                    ecmaVersion: w.ecmaVersion,
                    sourceType: 'script'
                };
                const D = x.ASTParserFacade.parse(B, C);
                const E = { ignoredNode: !1 };
                v.replace(D, { enter: (F, G) => (A.parentizeNode(F, G), y.NodeGuards.isLiteralNode(F) && A.addXVerbatimPropertyTo(F), z.NodeMetadata.set(F, E), F) });
                return D.body;
            }
            static convertStructureToCode(B) {
                const C = { sourceMapWithCode: !0 };
                return B.reduce((D, E) => D + u.generate(E, C).code, '');
            }
            static getUnaryExpressionArgumentNode(B) {
                if (y.NodeGuards.isUnaryExpressionNode(B.argument)) {
                    return A.getUnaryExpressionArgumentNode(B.argument);
                } else {
                    return B.argument;
                }
            }
            static parentizeAst(B) {
                v.replace(B, E);
                return B;
            }
            static parentizeNode(B, C) {
                B.parentNode = null != C ? C : B;
                return B;
            }
            static cloneRecursive(B) {
                if (null === B) {
                    return B;
                }
                Object.keys(B).forEach(F => {
                    if ('parentNode' === F) {
                        return;
                    }
                    const G = B[F];
                    let H;
                    H = null === G || G instanceof RegExp ? G : Array.isArray(G) ? G.map(A.cloneRecursive) : 'object' == typeof G ? A.cloneRecursive(G) : G;
                    E[F] = H;
                });
                return E;
            }
        }
        h.NodeUtils = A;
    },
    function (d, f, g) {
        'use strict';
        const j = { value: !0 };
        Object.defineProperty(f, '__esModule', j);
        const l = {
            configurable: !0,
            enumerable: !0
        };
        function m(p, q, s) {
            Reflect.hasMetadata(p, s) || Reflect.defineMetadata(p, q, s);
        }
        f.initializable = function (p = 'initialize') {
            const u = Object.keys(this)[0];
            return (v, w) => {
                const A = v[p];
                if (!A || 'function' != typeof A) {
                    throw new Error('`' + p + '` method with initialization logic not ' + ('found. `@' + u + '` decorator requires `' + p + '` method'));
                }
                m('_initialized', !1, v);
                m('_initializablePropertiesSet', new Set(), v);
                m('_wrappedMethodsSet', new Set(), v);
                (function (B, C) {
                    const G = Object.getOwnPropertyNames(B);
                    const H = [
                        C,
                        'constructor'
                    ];
                    G.forEach(I => {
                        var L;
                        const M = Reflect.getMetadata('_initializablePropertiesSet', B);
                        const N = Reflect.getMetadata('_wrappedMethodsSet', B);
                        if (H.includes(I) || M.has(I) || N.has(I)) {
                            return;
                        }
                        if ('function' != typeof B[I]) {
                            return;
                        }
                        const O = null !== (L = Object.getOwnPropertyDescriptor(B, I)) && void 0 !== L ? L : l;
                        const P = O.value;
                        Object.defineProperty(B, I, Object.assign(Object.assign({}, O), {
                            value() {
                                if (!Reflect.getMetadata('_initialized', this)) {
                                    throw new Error('Class should be initialized with `' + C + '()` method');
                                }
                                return P.apply(this, arguments);
                            }
                        }));
                        N.add(I);
                    });
                }(v, p));
                (function (B, C, D) {
                    var G;
                    const I = null !== (G = Object.getOwnPropertyDescriptor(B, C)) && void 0 !== G ? G : l;
                    const J = I.value;
                    Object.defineProperty(B, C, Object.assign(Object.assign({}, I), {
                        value: function () {
                            Reflect.defineMetadata('_initialized', !0, this);
                            const K = J.apply(this, arguments);
                            this[D];
                            return K;
                        }
                    }));
                }(v, p, w));
                return function (B, C) {
                    var D;
                    Reflect.getMetadata('_initializablePropertiesSet', B).add(C);
                    const F = '_' + C.toString();
                    const G = null !== (D = Object.getOwnPropertyDescriptor(B, F)) && void 0 !== D ? D : l;
                    Object.defineProperty(B, C, Object.assign(Object.assign({}, G), {
                        get: function () {
                            if (void 0 === this[F]) {
                                throw new Error('Property `' + C.toString() + '` is not initialized! Initialize it first!');
                            }
                            return this[F];
                        },
                        set: function (H) {
                            this[F] = H;
                        }
                    }));
                    return G;
                }(v, w);
            };
        };
    },
    function (d, f, g) {
        'use strict';
        var k = this && this.__importStar || function (s) {
            if (s && s.__esModule) {
                return s;
            }
            if (null != s) {
                for (var v in s)
                    if (Object.hasOwnProperty.call(s, v)) {
                        u[v] = s[v];
                    }
            }
            return u;
        };
        const l = { value: !0 };
        Object.defineProperty(f, '__esModule', l);
        const m = k(g(47));
        const p = g(35);
        class q {
            static programNode(s = []) {
                const w = { sourceType: 'script' };
                return w;
            }
            static arrayExpressionNode(s = []) {
                const v = { ignoredNode: !1 };
                const w = { elements: s };
                return w;
            }
            static assignmentExpressionNode(s, u, v) {
                const y = { ignoredNode: !1 };
                return z;
            }
            static binaryExpressionNode(s, u, v) {
                const w = { ignoredNode: !1 };
                return x;
            }
            static blockStatementNode(s = []) {
                const u = { ignoredNode: !1 };
                return v;
            }
            static breakStatement(s) {
                const v = { ignoredNode: !1 };
                return w;
            }
            static callExpressionNode(s, u = []) {
                const v = { ignoredNode: !1 };
                return w;
            }
            static continueStatement(s) {
                const u = { ignoredNode: !1 };
                return v;
            }
            static directiveNode(s, u) {
                const w = { ignoredNode: !1 };
                return x;
            }
            static expressionStatementNode(s) {
                const x = { ignoredNode: !1 };
                return y;
            }
            static functionDeclarationNode(s, u, v) {
                const y = { ignoredNode: !1 };
                const z = {
                    params: u,
                    generator: !1
                };
                return z;
            }
            static functionExpressionNode(s, u) {
                const y = { ignoredNode: !1 };
                const z = {
                    params: s,
                    generator: !1
                };
                return z;
            }
            static ifStatementNode(s, u, v) {
                const y = { test: s };
                const z = { ignoredNode: !1 };
                return Object.assign(Object.assign(y, v && { alternate: v }), A);
            }
            static identifierNode(s) {
                const u = { ignoredNode: !1 };
                return v;
            }
            static importDeclarationNode(s, u) {
                const z = {
                    specifiers: s,
                    source: u
                };
                return z;
            }
            static literalNode(s, u) {
                const y = { ignoredNode: !1 };
                u = void 0 !== u ? u : '\'' + s + '\'';
                return {
                    type: p.NodeType.Literal,
                    value: s,
                    raw: u,
                    'x-verbatim-property': {
                        content: u,
                        precedence: m.Precedence.Primary
                    },
                    metadata: y
                };
            }
            static logicalExpressionNode(s, u, v) {
                const x = { ignoredNode: !1 };
                return y;
            }
            static memberExpressionNode(s, u, v = !1) {
                const w = { ignoredNode: !1 };
                return x;
            }
            static methodDefinitionNode(s, u, v, w) {
                const A = { ignoredNode: !1 };
                const B = { static: !1 };
                return B;
            }
            static objectExpressionNode(s) {
                const u = { ignoredNode: !1 };
                return v;
            }
            static propertyNode(s, u, v = !1) {
                const y = { ignoredNode: !1 };
                const z = { method: !1 };
                return z;
            }
            static returnStatementNode(s) {
                const v = { ignoredNode: !1 };
                return w;
            }
            static switchStatementNode(s, u) {
                const v = { ignoredNode: !1 };
                const w = {
                    discriminant: s,
                    cases: u
                };
                return w;
            }
            static switchCaseNode(s, u) {
                const x = { test: s };
                return x;
            }
            static unaryExpressionNode(s, u, v = !0) {
                const z = { ignoredNode: !1 };
                const A = { prefix: v };
                return A;
            }
            static updateExpressionNode(s, u) {
                const v = { ignoredNode: !1 };
                const w = { prefix: !1 };
                return w;
            }
            static variableDeclarationNode(s = [], u = 'var') {
                const v = { ignoredNode: !1 };
                return w;
            }
            static variableDeclaratorNode(s, u) {
                const w = { ignoredNode: !1 };
                return x;
            }
            static whileStatementNode(s, u) {
                const w = { ignoredNode: !1 };
                return x;
            }
        }
        f.NodeFactory = q;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.Initializing = 'Initializing';
            j.Preparing = 'Preparing';
            j.DeadCodeInjection = 'DeadCodeInjection';
            j.ControlFlowFlattening = 'ControlFlowFlattening';
            j.Converting = 'Converting';
            j.Obfuscating = 'Obfuscating';
            j.Finalizing = 'Finalizing';
        }(d.TransformationStage || (d.TransformationStage = {})));
    },
    function (h, j, k) {
        'use strict';
        var q;
        var v;
        var w = this && this.__decorate || function (F, G, H, I) {
            var L;
            var M = arguments.length;
            var N = M < 3 ? G : null === I ? I = Object.getOwnPropertyDescriptor(G, H) : I;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                N = Reflect.decorate(F, G, H, I);
            } else {
                for (var O = F.length - 1; O >= 0; O--)
                    if (L = F[O]) {
                        N = (M < 3 ? L(N) : M > 3 ? L(G, H, N) : L(G, H)) || N;
                    }
            }
            if (M > 3 && N) {
                Object.defineProperty(G, H, N);
            }
            return N;
        };
        var x = this && this.__metadata || function (F, G) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(F, G);
            }
        };
        var y = this && this.__param || function (F, G) {
            return function (K, L) {
                G(K, L, F);
            };
        };
        Object.defineProperty(j, '__esModule', z);
        const A = k(0);
        const B = k(1);
        const C = k(2);
        const D = k(3);
        let E = class {
            constructor(F, G) {
                this.randomGenerator = F;
                this.options = G;
            }
        };
        E = w([
            A.injectable(),
            y(0, A.inject(B.ServiceIdentifiers.IRandomGenerator)),
            y(1, A.inject(B.ServiceIdentifiers.IOptions)),
            x('design:paramtypes', [
                'function' == typeof (q = void 0 !== D.IRandomGenerator && D.IRandomGenerator) ? q : Object,
                'function' == typeof (v = void 0 !== C.IOptions && C.IOptions) ? v : Object
            ])
        ], E);
        j.AbstractNodeTransformer = E;
    },
    function (b, c) {
        b.exports = require('estraverse');
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (j, k, q) {
        'use strict';
        var x;
        var z;
        var A;
        var B;
        var C = this && this.__decorate || function (N, O, P, Q) {
            var R;
            var S = arguments.length;
            var T = S < 3 ? O : null === Q ? Q = Object.getOwnPropertyDescriptor(O, P) : Q;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                T = Reflect.decorate(N, O, P, Q);
            } else {
                for (var U = N.length - 1; U >= 0; U--)
                    if (R = N[U]) {
                        T = (S < 3 ? R(T) : S > 3 ? R(O, P, T) : R(O, P)) || T;
                    }
            }
            if (S > 3 && T) {
                Object.defineProperty(O, P, T);
            }
            return T;
        };
        var D = this && this.__metadata || function (N, O) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(N, O);
            }
        };
        var E = this && this.__param || function (N, O) {
            return function (S, T) {
                O(S, T, N);
            };
        };
        Object.defineProperty(k, '__esModule', F);
        const G = q(0);
        const H = q(1);
        const I = q(5);
        const J = q(9);
        const K = q(2);
        const L = q(3);
        let M = class {
            constructor(N, O, P, Q) {
                this.cachedNode = null;
                this.identifierNamesGenerator = N(Q);
                this.customCodeHelperFormatter = O;
                this.randomGenerator = P;
                this.options = Q;
            }
            getNode() {
                this.cachedNode || (this.cachedNode = this.customCodeHelperFormatter.formatStructure(this.getNodeStructure()));
                return this.cachedNode;
            }
        };
        M = C([
            G.injectable(),
            E(0, G.inject(H.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            E(1, G.inject(H.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            E(2, G.inject(H.ServiceIdentifiers.IRandomGenerator)),
            E(3, G.inject(H.ServiceIdentifiers.IOptions)),
            D('design:paramtypes', [
                'function' == typeof (x = void 0 !== I.TIdentifierNamesGeneratorFactory && I.TIdentifierNamesGeneratorFactory) ? x : Object,
                'function' == typeof (z = void 0 !== J.ICustomCodeHelperFormatter && J.ICustomCodeHelperFormatter) ? z : Object,
                'function' == typeof (A = void 0 !== L.IRandomGenerator && L.IRandomGenerator) ? A : Object,
                'function' == typeof (B = void 0 !== K.IOptions && K.IOptions) ? B : Object
            ])
        ], M);
        k.AbstractCustomNode = M;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E;
        var F;
        var G;
        var H = this && this.__decorate || function (X, Y, Z, a0) {
            var a3;
            var a4 = arguments.length;
            var a5 = a4 < 3 ? Y : null === a0 ? a0 = Object.getOwnPropertyDescriptor(Y, Z) : a0;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a5 = Reflect.decorate(X, Y, Z, a0);
            } else {
                for (var a6 = X.length - 1; a6 >= 0; a6--)
                    if (a3 = X[a6]) {
                        a5 = (a4 < 3 ? a3(a5) : a4 > 3 ? a3(Y, Z, a5) : a3(Y, Z)) || a5;
                    }
            }
            if (a4 > 3 && a5) {
                Object.defineProperty(Y, Z, a5);
            }
            return a5;
        };
        var J = this && this.__metadata || function (X, Y) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(X, Y);
            }
        };
        var K = this && this.__param || function (X, Y) {
            return function (a2, a3) {
                Y(a2, a3, X);
            };
        };
        Object.defineProperty(w, '__esModule', L);
        const M = x(0);
        const O = x(1);
        const P = x(5);
        const Q = x(9);
        const R = x(13);
        const S = x(2);
        const T = x(3);
        const U = x(117);
        const V = x(118);
        let W = B = class {
            constructor(X, Y, Z, a0, a1) {
                this.cachedNode = null;
                this.identifierNamesGenerator = X(a1);
                this.customCodeHelperFormatter = Y;
                this.customCodeHelperObfuscator = Z;
                this.randomGenerator = a0;
                this.options = a1;
            }
            getNode() {
                if (!this.cachedNode) {
                    const Y = this.getCodeHelperTemplate();
                    this.cachedNode = this.customCodeHelperFormatter.formatStructure(this.getNodeStructure(Y));
                }
                return this.cachedNode;
            }
            getGlobalVariableTemplate() {
                return this.randomGenerator.getRandomGenerator().pickone(B.globalVariableTemplateFunctions);
            }
            getCodeHelperTemplate() {
                return '';
            }
        };
        W.globalVariableTemplateFunctions = [
            U.GlobalVariableTemplate1(),
            V.GlobalVariableTemplate2()
        ];
        W = B = H([
            M.injectable(),
            K(0, M.inject(O.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            K(1, M.inject(O.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            K(2, M.inject(O.ServiceIdentifiers.ICustomCodeHelperObfuscator)),
            K(3, M.inject(O.ServiceIdentifiers.IRandomGenerator)),
            K(4, M.inject(O.ServiceIdentifiers.IOptions)),
            J('design:paramtypes', [
                'function' == typeof (C = void 0 !== P.TIdentifierNamesGeneratorFactory && P.TIdentifierNamesGeneratorFactory) ? C : Object,
                'function' == typeof (D = void 0 !== Q.ICustomCodeHelperFormatter && Q.ICustomCodeHelperFormatter) ? D : Object,
                'function' == typeof (E = void 0 !== R.ICustomCodeHelperObfuscator && R.ICustomCodeHelperObfuscator) ? E : Object,
                'function' == typeof (F = void 0 !== T.IRandomGenerator && T.IRandomGenerator) ? F : Object,
                'function' == typeof (G = void 0 !== S.IOptions && S.IOptions) ? G : Object
            ])
        ], W);
        w.AbstractCustomCodeHelper = W;
    },
    function (q, w, x) {
        'use strict';
        Object.defineProperty(w, '__esModule', B);
        const D = x(0);
        const E = x(1);
        const F = x(75);
        const G = x(85);
        const H = x(98);
        const J = x(109);
        const K = x(149);
        const L = x(162);
        const M = x(163);
        const P = x(167);
        const Q = x(170);
        const R = x(171);
        const T = x(180);
        const U = x(202);
        const V = x(217);
        const W = x(222);
        const X = x(232);
        const Y = x(73);
        const Z = x(236);
        const a0 = x(238);
        const a1 = x(239);
        const a2 = x(240);
        w.InversifyContainerFacade = class {
            constructor() {
                this.container = new D.Container();
            }
            static getFactory(a3) {
                return a5 => a6 => a5.container.getNamed(a3, a6);
            }
            static getCacheFactory(a3) {
                return a6 => {
                    const a7 = new Map();
                    return a8 => {
                        if (a7.has(a8)) {
                            return a7.get(a8);
                        }
                        const aa = a6.container.getNamed(a3, a8);
                        a7.set(a8, aa);
                        return aa;
                    };
                };
            }
            static getConstructorFactory(a3, ...a4) {
                return a7 => {
                    const ab = new Map();
                    const ac = [];
                    return ad => {
                        if (a4.forEach((ah, ai) => {
                                ac[ai] || (ac[ai] = a7.container.get(ah));
                            }), ab.has(ad)) {
                            return new (ab.get(ad))(...ac);
                        }
                        const ag = a7.container.getNamed(a3, ad);
                        ab.set(ad, ag);
                        return new ag(...ac);
                    };
                };
            }
            get(a3) {
                return this.container.get(a3);
            }
            getNamed(a3, a4) {
                return this.container.getNamed(a3, a4);
            }
            load(a3, a4, a5) {
                this.container.bind(E.ServiceIdentifiers.ISourceCode).toDynamicValue(() => new a1.SourceCode(a3, a4)).inSingletonScope();
                this.container.bind(E.ServiceIdentifiers.TInputOptions).toDynamicValue(() => a5).inSingletonScope();
                this.container.bind(E.ServiceIdentifiers.ILogger).to(Y.Logger).inSingletonScope();
                this.container.bind(E.ServiceIdentifiers.IJavaScriptObfuscator).to(X.JavaScriptObfuscator).inSingletonScope();
                this.container.bind(E.ServiceIdentifiers.ITransformersRunner).to(a2.TransformersRunner).inSingletonScope();
                this.container.bind(E.ServiceIdentifiers.IObfuscatedCode).to(a0.ObfuscatedCode);
                this.container.bind(E.ServiceIdentifiers.Factory__IObfuscatedCode).toFactory(a8 => (a9, aa) => {
                    const ac = a8.container.get(E.ServiceIdentifiers.IObfuscatedCode);
                    ac.initialize(a9, aa);
                    return ac;
                });
                this.container.bind(E.ServiceIdentifiers.IObfuscationEventEmitter).to(Z.ObfuscationEventEmitter).inSingletonScope();
                this.container.load(F.analyzersModule);
                this.container.load(G.controlFlowTransformersModule);
                this.container.load(H.convertingTransformersModule);
                this.container.load(J.customCodeHelpersModule);
                this.container.load(K.customNodesModule);
                this.container.load(L.finalizingTransformersModule);
                this.container.load(M.generatorsModule);
                this.container.load(P.nodeModule);
                this.container.load(Q.nodeTransformersModule);
                this.container.load(R.obfuscatingTransformersModule);
                this.container.load(T.optionsModule);
                this.container.load(U.preparingTransformersModule);
                this.container.load(V.storagesModule);
                this.container.load(W.utilsModule);
            }
            unload() {
                this.container.unbindAll();
            }
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        const j = f(4);
        class k {
            static getParentNodeWithStatements(l) {
                return k.getParentNodesWithStatementsRecursive(l, 1)[0];
            }
            static getParentNodesWithStatements(l) {
                return k.getParentNodesWithStatementsRecursive(l);
            }
            static getNextSiblingStatement(l) {
                return k.getSiblingStatementByOffset(l, 1);
            }
            static getPreviousSiblingStatement(l) {
                return k.getSiblingStatementByOffset(l, -1);
            }
            static getRootStatementOfNode(l) {
                if (j.NodeGuards.isProgramNode(l)) {
                    throw new Error('Unable to find root statement for `Program` node');
                }
                const p = l.parentNode;
                if (!p) {
                    throw new ReferenceError('`parentNode` property of given node is `undefined`');
                }
                if (j.NodeGuards.isNodeWithStatements(p)) {
                    return l;
                } else {
                    return k.getRootStatementOfNode(p);
                }
            }
            static getScopeOfNode(l) {
                const s = l.parentNode;
                if (!s) {
                    throw new ReferenceError('`parentNode` property of given node is `undefined`');
                }
                if (j.NodeGuards.isNodeWithStatements(s)) {
                    return s;
                } else {
                    return k.getScopeOfNode(s);
                }
            }
            static getParentNodesWithStatementsRecursive(l, m = 1e+400, p = [], q = 0) {
                if (p.length >= m) {
                    return p;
                }
                const v = l.parentNode;
                if (!v) {
                    throw new ReferenceError('`parentNode` property of given node is `undefined`');
                }
                if (j.NodeGuards.isProgramNode(l) || j.NodeGuards.isNodeWithLexicalScopeStatements(l, v) && q > 0) {
                    p.push(l);
                }
                return l !== v ? k.getParentNodesWithStatementsRecursive(v, m, p, ++q) : p;
            }
            static getSiblingStatementByOffset(l, m) {
                const s = k.getScopeOfNode(l);
                const u = j.NodeGuards.isSwitchCaseNode(s) ? s.consequent : s.body;
                const v = u.indexOf(l);
                return u[v + m] || null;
            }
        }
        d.NodeStatementUtils = k;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        class j {
            static set(k, l) {
                var m;
                k.metadata = Object.assign(null !== (m = k.metadata) && void 0 !== m ? m : {}, l);
            }
            static get(k, l) {
                if (void 0 !== k.metadata) {
                    return k.metadata[l];
                } else {
                    return void 0;
                }
            }
            static isIgnoredNode(k) {
                return !0 === j.get(k, 'ignoredNode');
            }
            static isReplacedLiteral(k) {
                return !0 === j.get(k, 'replacedLiteral');
            }
        }
        d.NodeMetadata = j;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.BinaryExpressionFunctionNode = 'BinaryExpressionFunctionNode';
            j.BlockStatementControlFlowFlatteningNode = 'BlockStatementControlFlowFlatteningNode';
            j.CallExpressionControlFlowStorageCallNode = 'CallExpressionControlFlowStorageCallNode';
            j.CallExpressionFunctionNode = 'CallExpressionFunctionNode';
            j.ControlFlowStorageNode = 'ControlFlowStorageNode';
            j.ExpressionWithOperatorControlFlowStorageCallNode = 'ExpressionWithOperatorControlFlowStorageCallNode';
            j.LogicalExpressionFunctionNode = 'LogicalExpressionFunctionNode';
            j.StringLiteralControlFlowStorageCallNode = 'StringLiteralControlFlowStorageCallNode';
            j.StringLiteralNode = 'StringLiteralNode';
        }(d.ControlFlowCustomNode || (d.ControlFlowCustomNode = {})));
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        const j = f(4);
        class k {
            static append(l, m) {
                m = k.parentizeScopeStatementsBeforeAppend(l, m);
                k.setScopeStatements(l, [
                    ...k.getScopeStatements(l),
                    ...m
                ]);
            }
            static appendToOptimalBlockScope(l, m, p, q = 0) {
                const u = l.length ? k.getOptimalBlockScope(l, q) : m;
                k.prepend(u, p);
            }
            static getOptimalBlockScope(l, m, p = 1e+400) {
                const u = l[m];
                if (p <= 0) {
                    throw new Error('Invalid `deep` argument value. Value should be bigger then 0.');
                }
                if (p > 1 && u.callsGraph.length) {
                    return k.getOptimalBlockScope(u.callsGraph, 0, --p);
                } else {
                    return u.callee;
                }
            }
            static insertBefore(l, m, p) {
                const u = k.getScopeStatements(l).indexOf(p);
                k.insertAtIndex(l, m, u);
            }
            static insertAfter(l, m, p) {
                const q = k.getScopeStatements(l).indexOf(p);
                k.insertAtIndex(l, m, q + 1);
            }
            static insertAtIndex(l, m, p) {
                m = k.parentizeScopeStatementsBeforeAppend(l, m);
                k.setScopeStatements(l, [
                    ...k.getScopeStatements(l).slice(0, p),
                    ...m,
                    ...k.getScopeStatements(l).slice(p)
                ]);
            }
            static prepend(l, m) {
                m = k.parentizeScopeStatementsBeforeAppend(l, m);
                k.setScopeStatements(l, [
                    ...m,
                    ...k.getScopeStatements(l)
                ]);
            }
            static getScopeStatements(l) {
                if (j.NodeGuards.isSwitchCaseNode(l)) {
                    return l.consequent;
                } else {
                    return l.body;
                }
            }
            static parentizeScopeStatementsBeforeAppend(l, m) {
                m.forEach(s => {
                    s.parentNode = l;
                });
                return m;
            }
            static setScopeStatements(l, m) {
                if (j.NodeGuards.isSwitchCaseNode(l)) {
                    l.consequent = m;
                } else {
                    l.body = m;
                }
            }
        }
        d.NodeAppender = k;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        const j = f(4);
        class k {
            static getLexicalScope(l) {
                return k.getLexicalScopesRecursive(l, 1)[0];
            }
            static getLexicalScopes(l) {
                return k.getLexicalScopesRecursive(l);
            }
            static getLexicalScopesRecursive(l, m = 1e+400, p = [], q = 0) {
                if (p.length >= m) {
                    return p;
                }
                const u = l.parentNode;
                if (!u) {
                    throw new ReferenceError('`parentNode` property of given node is `undefined`');
                }
                if (j.NodeGuards.isNodeWithLexicalScope(l)) {
                    p.push(l);
                }
                return l !== u ? k.getLexicalScopesRecursive(u, m, p, ++q) : p;
            }
        }
        d.NodeLexicalScopeUtils = k;
    },
    function (d, f, g) {
        'use strict';
        Object.defineProperty(f, '__esModule', j);
        const k = g(31);
        const l = {
            Browser: 'browser',
            BrowserNoEval: 'browser-no-eval',
            Node: 'node'
        };
        f.ObfuscationTarget = k.MakeEnum(l);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.BlockStatementControlFlowTransformer = 'BlockStatementControlFlowTransformer';
            j.CommentsTransformer = 'CommentsTransformer';
            j.CustomCodeHelpersTransformer = 'CustomCodeHelpersTransformer';
            j.DeadCodeInjectionTransformer = 'DeadCodeInjectionTransformer';
            j.EvalCallExpressionTransformer = 'EvalCallExpressionTransformer';
            j.FunctionControlFlowTransformer = 'FunctionControlFlowTransformer';
            j.LabeledStatementTransformer = 'LabeledStatementTransformer';
            j.LiteralTransformer = 'LiteralTransformer';
            j.MemberExpressionTransformer = 'MemberExpressionTransformer';
            j.MetadataTransformer = 'MetadataTransformer';
            j.MethodDefinitionTransformer = 'MethodDefinitionTransformer';
            j.ObfuscatingGuardsTransformer = 'ObfuscatingGuardsTransformer';
            j.ObjectExpressionKeysTransformer = 'ObjectExpressionKeysTransformer';
            j.ObjectExpressionTransformer = 'ObjectExpressionTransformer';
            j.ParentificationTransformer = 'ParentificationTransformer';
            j.ScopeIdentifiersTransformer = 'ScopeIdentifiersTransformer';
            j.SplitStringTransformer = 'SplitStringTransformer';
            j.TemplateLiteralTransformer = 'TemplateLiteralTransformer';
            j.VariablePreserveTransformer = 'VariablePreserveTransformer';
        }(d.NodeTransformer || (d.NodeTransformer = {})));
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.AfterObfuscation = 'afterObfuscation';
            j.BeforeObfuscation = 'beforeObfuscation';
        }(d.ObfuscationEvent || (d.ObfuscationEvent = {})));
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        class j {
            static buildVersionMessage(k, l) {
                if (!k || !l) {
                    return 'unknown';
                }
                return k + '_' + new Date(parseInt(l, 10)).toISOString();
            }
            static extractDomainFrom(k) {
                let l;
                l = k.includes('://') || 0 === k.indexOf('//') ? k.split('/')[2] : k.split('/')[0];
                l = l.split(':')[0];
                return l;
            }
        }
        d.Utils = j;
        j.hexadecimalPrefix = '0x';
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.CallsControllerFunction = 'CallsControllerFunction';
            j.ConsoleOutputDisable = 'ConsoleOutputDisable';
            j.DebugProtectionFunctionCall = 'DebugProtectionFunctionCall';
            j.DebugProtectionFunctionInterval = 'DebugProtectionFunctionInterval';
            j.DebugProtectionFunction = 'DebugProtectionFunction';
            j.DomainLock = 'DomainLock';
            j.SelfDefendingUnicode = 'SelfDefendingUnicode';
            j.StringArrayCallsWrapper = 'StringArrayCallsWrapper';
            j.StringArray = 'StringArray';
            j.StringArrayRotateFunction = 'StringArrayRotateFunction';
        }(d.CustomCodeHelper || (d.CustomCodeHelper = {})));
    },
    function (d, f, g) {
        'use strict';
        Object.defineProperty(f, '__esModule', j);
        const k = g(31);
        const l = {
            Base64: 'base64',
            Rc4: 'rc4'
        };
        f.StringArrayEncoding = k.MakeEnum(l);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (h, j, k) {
        'use strict';
        var w;
        var x;
        var y;
        var z = this && this.__decorate || function (J, K, L, M) {
            var P;
            var Q = arguments.length;
            var R = Q < 3 ? K : null === M ? M = Object.getOwnPropertyDescriptor(K, L) : M;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                R = Reflect.decorate(J, K, L, M);
            } else {
                for (var S = J.length - 1; S >= 0; S--)
                    if (P = J[S]) {
                        R = (Q < 3 ? P(R) : Q > 3 ? P(K, L, R) : P(K, L)) || R;
                    }
            }
            if (Q > 3 && R) {
                Object.defineProperty(K, L, R);
            }
            return R;
        };
        var A = this && this.__metadata || function (J, K) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(J, K);
            }
        };
        var B = this && this.__param || function (J, K) {
            return function (N, O) {
                K(N, O, J);
            };
        };
        Object.defineProperty(j, '__esModule', C);
        const D = k(0);
        const E = k(1);
        const F = k(5);
        const G = k(2);
        const H = k(3);
        let I = class {
            constructor(J, K, L) {
                this.identifierNamesGenerator = J(L);
                this.randomGenerator = K;
                this.options = L;
            }
            getAppendEvent() {
                return this.appendEvent;
            }
            getCustomCodeHelpers() {
                return this.customCodeHelpers;
            }
            appendCustomNodeIfExist(J, K) {
                const L = this.customCodeHelpers.get(J);
                if (L) {
                    K(L);
                }
            }
            getRandomCallsGraphIndex(J) {
                return this.randomGenerator.getRandomInteger(0, Math.max(0, Math.round(J - 1)));
            }
        };
        I = z([
            D.injectable(),
            B(0, D.inject(E.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            B(1, D.inject(E.ServiceIdentifiers.IRandomGenerator)),
            B(2, D.inject(E.ServiceIdentifiers.IOptions)),
            A('design:paramtypes', [
                'function' == typeof (w = void 0 !== F.TIdentifierNamesGeneratorFactory && F.TIdentifierNamesGeneratorFactory) ? w : Object,
                'function' == typeof (x = void 0 !== H.IRandomGenerator && H.IRandomGenerator) ? x : Object,
                'function' == typeof (y = void 0 !== G.IOptions && G.IOptions) ? y : Object
            ])
        ], I);
        j.AbstractCustomCodeHelperGroup = I;
    },
    function (b, c) {
        b.exports = require('@gradecam/tsenum');
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (d, f, g) {
        'use strict';
        Object.defineProperty(f, '__esModule', j);
        const k = g(31);
        const l = {
            DictionaryIdentifierNamesGenerator: 'dictionary',
            HexadecimalIdentifierNamesGenerator: 'hexadecimal',
            MangledIdentifierNamesGenerator: 'mangled'
        };
        f.IdentifierNamesGenerator = k.MakeEnum(l);
    },
    function (d, f, g) {
        'use strict';
        Object.defineProperty(f, '__esModule', j);
        const k = g(31);
        const l = {
            Inline: 'inline',
            Separate: 'separate'
        };
        f.SourceMapMode = k.MakeEnum(l);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.ArrayExpression = 'ArrayExpression';
            j.ArrayPattern = 'ArrayPattern';
            j.ArrowFunctionExpression = 'ArrowFunctionExpression';
            j.AssignmentExpression = 'AssignmentExpression';
            j.AssignmentPattern = 'AssignmentPattern';
            j.AwaitExpression = 'AwaitExpression';
            j.BinaryExpression = 'BinaryExpression';
            j.BlockStatement = 'BlockStatement';
            j.BreakStatement = 'BreakStatement';
            j.CallExpression = 'CallExpression';
            j.CatchClause = 'CatchClause';
            j.ClassDeclaration = 'ClassDeclaration';
            j.ConditionalExpression = 'ConditionalExpression';
            j.ContinueStatement = 'ContinueStatement';
            j.ExportNamedDeclaration = 'ExportNamedDeclaration';
            j.ExpressionStatement = 'ExpressionStatement';
            j.ForStatement = 'ForStatement';
            j.ForInStatement = 'ForInStatement';
            j.ForOfStatement = 'ForOfStatement';
            j.FunctionDeclaration = 'FunctionDeclaration';
            j.FunctionExpression = 'FunctionExpression';
            j.Identifier = 'Identifier';
            j.IfStatement = 'IfStatement';
            j.ImportDeclaration = 'ImportDeclaration';
            j.ImportDefaultSpecifier = 'ImportDefaultSpecifier';
            j.ImportNamespaceSpecifier = 'ImportNamespaceSpecifier';
            j.ImportSpecifier = 'ImportSpecifier';
            j.LabeledStatement = 'LabeledStatement';
            j.Literal = 'Literal';
            j.LogicalExpression = 'LogicalExpression';
            j.MemberExpression = 'MemberExpression';
            j.MethodDefinition = 'MethodDefinition';
            j.ObjectExpression = 'ObjectExpression';
            j.ObjectPattern = 'ObjectPattern';
            j.Program = 'Program';
            j.Property = 'Property';
            j.RestElement = 'RestElement';
            j.ReturnStatement = 'ReturnStatement';
            j.SequenceExpression = 'SequenceExpression';
            j.Super = 'Super';
            j.SwitchCase = 'SwitchCase';
            j.SwitchStatement = 'SwitchStatement';
            j.TaggedTemplateExpression = 'TaggedTemplateExpression';
            j.TemplateLiteral = 'TemplateLiteral';
            j.TryStatement = 'TryStatement';
            j.UnaryExpression = 'UnaryExpression';
            j.UpdateExpression = 'UpdateExpression';
            j.VariableDeclaration = 'VariableDeclaration';
            j.VariableDeclarator = 'VariableDeclarator';
            j.WhileStatement = 'WhileStatement';
        }(d.NodeType || (d.NodeType = {})));
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.NumberUtils = class {
            static toHex(j) {
                return j.toString(16);
            }
            static isCeil(j) {
                return j % 1 == 0;
            }
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.BaseIdentifierObfuscatingReplacer = 'BaseIdentifierObfuscatingReplacer';
        }(d.IdentifierObfuscatingReplacer || (d.IdentifierObfuscatingReplacer = {})));
    },
    function (g, h, j) {
        'use strict';
        var p;
        var q = this && this.__decorate || function (B, C, D, E) {
            var H;
            var I = arguments.length;
            var J = I < 3 ? C : null === E ? E = Object.getOwnPropertyDescriptor(C, D) : E;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                J = Reflect.decorate(B, C, D, E);
            } else {
                for (var K = B.length - 1; K >= 0; K--)
                    if (H = B[K]) {
                        J = (I < 3 ? H(J) : I > 3 ? H(C, D, J) : H(C, D)) || J;
                    }
            }
            if (I > 3 && J) {
                Object.defineProperty(C, D, J);
            }
            return J;
        };
        var u = this && this.__metadata || function (B, C) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(B, C);
            }
        };
        var v = this && this.__param || function (B, C) {
            return function (F, G) {
                C(F, G, B);
            };
        };
        Object.defineProperty(h, '__esModule', w);
        const x = j(0);
        const y = j(1);
        const z = j(2);
        let A = class {
            constructor(B) {
                this.options = B;
            }
        };
        A = q([
            x.injectable(),
            v(0, x.inject(y.ServiceIdentifiers.IOptions)),
            u('design:paramtypes', ['function' == typeof (p = void 0 !== z.IOptions && z.IOptions) ? p : Object])
        ], A);
        h.AbstractObfuscatingReplacer = A;
    },
    function (d, f, g) {
        'use strict';
        Object.defineProperty(f, '__esModule', k);
        const l = g(33);
        const m = g(23);
        const p = g(34);
        const q = {
            compact: !0,
            config: '',
            controlFlowFlattening: !1,
            debugProtection: !1,
            debugProtectionInterval: !1,
            disableConsoleOutput: !1,
            exclude: [],
            identifierNamesGenerator: l.IdentifierNamesGenerator.HexadecimalIdentifierNamesGenerator,
            identifiersPrefix: '',
            identifiersDictionary: [],
            inputFileName: '',
            renameGlobals: !1,
            reservedNames: [],
            reservedStrings: [],
            rotateStringArray: !0,
            shuffleStringArray: !0,
            sourceMapBaseUrl: '',
            sourceMapMode: p.SourceMapMode.Separate,
            splitStrings: !1,
            splitStringsChunkLength: 10,
            transformObjectKeys: !1,
            unicodeEscapeSequence: !1
        };
        f.DEFAULT_PRESET = Object.freeze(q);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.Dot = '.';
            j.Comma = ',';
        }(d.StringSeparator || (d.StringSeparator = {})));
    },
    function (c, d, f) {
        'use strict';
        var i = this && this.__decorate || function (l, m, p, q) {
            var u;
            var v = arguments.length;
            var w = v < 3 ? m : null === q ? q = Object.getOwnPropertyDescriptor(m, p) : q;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                w = Reflect.decorate(l, m, p, q);
            } else {
                for (var x = l.length - 1; x >= 0; x--)
                    if (u = l[x]) {
                        w = (v < 3 ? u(w) : v > 3 ? u(m, p, w) : u(m, p)) || w;
                    }
            }
            if (v > 3 && w) {
                Object.defineProperty(m, p, w);
            }
            return w;
        };
        Object.defineProperty(d, '__esModule', j);
        let k = class {
        };
        k = i([f(0).injectable()], k);
        d.AbstractCalleeDataExtractor = k;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.ecmaVersion = 11;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        const j = f(4);
        d.NodeLiteralUtils = class {
            static isProhibitedLiteralNode(k, l) {
                return !(!j.NodeGuards.isPropertyNode(l) || l.computed || l.key !== k) || !!j.NodeGuards.isImportDeclarationNode(l);
            }
        };
    },
    function (j, k, q) {
        'use strict';
        var x;
        var y;
        var z;
        var A;
        var B = this && this.__decorate || function (L, M, N, O) {
            var R;
            var S = arguments.length;
            var T = S < 3 ? M : null === O ? O = Object.getOwnPropertyDescriptor(M, N) : O;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                T = Reflect.decorate(L, M, N, O);
            } else {
                for (var U = L.length - 1; U >= 0; U--)
                    if (R = L[U]) {
                        T = (S < 3 ? R(T) : S > 3 ? R(M, N, T) : R(M, N)) || T;
                    }
            }
            if (S > 3 && T) {
                Object.defineProperty(M, N, T);
            }
            return T;
        };
        var C = this && this.__metadata || function (L, M) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(L, M);
            }
        };
        var D = this && this.__param || function (L, M) {
            return function (N, O) {
                M(N, O, L);
            };
        };
        Object.defineProperty(k, '__esModule', E);
        const F = q(0);
        const G = q(1);
        const H = q(19);
        const I = q(2);
        const J = q(3);
        let K = x = class {
            constructor(L, M, N) {
                this.replacerDataByControlFlowStorageId = new Map();
                this.controlFlowCustomNodeFactory = L;
                this.randomGenerator = M;
                this.options = N;
            }
            static getStorageKeysByIdForCurrentStorage(L, M) {
                let Q;
                Q = L.has(M) ? L.get(M) : new Map();
                return Q;
            }
            insertCustomNodeToControlFlowStorage(L, M, N, O) {
                const S = M.getStorageId();
                const T = x.getStorageKeysByIdForCurrentStorage(this.replacerDataByControlFlowStorageId, S);
                const U = T.get(N);
                if (this.randomGenerator.getMathRandom() < O && U && U.length) {
                    return this.randomGenerator.getRandomGenerator().pickone(U);
                }
                const V = X => {
                    const Z = this.randomGenerator.getRandomString(X);
                    if (M.getStorage().has(Z)) {
                        return V(X);
                    } else {
                        return Z;
                    }
                };
                const W = V(5);
                T.set(N, [W]);
                this.replacerDataByControlFlowStorageId.set(S, T);
                M.set(W, L);
                return W;
            }
        };
        K = x = B([
            F.injectable(),
            D(0, F.inject(G.ServiceIdentifiers.Factory__IControlFlowCustomNode)),
            D(1, F.inject(G.ServiceIdentifiers.IRandomGenerator)),
            D(2, F.inject(G.ServiceIdentifiers.IOptions)),
            C('design:paramtypes', [
                'function' == typeof (y = void 0 !== H.TControlFlowCustomNodeFactory && H.TControlFlowCustomNodeFactory) ? y : Object,
                'function' == typeof (z = void 0 !== J.IRandomGenerator && J.IRandomGenerator) ? z : Object,
                'function' == typeof (A = void 0 !== I.IOptions && I.IOptions) ? A : Object
            ])
        ], K);
        k.AbstractControlFlowReplacer = K;
    },
    function (b, c) {
        b.exports = require('escodegen');
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.GlobalVariableNoEvalTemplate = function () {
            return '\n        const that = (typeof window !== \'undefined\'\n           ? window\n           : (typeof process === \'object\' &&\n              typeof require === \'function\' &&\n              typeof global === \'object\')\n             ? global\n             : this);\n    ';
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (h, j, k) {
        'use strict';
        var v;
        var w;
        var x = this && this.__decorate || function (H, I, J, K) {
            var L;
            var M = arguments.length;
            var N = M < 3 ? I : null === K ? K = Object.getOwnPropertyDescriptor(I, J) : K;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                N = Reflect.decorate(H, I, J, K);
            } else {
                for (var O = H.length - 1; O >= 0; O--)
                    if (L = H[O]) {
                        N = (M < 3 ? L(N) : M > 3 ? L(I, J, N) : L(I, J)) || N;
                    }
            }
            if (M > 3 && N) {
                Object.defineProperty(I, J, N);
            }
            return N;
        };
        var y = this && this.__metadata || function (H, I) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(H, I);
            }
        };
        var z = this && this.__param || function (H, I) {
            return function (M, N) {
                I(M, N, H);
            };
        };
        Object.defineProperty(j, '__esModule', A);
        const B = k(0);
        const C = k(1);
        const D = k(2);
        const E = k(3);
        const F = k(4);
        let G = class {
            constructor(H, I) {
                this.preservedNamesSet = new Set();
                this.lexicalScopesPreservedNamesMap = new Map();
                this.randomGenerator = H;
                this.options = I;
            }
            generate(H, I) {
                if (F.NodeGuards.isProgramNode(H)) {
                    return this.generateForGlobalScope();
                } else {
                    return this.generateForLexicalScope(H);
                }
            }
            preserveName(H) {
                this.preservedNamesSet.add(H);
            }
            preserveNameForLexicalScope(H, I) {
                var L;
                const N = null !== (L = this.lexicalScopesPreservedNamesMap.get(I)) && void 0 !== L ? L : new Set();
                N.add(H);
                this.lexicalScopesPreservedNamesMap.set(I, N);
            }
            isValidIdentifierName(H) {
                return this.notReservedName(H) && !this.preservedNamesSet.has(H);
            }
            isValidIdentifierNameInLexicalScopes(H, I) {
                var L;
                if (!this.isValidIdentifierName(H)) {
                    return !1;
                }
                for (const M of I) {
                    const N = null !== (L = this.lexicalScopesPreservedNamesMap.get(M)) && void 0 !== L ? L : null;
                    if (N && N.has(H)) {
                        return !1;
                    }
                }
                return !0;
            }
            notReservedName(H) {
                return !this.options.reservedNames.length || !this.options.reservedNames.some(L => null !== new RegExp(L, 'g').exec(H));
            }
        };
        G = x([
            B.injectable(),
            z(0, B.inject(C.ServiceIdentifiers.IRandomGenerator)),
            z(1, B.inject(C.ServiceIdentifiers.IOptions)),
            y('design:paramtypes', [
                'function' == typeof (v = void 0 !== E.IRandomGenerator && E.IRandomGenerator) ? v : Object,
                'function' == typeof (w = void 0 !== D.IOptions && D.IOptions) ? w : Object
            ])
        ], G);
        j.AbstractIdentifierNamesGenerator = G;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (h, j, k) {
        'use strict';
        var w;
        var x;
        var y;
        var z = this && this.__decorate || function (J, K, L, M) {
            var N;
            var O = arguments.length;
            var P = O < 3 ? K : null === M ? M = Object.getOwnPropertyDescriptor(K, L) : M;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                P = Reflect.decorate(J, K, L, M);
            } else {
                for (var Q = J.length - 1; Q >= 0; Q--)
                    if (N = J[Q]) {
                        P = (O < 3 ? N(P) : O > 3 ? N(K, L, P) : N(K, L)) || P;
                    }
            }
            if (O > 3 && P) {
                Object.defineProperty(K, L, P);
            }
            return P;
        };
        var A = this && this.__metadata || function (J, K) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(J, K);
            }
        };
        var B = this && this.__param || function (J, K) {
            return function (M, N) {
                K(M, N, J);
            };
        };
        Object.defineProperty(j, '__esModule', C);
        const D = k(0);
        const E = k(1);
        const F = k(2);
        const G = k(3);
        const H = k(7);
        let I = class {
            constructor(J, K) {
                this.randomGenerator = J;
                this.options = K;
            }
            initialize() {
                this.storage = new Map();
                this.storageId = this.randomGenerator.getRandomString(6);
            }
            get(J) {
                return this.storage.get(J);
            }
            getOrThrow(J) {
                const M = this.get(J);
                if (!M) {
                    throw new Error('No value found in map storage with key `' + J + '`');
                }
                return M;
            }
            getKeyOf(J) {
                for (const [L, M] of this.storage)
                    if (J === M) {
                        return L;
                    }
                return null;
            }
            getLength() {
                return this.storage.size;
            }
            getStorage() {
                return this.storage;
            }
            getStorageId() {
                return this.storageId;
            }
            has(J) {
                return this.storage.has(J);
            }
            mergeWith(J, K = !1) {
                this.storage = new Map([
                    ...this.storage,
                    ...J.getStorage()
                ]);
                if (K) {
                    this.storageId = J.getStorageId();
                }
            }
            set(J, K) {
                this.storage.set(J, K);
            }
        };
        z([
            H.initializable(),
            A('design:type', String)
        ], I.prototype, 'storageId', void 0);
        z([
            H.initializable(),
            A('design:type', 'function' == typeof (w = 'undefined' != typeof Map && Map) ? w : Object)
        ], I.prototype, 'storage', void 0);
        z([
            D.postConstruct(),
            A('design:type', Function),
            A('design:paramtypes', []),
            A('design:returntype', void 0)
        ], I.prototype, 'initialize', null);
        I = z([
            D.injectable(),
            B(0, D.inject(E.ServiceIdentifiers.IRandomGenerator)),
            B(1, D.inject(E.ServiceIdentifiers.IOptions)),
            A('design:paramtypes', [
                'function' == typeof (x = void 0 !== G.IRandomGenerator && G.IRandomGenerator) ? x : Object,
                'function' == typeof (y = void 0 !== F.IOptions && F.IOptions) ? y : Object
            ])
        ], I);
        j.MapStorage = I;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', j);
        f(72);
        const k = f(1);
        const l = f(16);
        class m {
            static obfuscate(p, q = {}) {
                const v = new l.InversifyContainerFacade();
                v.load(p, '', q);
                const w = v.get(k.ServiceIdentifiers.IJavaScriptObfuscator).obfuscate(p);
                v.unload();
                return w;
            }
        }
        d.JavaScriptObfuscator = m;
        m.version = true ? '0.25.0' : 'unknown';
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.FunctionDeclarationCalleeDataExtractor = 'FunctionDeclarationCalleeDataExtractor';
            j.FunctionExpressionCalleeDataExtractor = 'FunctionExpressionCalleeDataExtractor';
            j.ObjectExpressionCalleeDataExtractor = 'ObjectExpressionCalleeDataExtractor';
        }(d.CalleeDataExtractor || (d.CalleeDataExtractor = {})));
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.BinaryExpressionControlFlowReplacer = 'BinaryExpressionControlFlowReplacer';
            j.CallExpressionControlFlowReplacer = 'CallExpressionControlFlowReplacer';
            j.LogicalExpressionControlFlowReplacer = 'LogicalExpressionControlFlowReplacer';
            j.StringLiteralControlFlowReplacer = 'StringLiteralControlFlowReplacer';
        }(d.ControlFlowReplacer || (d.ControlFlowReplacer = {})));
    },
    function (k, q, v) {
        'use strict';
        var z;
        var A;
        var B;
        var C = this && this.__decorate || function (P, Q, R, S) {
            var T;
            var U = arguments.length;
            var V = U < 3 ? Q : null === S ? S = Object.getOwnPropertyDescriptor(Q, R) : S;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                V = Reflect.decorate(P, Q, R, S);
            } else {
                for (var W = P.length - 1; W >= 0; W--)
                    if (T = P[W]) {
                        V = (U < 3 ? T(V) : U > 3 ? T(Q, R, V) : T(Q, R)) || V;
                    }
            }
            if (U > 3 && V) {
                Object.defineProperty(Q, R, V);
            }
            return V;
        };
        var D = this && this.__metadata || function (P, Q) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(P, Q);
            }
        };
        var E = this && this.__param || function (P, Q) {
            return function (T, U) {
                Q(T, U, P);
            };
        };
        Object.defineProperty(q, '__esModule', F);
        const G = v(0);
        const H = v(1);
        const I = v(19);
        const J = v(2);
        const K = v(3);
        const L = v(20);
        const M = v(46);
        const N = v(4);
        let O = class extends M.AbstractControlFlowReplacer {
            constructor(P, Q, R) {
                super(P, Q, R);
            }
            getControlFlowStorageCallNode(P, Q, R, S) {
                const U = this.controlFlowCustomNodeFactory(L.ControlFlowCustomNode.ExpressionWithOperatorControlFlowStorageCallNode);
                U.initialize(P, Q, R, S);
                const V = U.getNode()[0];
                if (!V || !N.NodeGuards.isExpressionStatementNode(V)) {
                    throw new Error('`controlFlowStorageCallCustomNode.getNode()[0]` should returns array with `ExpressionStatement` node');
                }
                return V.expression;
            }
        };
        O = C([
            G.injectable(),
            E(0, G.inject(H.ServiceIdentifiers.Factory__IControlFlowCustomNode)),
            E(1, G.inject(H.ServiceIdentifiers.IRandomGenerator)),
            E(2, G.inject(H.ServiceIdentifiers.IOptions)),
            D('design:paramtypes', [
                'function' == typeof (z = void 0 !== I.TControlFlowCustomNodeFactory && I.TControlFlowCustomNodeFactory) ? z : Object,
                'function' == typeof (A = void 0 !== K.IRandomGenerator && K.IRandomGenerator) ? A : Object,
                'function' == typeof (B = void 0 !== J.IOptions && J.IOptions) ? B : Object
            ])
        ], O);
        q.ExpressionWithOperatorControlFlowReplacer = O;
    },
    function (f, g, h) {
        'use strict';
        var l = this && this.__importStar || function (x) {
            if (x && x.__esModule) {
                return x;
            }
            if (null != x) {
                for (var z in x)
                    if (Object.hasOwnProperty.call(x, z)) {
                        y[z] = x[z];
                    }
            }
            return y;
        };
        var m = this && this.__importDefault || function (x) {
            if (x && x.__esModule) {
                return x;
            } else {
                return { default: x };
            }
        };
        Object.defineProperty(g, '__esModule', p);
        const q = l(h(88));
        const u = m(h(89));
        const v = m(h(58));
        class w {
            static parse(x, y) {
                const C = w.sourceTypes.length;
                for (let D = 0; D < C; D++)
                    try {
                        return w.parseType(x, y, w.sourceTypes[D]);
                    } catch (F) {
                        if (D < C - 1) {
                            continue;
                        }
                        throw new Error(w.processParsingError(x, F.message, F.loc));
                    }
                throw new Error('Acorn parsing error');
            }
            static parseType(x, y, z) {
                const A = [];
                const B = Object.assign(Object.assign({}, y), {
                    onComment: A,
                    sourceType: z
                });
                const C = q.Parser.extend(u.default).parse(x, B);
                if (A.length) {
                    C.comments = A;
                }
                return C;
            }
            static processParsingError(x, y, z) {
                if (!z || !z.line || !z.column) {
                    throw new Error(y);
                }
                const B = x.split(/\r?\n/)[z.line - 1];
                if (!B) {
                    throw new Error(y);
                }
                const C = Math.max(0, z.column - w.nearestSymbolsCount);
                const D = Math.min(B.length, z.column + w.nearestSymbolsCount);
                const E = w.colorError('>');
                const F = '...' + B.substring(C, D).replace(/^\s+/, '') + '...';
                throw new Error('ERROR at line ' + z.line + ': ' + y + '\n' + E + ' ' + F);
            }
        }
        g.ASTParserFacade = w;
        w.colorError = v.default.red;
        w.nearestSymbolsCount = 15;
        w.sourceTypes = [
            'script',
            'module'
        ];
    },
    function (b, c) {
        b.exports = require('chalk');
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.BlockStatementDeadCodeInjectionNode = 'BlockStatementDeadCodeInjectionNode';
        }(d.DeadCodeInjectionCustomNode || (d.DeadCodeInjectionCustomNode = {})));
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.BasePropertiesExtractor = 'BasePropertiesExtractor';
            j.ObjectExpressionToVariableDeclarationExtractor = 'ObjectExpressionToVariableDeclarationExtractor';
        }(d.ObjectExpressionExtractor || (d.ObjectExpressionExtractor = {})));
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.ObjectExpressionVariableDeclarationHostNode = 'ObjectExpressionVariableDeclarationHostNode';
        }(d.ObjectExpressionKeysTransformerCustomNode || (d.ObjectExpressionKeysTransformerCustomNode = {})));
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.ConsoleOutput = 'ConsoleOutput';
            j.DebugProtection = 'DebugProtection';
            j.DomainLock = 'DomainLock';
            j.SelfDefending = 'SelfDefending';
            j.StringArray = 'StringArray';
        }(d.CustomCodeHelperGroup || (d.CustomCodeHelperGroup = {})));
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.BooleanLiteralObfuscatingReplacer = 'BooleanLiteralObfuscatingReplacer';
            j.NumberLiteralObfuscatingReplacer = 'NumberLiteralObfuscatingReplacer';
            j.StringLiteralObfuscatingReplacer = 'StringLiteralObfuscatingReplacer';
        }(d.LiteralObfuscatingReplacer || (d.LiteralObfuscatingReplacer = {})));
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (b, c) {
        b.exports = require('class-validator');
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.BlackListObfuscatingGuard = 'BlackListObfuscatingGuard';
            j.ConditionalCommentObfuscatingGuard = 'ConditionalCommentObfuscatingGuard';
            j.ReservedStringObfuscatingGuard = 'ReservedStringObfuscatingGuard';
        }(d.ObfuscatingGuard || (d.ObfuscatingGuard = {})));
    },
    function (d, f, g) {
        'use strict';
        var k;
        var l = this && this.__decorate || function (v, w, x, y) {
            var z;
            var A = arguments.length;
            var B = A < 3 ? w : null === y ? y = Object.getOwnPropertyDescriptor(w, x) : y;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                B = Reflect.decorate(v, w, x, y);
            } else {
                for (var C = v.length - 1; C >= 0; C--)
                    if (z = v[C]) {
                        B = (A < 3 ? z(B) : A > 3 ? z(w, x, B) : z(w, x)) || B;
                    }
            }
            if (A > 3 && B) {
                Object.defineProperty(w, x, B);
            }
            return B;
        };
        const m = { value: !0 };
        Object.defineProperty(f, '__esModule', m);
        const p = g(0);
        const q = g(4);
        let u = k = class {
            constructor() {
                this.obfuscationAllowedForCurrentNode = !0;
                this.obfuscationAllowedForNextNode = null;
            }
            static isConditionalComment(v) {
                return k.obfuscationEnableCommentRegExp.test(v.value) || k.obfuscationDisableCommentRegExp.test(v.value);
            }
            check(v) {
                if (this.obfuscationAllowedForNextNode && (this.obfuscationAllowedForCurrentNode = this.obfuscationAllowedForNextNode, this.obfuscationAllowedForNextNode = null), !q.NodeGuards.isNodeWithComments(v)) {
                    return this.obfuscationAllowedForCurrentNode;
                }
                const z = v.leadingComments;
                const A = v.trailingComments;
                if (z) {
                    this.obfuscationAllowedForCurrentNode = this.checkComments(z);
                }
                if (A) {
                    this.obfuscationAllowedForNextNode = this.checkComments(A);
                }
                return this.obfuscationAllowedForCurrentNode;
            }
            checkComments(v) {
                const x = v.length;
                let y = this.obfuscationAllowedForCurrentNode;
                for (let z = 0; z < x; z++) {
                    const B = v[z];
                    if (k.obfuscationEnableCommentRegExp.test(B.value)) {
                        y = !0;
                    } else {
                        if (k.obfuscationDisableCommentRegExp.test(B.value)) {
                            y = !1;
                        }
                    }
                }
                return y;
            }
        };
        u.obfuscationEnableCommentRegExp = new RegExp('javascript-obfuscator *: *enable');
        u.obfuscationDisableCommentRegExp = new RegExp('javascript-obfuscator *: *disable');
        u = k = l([p.injectable()], u);
        f.ConditionalCommentObfuscatingGuard = u;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (R, S, T, U) {
            var X;
            var Y = arguments.length;
            var Z = Y < 3 ? S : null === U ? U = Object.getOwnPropertyDescriptor(S, T) : U;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                Z = Reflect.decorate(R, S, T, U);
            } else {
                for (var a0 = R.length - 1; a0 >= 0; a0--)
                    if (X = R[a0]) {
                        Z = (Y < 3 ? X(Z) : Y > 3 ? X(S, T, Z) : X(S, T)) || Z;
                    }
            }
            if (Y > 3 && Z) {
                Object.defineProperty(S, T, Z);
            }
            return Z;
        };
        var F = this && this.__metadata || function (R, S) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(R, S);
            }
        };
        var G = this && this.__param || function (R, S) {
            return function (W, X) {
                S(W, X, R);
            };
        };
        var H = this && this.__importDefault || function (R) {
            if (R && R.__esModule) {
                return R;
            } else {
                return { default: R };
            }
        };
        Object.defineProperty(v, '__esModule', I);
        const J = w(0);
        const K = w(1);
        const L = H(w(225));
        const M = w(226);
        const N = w(2);
        const O = w(227);
        const P = w(7);
        let Q = A = class {
            constructor(R, S) {
                this.sourceCode = R;
                this.options = S;
            }
            initialize() {
                this.randomGenerator = new M.Chance(this.getRawSeed());
            }
            getMathRandom() {
                return this.getRandomInteger(0, 99999) / 100000;
            }
            getRandomGenerator() {
                return this.randomGenerator;
            }
            getRandomInteger(R, S) {
                return this.getRandomGenerator().integer(U);
            }
            getRandomString(R, S = A.randomGeneratorPool) {
                const U = { pool: S };
                return this.getRandomGenerator().string(U);
            }
            getInputSeed() {
                return this.options.seed.toString();
            }
            getRawSeed() {
                const R = this.getInputSeed();
                if (('' + R).split('|').length > 1) {
                    return R;
                } else {
                    return R + '|' + L.default(this.sourceCode.getSourceCode());
                }
            }
        };
        Q.randomGeneratorPool = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
        E([
            P.initializable(),
            F('design:type', 'function' == typeof (B = void 0 !== M.Chance && M.Chance.Chance) ? B : Object)
        ], Q.prototype, 'randomGenerator', void 0);
        E([
            J.postConstruct(),
            F('design:type', Function),
            F('design:paramtypes', []),
            F('design:returntype', void 0)
        ], Q.prototype, 'initialize', null);
        Q = A = E([
            J.injectable(),
            G(0, J.inject(K.ServiceIdentifiers.ISourceCode)),
            G(1, J.inject(K.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (C = void 0 !== O.ISourceCode && O.ISourceCode) ? C : Object,
                'function' == typeof (D = void 0 !== N.IOptions && N.IOptions) ? D : Object
            ])
        ], Q);
        v.RandomGenerator = Q;
    },
    function (b, c) {
        b.exports = require('reflect-metadata');
    },
    function (h, j, k) {
        'use strict';
        var w;
        var x;
        var y = this && this.__decorate || function (J, K, L, M) {
            var P;
            var Q = arguments.length;
            var R = Q < 3 ? K : null === M ? M = Object.getOwnPropertyDescriptor(K, L) : M;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                R = Reflect.decorate(J, K, L, M);
            } else {
                for (var S = J.length - 1; S >= 0; S--)
                    if (P = J[S]) {
                        R = (Q < 3 ? P(R) : Q > 3 ? P(K, L, R) : P(K, L)) || R;
                    }
            }
            if (Q > 3 && R) {
                Object.defineProperty(K, L, R);
            }
            return R;
        };
        var z = this && this.__metadata || function (J, K) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(J, K);
            }
        };
        var A = this && this.__param || function (J, K) {
            return function (N, O) {
                K(N, O, J);
            };
        };
        var B = this && this.__importDefault || function (J) {
            if (J && J.__esModule) {
                return J;
            } else {
                return { default: J };
            }
        };
        Object.defineProperty(j, '__esModule', C);
        const D = k(0);
        const E = k(1);
        const F = B(k(58));
        const G = k(2);
        const H = k(74);
        let I = w = class {
            constructor(J) {
                this.options = J;
            }
            static log(J, K, L, M) {
                const N = J('\n' + K + ' ' + L);
                console.log(N, null != M ? M : '');
            }
            info(J, K) {
                if (this.options.log) {
                    w.log(w.colorInfo, H.LoggingPrefix.Base, J, K);
                }
            }
            success(J, K) {
                if (this.options.log) {
                    w.log(w.colorSuccess, H.LoggingPrefix.Base, J, K);
                }
            }
            warn(J, K) {
                if (this.options.log) {
                    w.log(w.colorWarn, H.LoggingPrefix.Base, J, K);
                }
            }
        };
        I.colorInfo = F.default.cyan;
        I.colorSuccess = F.default.green;
        I.colorWarn = F.default.yellow;
        I = w = y([
            D.injectable(),
            A(0, D.inject(E.ServiceIdentifiers.IOptions)),
            z('design:paramtypes', ['function' == typeof (x = void 0 !== G.IOptions && G.IOptions) ? x : Object])
        ], I);
        j.Logger = I;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.Base = '[javascript-obfuscator]';
            j.CLI = '[javascript-obfuscator-cli]';
        }(d.LoggingPrefix || (d.LoggingPrefix = {})));
    },
    function (h, j, k) {
        'use strict';
        Object.defineProperty(j, '__esModule', v);
        const w = k(16);
        const x = k(0);
        const y = k(1);
        const z = k(54);
        const A = k(76);
        const B = k(78);
        const C = k(79);
        const D = k(80);
        const E = k(81);
        const F = k(82);
        const G = k(84);
        j.analyzersModule = new x.ContainerModule(H => {
            H(y.ServiceIdentifiers.ICallsGraphAnalyzer).to(A.CallsGraphAnalyzer).inSingletonScope();
            H(y.ServiceIdentifiers.IPrevailingKindOfVariablesAnalyzer).to(E.PrevailingKindOfVariablesAnalyzer).inSingletonScope();
            H(y.ServiceIdentifiers.IScopeAnalyzer).to(F.ScopeAnalyzer).inSingletonScope();
            H(y.ServiceIdentifiers.IStringArrayStorageAnalyzer).to(G.StringArrayStorageAnalyzer).inSingletonScope();
            H(y.ServiceIdentifiers.ICalleeDataExtractor).to(B.FunctionDeclarationCalleeDataExtractor).whenTargetNamed(z.CalleeDataExtractor.FunctionDeclarationCalleeDataExtractor);
            H(y.ServiceIdentifiers.ICalleeDataExtractor).to(C.FunctionExpressionCalleeDataExtractor).whenTargetNamed(z.CalleeDataExtractor.FunctionExpressionCalleeDataExtractor);
            H(y.ServiceIdentifiers.ICalleeDataExtractor).to(D.ObjectExpressionCalleeDataExtractor).whenTargetNamed(z.CalleeDataExtractor.ObjectExpressionCalleeDataExtractor);
            H(y.ServiceIdentifiers.Factory__ICalleeDataExtractor).toFactory(w.InversifyContainerFacade.getCacheFactory(y.ServiceIdentifiers.ICalleeDataExtractor));
        });
    },
    function (j, k, q) {
        'use strict';
        var x;
        var z;
        var A = this && this.__decorate || function (N, O, P, Q) {
            var T;
            var U = arguments.length;
            var V = U < 3 ? O : null === Q ? Q = Object.getOwnPropertyDescriptor(O, P) : Q;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                V = Reflect.decorate(N, O, P, Q);
            } else {
                for (var W = N.length - 1; W >= 0; W--)
                    if (T = N[W]) {
                        V = (U < 3 ? T(V) : U > 3 ? T(O, P, V) : T(O, P)) || V;
                    }
            }
            if (U > 3 && V) {
                Object.defineProperty(O, P, V);
            }
            return V;
        };
        var B = this && this.__metadata || function (N, O) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(N, O);
            }
        };
        var C = this && this.__param || function (N, O) {
            return function (R, S) {
                O(R, S, N);
            };
        };
        var D = this && this.__importStar || function (N) {
            if (N && N.__esModule) {
                return N;
            }
            if (null != N) {
                for (var R in N)
                    if (Object.hasOwnProperty.call(N, R)) {
                        Q[R] = N[R];
                    }
            }
            return Q;
        };
        Object.defineProperty(k, '__esModule', E);
        const F = q(0);
        const G = q(1);
        const H = D(q(12));
        const I = q(77);
        const J = q(54);
        const K = q(4);
        const L = q(17);
        let M = x = class {
            constructor(N) {
                this.calleeDataExtractorFactory = N;
            }
            static getLimitIndex(N) {
                const P = N - 1;
                const Q = x.limitThresholdActivationLength - 1;
                let R = P;
                if (P > Q) {
                    R = Math.round(Q + P * x.limitThreshold);
                    if (R > P) {
                        R = P;
                    }
                }
                return R;
            }
            analyze(N) {
                return this.analyzeRecursive(N.body);
            }
            analyzeRecursive(N) {
                const O = x.getLimitIndex(N.length);
                const P = [];
                const Q = N.length;
                for (let R = 0; R < Q && !(R > O); R++) {
                    const T = N[R];
                    H.traverse(T, {
                        enter: U => {
                            if (K.NodeGuards.isCallExpressionNode(U)) {
                                if (T.parentNode !== L.NodeStatementUtils.getParentNodeWithStatements(U)) {
                                    return H.VisitorOption.Skip;
                                } else {
                                    return void this.analyzeCallExpressionNode(P, N, U);
                                }
                            }
                        }
                    });
                }
                return P;
            }
            analyzeCallExpressionNode(N, O, P) {
                x.calleeDataExtractorsList.forEach(S => {
                    const T = this.calleeDataExtractorFactory(S).extract(O, P.callee);
                    if (T) {
                        N.push(Object.assign(Object.assign({}, T), { callsGraph: this.analyzeRecursive(T.callee.body) }));
                    }
                });
            }
        };
        M.calleeDataExtractorsList = [
            J.CalleeDataExtractor.FunctionDeclarationCalleeDataExtractor,
            J.CalleeDataExtractor.FunctionExpressionCalleeDataExtractor,
            J.CalleeDataExtractor.ObjectExpressionCalleeDataExtractor
        ];
        M.limitThresholdActivationLength = 25;
        M.limitThreshold = 0.002;
        M = x = A([
            F.injectable(),
            C(0, F.inject(G.ServiceIdentifiers.Factory__ICalleeDataExtractor)),
            B('design:paramtypes', ['function' == typeof (z = void 0 !== I.TCalleeDataExtractorFactory && I.TCalleeDataExtractorFactory) ? z : Object])
        ], M);
        k.CallsGraphAnalyzer = M;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (g, h, j) {
        'use strict';
        var p = this && this.__decorate || function (B, C, D, E) {
            var F;
            var G = arguments.length;
            var H = G < 3 ? C : null === E ? E = Object.getOwnPropertyDescriptor(C, D) : E;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                H = Reflect.decorate(B, C, D, E);
            } else {
                for (var I = B.length - 1; I >= 0; I--)
                    if (F = B[I]) {
                        H = (G < 3 ? F(H) : G > 3 ? F(C, D, H) : F(C, D)) || H;
                    }
            }
            if (G > 3 && H) {
                Object.defineProperty(C, D, H);
            }
            return H;
        };
        var q = this && this.__importStar || function (B) {
            if (B && B.__esModule) {
                return B;
            }
            if (null != B) {
                for (var D in B)
                    if (Object.hasOwnProperty.call(B, D)) {
                        C[D] = B[D];
                    }
            }
            return C;
        };
        Object.defineProperty(h, '__esModule', u);
        const v = j(0);
        const w = q(j(12));
        const x = j(43);
        const y = j(4);
        const z = j(17);
        let A = class extends x.AbstractCalleeDataExtractor {
            extract(B, C) {
                if (!y.NodeGuards.isIdentifierNode(C)) {
                    return null;
                }
                const D = this.getCalleeBlockStatement(z.NodeStatementUtils.getParentNodeWithStatements(B[0]), C.name);
                if (D) {
                    return {
                        callee: D,
                        name: C.name
                    };
                } else {
                    return null;
                }
            }
            getCalleeBlockStatement(B, C) {
                let F = null;
                w.traverse(B, {
                    enter: G => {
                        if (y.NodeGuards.isFunctionDeclarationNode(G) && G.id.name === C) {
                            F = G.body;
                            return w.VisitorOption.Break;
                        }
                    }
                });
                return F;
            }
        };
        A = p([v.injectable()], A);
        h.FunctionDeclarationCalleeDataExtractor = A;
    },
    function (g, h, j) {
        'use strict';
        var p = this && this.__decorate || function (B, C, D, E) {
            var H;
            var I = arguments.length;
            var J = I < 3 ? C : null === E ? E = Object.getOwnPropertyDescriptor(C, D) : E;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                J = Reflect.decorate(B, C, D, E);
            } else {
                for (var K = B.length - 1; K >= 0; K--)
                    if (H = B[K]) {
                        J = (I < 3 ? H(J) : I > 3 ? H(C, D, J) : H(C, D)) || J;
                    }
            }
            if (I > 3 && J) {
                Object.defineProperty(C, D, J);
            }
            return J;
        };
        var q = this && this.__importStar || function (B) {
            if (B && B.__esModule) {
                return B;
            }
            if (null != B) {
                for (var D in B)
                    if (Object.hasOwnProperty.call(B, D)) {
                        C[D] = B[D];
                    }
            }
            return C;
        };
        Object.defineProperty(h, '__esModule', u);
        const v = j(0);
        const w = q(j(12));
        const x = j(43);
        const y = j(4);
        const z = j(17);
        let A = class extends x.AbstractCalleeDataExtractor {
            extract(B, C) {
                var D;
                let F = null;
                if (y.NodeGuards.isIdentifierNode(C)) {
                    F = this.getCalleeBlockStatement(z.NodeStatementUtils.getParentNodeWithStatements(B[0]), C.name);
                }
                if (y.NodeGuards.isFunctionExpressionNode(C)) {
                    F = C.body;
                }
                return F ? {
                    callee: F,
                    name: null !== (D = C.name) && void 0 !== D ? D : null
                } : null;
            }
            getCalleeBlockStatement(B, C) {
                let G = null;
                w.traverse(B, {
                    enter: (H, I) => {
                        if (y.NodeGuards.isFunctionExpressionNode(H) && I && y.NodeGuards.isVariableDeclaratorNode(I) && y.NodeGuards.isIdentifierNode(I.id) && I.id.name === C) {
                            G = H.body;
                            return w.VisitorOption.Break;
                        }
                    }
                });
                return G;
            }
        };
        A = p([v.injectable()], A);
        h.FunctionExpressionCalleeDataExtractor = A;
    },
    function (g, h, j) {
        'use strict';
        var p;
        var q = this && this.__decorate || function (D, E, F, G) {
            var J;
            var K = arguments.length;
            var L = K < 3 ? E : null === G ? G = Object.getOwnPropertyDescriptor(E, F) : G;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                L = Reflect.decorate(D, E, F, G);
            } else {
                for (var M = D.length - 1; M >= 0; M--)
                    if (J = D[M]) {
                        L = (K < 3 ? J(L) : K > 3 ? J(E, F, L) : J(E, F)) || L;
                    }
            }
            if (K > 3 && L) {
                Object.defineProperty(E, F, L);
            }
            return L;
        };
        var v = this && this.__importStar || function (D) {
            if (D && D.__esModule) {
                return D;
            }
            if (null != D) {
                for (var F in D)
                    if (Object.hasOwnProperty.call(D, F)) {
                        E[F] = D[F];
                    }
            }
            return E;
        };
        const w = { value: !0 };
        Object.defineProperty(h, '__esModule', w);
        const x = j(0);
        const y = v(j(12));
        const z = j(43);
        const A = j(4);
        const B = j(17);
        let C = p = class extends z.AbstractCalleeDataExtractor {
            static isValidTargetPropertyNode(D, E) {
                if (!D.key) {
                    return !1;
                }
                const H = A.NodeGuards.isIdentifierNode(D.key) && D.key.name === E;
                const I = A.NodeGuards.isLiteralNode(D.key) && Boolean(D.key.value) && D.key.value === E;
                return H || I;
            }
            extract(D, E) {
                if (!A.NodeGuards.isMemberExpressionNode(E)) {
                    return null;
                }
                const G = this.createObjectMembersCallsChain([], E);
                if (!G.length) {
                    return null;
                }
                const H = G[G.length - 1];
                const I = this.getCalleeBlockStatement(B.NodeStatementUtils.getParentNodeWithStatements(D[0]), G);
                if (I) {
                    return {
                        callee: I,
                        name: H
                    };
                } else {
                    return null;
                }
            }
            createObjectMembersCallsChain(D, E) {
                if (A.NodeGuards.isIdentifierNode(E.property) && !1 === E.computed) {
                    D.unshift(E.property.name);
                } else {
                    if (!A.NodeGuards.isLiteralNode(E.property) || 'string' != typeof E.property.value && 'number' != typeof E.property.value) {
                        return D;
                    }
                    D.unshift(E.property.value);
                }
                if (A.NodeGuards.isMemberExpressionNode(E.object)) {
                    return this.createObjectMembersCallsChain(D, E.object);
                } else {
                    if (A.NodeGuards.isIdentifierNode(E.object)) {
                        D.unshift(E.object.name);
                    }
                    return D;
                }
            }
            getCalleeBlockStatement(D, E) {
                const H = E.shift();
                if (!H) {
                    return null;
                }
                let I = null;
                y.traverse(D, {
                    enter: J => {
                        if (A.NodeGuards.isVariableDeclaratorNode(J) && A.NodeGuards.isIdentifierNode(J.id) && J.init && A.NodeGuards.isObjectExpressionNode(J.init) && J.id.name === H) {
                            I = this.findCalleeBlockStatement(J.init.properties, E);
                            return y.VisitorOption.Break;
                        }
                    }
                });
                return I;
            }
            findCalleeBlockStatement(D, E) {
                const G = E.shift();
                if (!G) {
                    return null;
                }
                for (const H of D)
                    if (p.isValidTargetPropertyNode(H, G)) {
                        if (A.NodeGuards.isObjectExpressionNode(H.value)) {
                            return this.findCalleeBlockStatement(H.value.properties, E);
                        }
                        if (A.NodeGuards.isFunctionExpressionNode(H.value)) {
                            return H.value.body;
                        }
                    }
                return null;
            }
        };
        C = p = q([x.injectable()], C);
        h.ObjectExpressionCalleeDataExtractor = C;
    },
    function (h, j, k) {
        'use strict';
        var w;
        var x;
        var y = this && this.__decorate || function (J, K, L, M) {
            var N;
            var O = arguments.length;
            var P = O < 3 ? K : null === M ? M = Object.getOwnPropertyDescriptor(K, L) : M;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                P = Reflect.decorate(J, K, L, M);
            } else {
                for (var Q = J.length - 1; Q >= 0; Q--)
                    if (N = J[Q]) {
                        P = (O < 3 ? N(P) : O > 3 ? N(K, L, P) : N(K, L)) || P;
                    }
            }
            if (O > 3 && P) {
                Object.defineProperty(K, L, P);
            }
            return P;
        };
        var z = this && this.__metadata || function (J, K) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(J, K);
            }
        };
        var A = this && this.__param || function (J, K) {
            return function (O, P) {
                K(O, P, J);
            };
        };
        var B = this && this.__importStar || function (J) {
            if (J && J.__esModule) {
                return J;
            }
            if (null != J) {
                for (var L in J)
                    if (Object.hasOwnProperty.call(J, L)) {
                        K[L] = J[L];
                    }
            }
            return K;
        };
        Object.defineProperty(j, '__esModule', C);
        const D = k(0);
        const E = k(1);
        const F = B(k(12));
        const G = k(36);
        const H = k(4);
        let I = w = class {
            constructor(J) {
                this.prevailingKindOfVariables = w.defaultKindOfVariables;
                this.arrayUtils = J;
            }
            analyze(J) {
                var K;
                const L = [];
                F.traverse(J, {
                    enter: M => {
                        if (H.NodeGuards.isVariableDeclarationNode(M)) {
                            L.push(M.kind);
                        }
                    }
                });
                this.prevailingKindOfVariables = null !== (K = this.arrayUtils.findMostOccurringElement(L)) && void 0 !== K ? K : w.defaultKindOfVariables;
            }
            getPrevailingKind() {
                return this.prevailingKindOfVariables;
            }
        };
        I.defaultKindOfVariables = 'var';
        I = w = y([
            D.injectable(),
            A(0, D.inject(E.ServiceIdentifiers.IArrayUtils)),
            z('design:paramtypes', ['function' == typeof (x = void 0 !== G.IArrayUtils && G.IArrayUtils) ? x : Object])
        ], I);
        j.PrevailingKindOfVariablesAnalyzer = I;
    },
    function (h, j, k) {
        'use strict';
        var q;
        var v = this && this.__decorate || function (F, G, H, I) {
            var J;
            var K = arguments.length;
            var L = K < 3 ? G : null === I ? I = Object.getOwnPropertyDescriptor(G, H) : I;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                L = Reflect.decorate(F, G, H, I);
            } else {
                for (var M = F.length - 1; M >= 0; M--)
                    if (J = F[M]) {
                        L = (K < 3 ? J(L) : K > 3 ? J(G, H, L) : J(G, H)) || L;
                    }
            }
            if (K > 3 && L) {
                Object.defineProperty(G, H, L);
            }
            return L;
        };
        var w = this && this.__importStar || function (F) {
            if (F && F.__esModule) {
                return F;
            }
            if (null != F) {
                for (var H in F)
                    if (Object.hasOwnProperty.call(F, H)) {
                        G[H] = F[H];
                    }
            }
            return G;
        };
        Object.defineProperty(j, '__esModule', x);
        const y = k(0);
        const z = w(k(83));
        const A = w(k(12));
        const B = k(44);
        const C = k(4);
        let D = q = class {
            constructor() {
                this.scopeManager = null;
            }
            static attachMissingRanges(F) {
                A.replace(F, {
                    enter: G => (G.range || (G.range = [
                        q.emptyRangeValue,
                        q.emptyRangeValue
                    ]), G)
                });
            }
            static isRootNode(F) {
                return C.NodeGuards.isProgramNode(F) || F.parentNode === F;
            }
            analyze(F) {
                const H = q.sourceTypes.length;
                q.attachMissingRanges(F);
                for (let I = 0; I < H; I++)
                    try {
                        return void (this.scopeManager = z.analyze(F, Object.assign(Object.assign({}, q.eslintScopeOptions), { sourceType: q.sourceTypes[I] })));
                    } catch (K) {
                        if (I < H - 1) {
                            continue;
                        }
                        throw new Error(K);
                    }
                throw new Error('Scope analyzing error');
            }
            acquireScope(F) {
                if (!this.scopeManager) {
                    throw new Error('Scope manager is not defined');
                }
                const H = this.scopeManager.acquire(F, q.isRootNode(F));
                if (!H) {
                    throw new Error('Cannot acquire scope for node');
                }
                this.sanitizeScopes(H);
                return H;
            }
            sanitizeScopes(F) {
                F.childScopes.forEach(J => {
                    if ('class' === J.type && J.upper) {
                        if (!J.variables.length) {
                            return;
                        }
                        const K = J.variables[0];
                        const L = J.upper.variables.find(M => K.defs.some(N => 'ClassName' === N.type) && M.name === K.name);
                        null == L || L.references.push(...J.variables[0].references);
                    }
                });
                for (const J of F.childScopes)
                    this.sanitizeScopes(J);
            }
        };
        const E = {
            ecmaVersion: B.ecmaVersion,
            optimistic: !0
        };
        D.eslintScopeOptions = E;
        D.sourceTypes = [
            'script',
            'module'
        ];
        D.emptyRangeValue = 0;
        D = q = v([y.injectable()], D);
        j.ScopeAnalyzer = D;
    },
    function (b, c) {
        b.exports = require('eslint-scope');
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (V, W, X, Y) {
            var Z;
            var a0 = arguments.length;
            var a1 = a0 < 3 ? W : null === Y ? Y = Object.getOwnPropertyDescriptor(W, X) : Y;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a1 = Reflect.decorate(V, W, X, Y);
            } else {
                for (var a2 = V.length - 1; a2 >= 0; a2--)
                    if (Z = V[a2]) {
                        a1 = (a0 < 3 ? Z(a1) : a0 > 3 ? Z(W, X, a1) : Z(W, X)) || a1;
                    }
            }
            if (a0 > 3 && a1) {
                Object.defineProperty(W, X, a1);
            }
            return a1;
        };
        var F = this && this.__metadata || function (V, W) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(V, W);
            }
        };
        var G = this && this.__param || function (V, W) {
            return function (Z, a0) {
                W(Z, a0, V);
            };
        };
        var H = this && this.__importStar || function (V) {
            if (V && V.__esModule) {
                return V;
            }
            if (null != V) {
                for (var X in V)
                    if (Object.hasOwnProperty.call(V, X)) {
                        W[X] = V[X];
                    }
            }
            return W;
        };
        const J = { value: !0 };
        Object.defineProperty(v, '__esModule', J);
        const K = w(0);
        const L = w(1);
        const M = H(w(12));
        const O = w(2);
        const P = w(3);
        const Q = w(37);
        const R = w(4);
        const S = w(18);
        const T = w(45);
        let U = A = class {
            constructor(V, W, X) {
                this.stringArrayStorageData = new Map();
                this.stringArrayStorage = V;
                this.randomGenerator = W;
                this.options = X;
            }
            analyze(V) {
                if (this.options.stringArray) {
                    M.traverse(V, {
                        enter: (Z, a0) => {
                            if (a0) {
                                if (S.NodeMetadata.isIgnoredNode(Z)) {
                                    return M.VisitorOption.Skip;
                                } else {
                                    return void (R.NodeGuards.isLiteralNode(Z) && this.analyzeLiteralNode(Z, a0));
                                }
                            }
                        }
                    });
                }
            }
            getItemDataForLiteralNode(V) {
                return this.stringArrayStorageData.get(V);
            }
            analyzeLiteralNode(V, W) {
                if ('string' == typeof V.value) {
                    T.NodeLiteralUtils.isProhibitedLiteralNode(V, W) || this.shouldAddValueToStringArray(V.value) && this.stringArrayStorageData.set(V, this.stringArrayStorage.getOrThrow(V.value));
                }
            }
            shouldAddValueToStringArray(V) {
                return V.length >= A.minimumLengthForStringArray && this.randomGenerator.getMathRandom() <= this.options.stringArrayThreshold;
            }
        };
        U.minimumLengthForStringArray = 3;
        U = A = E([
            K.injectable(),
            G(0, K.inject(L.ServiceIdentifiers.IStringArrayStorage)),
            G(1, K.inject(L.ServiceIdentifiers.IRandomGenerator)),
            G(2, K.inject(L.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (B = void 0 !== Q.IStringArrayStorage && Q.IStringArrayStorage) ? B : Object,
                'function' == typeof (C = void 0 !== P.IRandomGenerator && P.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== O.IOptions && O.IOptions) ? D : Object
            ])
        ], U);
        v.StringArrayStorageAnalyzer = U;
    },
    function (h, j, k) {
        'use strict';
        Object.defineProperty(j, '__esModule', w);
        const x = k(16);
        const y = k(0);
        const z = k(1);
        const A = k(55);
        const B = k(24);
        const C = k(86);
        const D = k(87);
        const E = k(90);
        const F = k(91);
        const G = k(93);
        const H = k(96);
        const I = k(97);
        j.controlFlowTransformersModule = new y.ContainerModule(J => {
            J(z.ServiceIdentifiers.INodeTransformer).to(D.BlockStatementControlFlowTransformer).whenTargetNamed(B.NodeTransformer.BlockStatementControlFlowTransformer);
            J(z.ServiceIdentifiers.INodeTransformer).to(F.DeadCodeInjectionTransformer).whenTargetNamed(B.NodeTransformer.DeadCodeInjectionTransformer);
            J(z.ServiceIdentifiers.INodeTransformer).to(G.FunctionControlFlowTransformer).whenTargetNamed(B.NodeTransformer.FunctionControlFlowTransformer);
            J(z.ServiceIdentifiers.IControlFlowReplacer).to(C.BinaryExpressionControlFlowReplacer).whenTargetNamed(A.ControlFlowReplacer.BinaryExpressionControlFlowReplacer);
            J(z.ServiceIdentifiers.IControlFlowReplacer).to(E.CallExpressionControlFlowReplacer).whenTargetNamed(A.ControlFlowReplacer.CallExpressionControlFlowReplacer);
            J(z.ServiceIdentifiers.IControlFlowReplacer).to(H.LogicalExpressionControlFlowReplacer).whenTargetNamed(A.ControlFlowReplacer.LogicalExpressionControlFlowReplacer);
            J(z.ServiceIdentifiers.IControlFlowReplacer).to(I.StringLiteralControlFlowReplacer).whenTargetNamed(A.ControlFlowReplacer.StringLiteralControlFlowReplacer);
            J(z.ServiceIdentifiers.Factory__IControlFlowReplacer).toFactory(x.InversifyContainerFacade.getCacheFactory(z.ServiceIdentifiers.IControlFlowReplacer));
        });
    },
    function (k, q, v) {
        'use strict';
        var z;
        var A;
        var B;
        var C;
        var D = this && this.__decorate || function (P, Q, R, S) {
            var T;
            var U = arguments.length;
            var V = U < 3 ? Q : null === S ? S = Object.getOwnPropertyDescriptor(Q, R) : S;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                V = Reflect.decorate(P, Q, R, S);
            } else {
                for (var W = P.length - 1; W >= 0; W--)
                    if (T = P[W]) {
                        V = (U < 3 ? T(V) : U > 3 ? T(Q, R, V) : T(Q, R)) || V;
                    }
            }
            if (U > 3 && V) {
                Object.defineProperty(Q, R, V);
            }
            return V;
        };
        var E = this && this.__metadata || function (P, Q) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(P, Q);
            }
        };
        var F = this && this.__param || function (P, Q) {
            return function (S, T) {
                Q(S, T, P);
            };
        };
        Object.defineProperty(q, '__esModule', G);
        const H = v(0);
        const I = v(1);
        const J = v(19);
        const K = v(2);
        const L = v(3);
        const M = v(20);
        const N = v(56);
        let O = z = class extends N.ExpressionWithOperatorControlFlowReplacer {
            constructor(P, Q, R) {
                super(P, Q, R);
            }
            replace(P, Q, R) {
                const U = P.operator;
                const V = this.controlFlowCustomNodeFactory(M.ControlFlowCustomNode.BinaryExpressionFunctionNode);
                V.initialize(U);
                const W = this.insertCustomNodeToControlFlowStorage(V, R, U, z.usingExistingIdentifierChance);
                return this.getControlFlowStorageCallNode(R.getStorageId(), W, P.left, P.right);
            }
        };
        O.usingExistingIdentifierChance = 0.5;
        O = z = D([
            H.injectable(),
            F(0, H.inject(I.ServiceIdentifiers.Factory__IControlFlowCustomNode)),
            F(1, H.inject(I.ServiceIdentifiers.IRandomGenerator)),
            F(2, H.inject(I.ServiceIdentifiers.IOptions)),
            E('design:paramtypes', [
                'function' == typeof (A = void 0 !== J.TControlFlowCustomNodeFactory && J.TControlFlowCustomNodeFactory) ? A : Object,
                'function' == typeof (B = void 0 !== L.IRandomGenerator && L.IRandomGenerator) ? B : Object,
                'function' == typeof (C = void 0 !== K.IOptions && K.IOptions) ? C : Object
            ])
        ], O);
        q.BinaryExpressionControlFlowReplacer = O;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var D;
        var E;
        var F;
        var G;
        var H = this && this.__decorate || function (a3, a4, a5, a6) {
            var a7;
            var a8 = arguments.length;
            var a9 = a8 < 3 ? a4 : null === a6 ? a6 = Object.getOwnPropertyDescriptor(a4, a5) : a6;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a9 = Reflect.decorate(a3, a4, a5, a6);
            } else {
                for (var aa = a3.length - 1; aa >= 0; aa--)
                    if (a7 = a3[aa]) {
                        a9 = (a8 < 3 ? a7(a9) : a8 > 3 ? a7(a4, a5, a9) : a7(a4, a5)) || a9;
                    }
            }
            if (a8 > 3 && a9) {
                Object.defineProperty(a4, a5, a9);
            }
            return a9;
        };
        var J = this && this.__metadata || function (a3, a4) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a3, a4);
            }
        };
        var K = this && this.__param || function (a3, a4) {
            return function (a7, a8) {
                a4(a7, a8, a3);
            };
        };
        var L = this && this.__importStar || function (a3) {
            if (a3 && a3.__esModule) {
                return a3;
            }
            if (null != a3) {
                for (var a5 in a3)
                    if (Object.hasOwnProperty.call(a3, a5)) {
                        a4[a5] = a3[a5];
                    }
            }
            return a4;
        };
        Object.defineProperty(w, '__esModule', M);
        const P = x(0);
        const Q = x(1);
        const R = L(x(12));
        const T = x(19);
        const U = x(36);
        const V = x(2);
        const W = x(3);
        const X = x(20);
        const Y = x(10);
        const Z = x(11);
        const a0 = x(4);
        const a1 = x(6);
        let a2 = B = class extends Z.AbstractNodeTransformer {
            constructor(a3, a4, a5, a6) {
                super(a5, a6);
                this.controlFlowCustomNodeFactory = a3;
                this.arrayUtils = a4;
            }
            static isProhibitedStatementNode(a3) {
                const a5 = a0.NodeGuards.isBreakStatementNode(a3) || a0.NodeGuards.isContinueStatementNode(a3);
                const a6 = a0.NodeGuards.isVariableDeclarationNode(a3) && ('const' === a3.kind || 'let' === a3.kind);
                const a7 = a0.NodeGuards.isClassDeclarationNode(a3);
                return a0.NodeGuards.isFunctionDeclarationNode(a3) || a5 || a6 || a7;
            }
            static canTransformBlockStatementNode(a3) {
                let a7 = !0;
                R.traverse(a3, {
                    enter: a8 => {
                        if (a0.NodeGuards.isWhileStatementNode(a8)) {
                            return R.VisitorOption.Skip;
                        }
                        if (B.isProhibitedStatementNode(a8)) {
                            a7 = !1;
                        }
                    }
                });
                if (a3.body.length <= 4) {
                    a7 = !1;
                }
                return a7;
            }
            getVisitor(a3) {
                switch (a3) {
                case Y.TransformationStage.ControlFlowFlattening:
                    return a6;
                default:
                    return null;
                }
            }
            transformNode(a3, a4) {
                if (this.randomGenerator.getMathRandom() > this.options.controlFlowFlatteningThreshold || !B.canTransformBlockStatementNode(a3)) {
                    return a3;
                }
                const a7 = a3.body;
                const a8 = this.arrayUtils.createWithRange(a7.length);
                const a9 = this.arrayUtils.shuffle(a8);
                const aa = a8.map(ad => a9.indexOf(ad));
                const ab = this.controlFlowCustomNodeFactory(X.ControlFlowCustomNode.BlockStatementControlFlowFlatteningNode);
                ab.initialize(a7, a9, aa);
                const ac = ab.getNode()[0];
                a1.NodeUtils.parentizeNode(ac, a4);
                return ac;
            }
        };
        a2 = B = H([
            P.injectable(),
            K(0, P.inject(Q.ServiceIdentifiers.Factory__IControlFlowCustomNode)),
            K(1, P.inject(Q.ServiceIdentifiers.IArrayUtils)),
            K(2, P.inject(Q.ServiceIdentifiers.IRandomGenerator)),
            K(3, P.inject(Q.ServiceIdentifiers.IOptions)),
            J('design:paramtypes', [
                'function' == typeof (D = void 0 !== T.TControlFlowCustomNodeFactory && T.TControlFlowCustomNodeFactory) ? D : Object,
                'function' == typeof (E = void 0 !== U.IArrayUtils && U.IArrayUtils) ? E : Object,
                'function' == typeof (F = void 0 !== W.IRandomGenerator && W.IRandomGenerator) ? F : Object,
                'function' == typeof (G = void 0 !== V.IOptions && V.IOptions) ? G : Object
            ])
        ], a2);
        w.BlockStatementControlFlowTransformer = a2;
    },
    function (b, c) {
        b.exports = require('acorn');
    },
    function (b, c) {
        b.exports = require('acorn-import-meta');
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (R, S, T, U) {
            var V;
            var W = arguments.length;
            var X = W < 3 ? S : null === U ? U = Object.getOwnPropertyDescriptor(S, T) : U;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                X = Reflect.decorate(R, S, T, U);
            } else {
                for (var Y = R.length - 1; Y >= 0; Y--)
                    if (V = R[Y]) {
                        X = (W < 3 ? V(X) : W > 3 ? V(S, T, X) : V(S, T)) || X;
                    }
            }
            if (W > 3 && X) {
                Object.defineProperty(S, T, X);
            }
            return X;
        };
        var F = this && this.__metadata || function (R, S) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(R, S);
            }
        };
        var G = this && this.__param || function (R, S) {
            return function (U, V) {
                S(U, V, R);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const I = w(0);
        const J = w(1);
        const K = w(19);
        const L = w(2);
        const M = w(3);
        const N = w(20);
        const O = w(46);
        const P = w(4);
        let Q = A = class extends O.AbstractControlFlowReplacer {
            constructor(R, S, T) {
                super(R, S, T);
            }
            replace(R, S, T) {
                const U = R.callee;
                if (!P.NodeGuards.isIdentifierNode(U)) {
                    return R;
                }
                const V = String(R.arguments.length);
                const W = this.controlFlowCustomNodeFactory(N.ControlFlowCustomNode.CallExpressionFunctionNode);
                const X = R.arguments;
                W.initialize(X);
                const Y = this.insertCustomNodeToControlFlowStorage(W, T, V, A.usingExistingIdentifierChance);
                return this.getControlFlowStorageCallNode(T.getStorageId(), Y, U, X);
            }
            getControlFlowStorageCallNode(R, S, T, U) {
                const W = this.controlFlowCustomNodeFactory(N.ControlFlowCustomNode.CallExpressionControlFlowStorageCallNode);
                W.initialize(R, S, T, U);
                const X = W.getNode()[0];
                if (!X || !P.NodeGuards.isExpressionStatementNode(X)) {
                    throw new Error('`controlFlowStorageCallCustomNode.getNode()[0]` should returns array with `ExpressionStatement` node');
                }
                return X.expression;
            }
        };
        Q.usingExistingIdentifierChance = 0.5;
        Q = A = E([
            I.injectable(),
            G(0, I.inject(J.ServiceIdentifiers.Factory__IControlFlowCustomNode)),
            G(1, I.inject(J.ServiceIdentifiers.IRandomGenerator)),
            G(2, I.inject(J.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (B = void 0 !== K.TControlFlowCustomNodeFactory && K.TControlFlowCustomNodeFactory) ? B : Object,
                'function' == typeof (C = void 0 !== M.IRandomGenerator && M.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== L.IOptions && L.IOptions) ? D : Object
            ])
        ], Q);
        v.CallExpressionControlFlowReplacer = Q;
    },
    function (w, x, z) {
        'use strict';
        var D;
        var E;
        var G;
        var H;
        var J;
        var K = this && this.__decorate || function (aa, ab, ac, ad) {
            var ae;
            var af = arguments.length;
            var ag = af < 3 ? ab : null === ad ? ad = Object.getOwnPropertyDescriptor(ab, ac) : ad;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                ag = Reflect.decorate(aa, ab, ac, ad);
            } else {
                for (var ah = aa.length - 1; ah >= 0; ah--)
                    if (ae = aa[ah]) {
                        ag = (af < 3 ? ae(ag) : af > 3 ? ae(ab, ac, ag) : ae(ab, ac)) || ag;
                    }
            }
            if (af > 3 && ag) {
                Object.defineProperty(ab, ac, ag);
            }
            return ag;
        };
        var L = this && this.__metadata || function (aa, ab) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(aa, ab);
            }
        };
        var M = this && this.__param || function (aa, ab) {
            return function (ae, af) {
                ab(ae, af, aa);
            };
        };
        var P = this && this.__importStar || function (aa) {
            if (aa && aa.__esModule) {
                return aa;
            }
            if (null != aa) {
                for (var ae in aa)
                    if (Object.hasOwnProperty.call(aa, ae)) {
                        ad[ae] = aa[ae];
                    }
            }
            return ad;
        };
        Object.defineProperty(x, '__esModule', Q);
        const T = z(0);
        const U = z(1);
        const V = P(z(12));
        const W = z(92);
        const X = z(2);
        const Y = z(3);
        const Z = z(59);
        const a0 = z(60);
        const a1 = z(24);
        const a2 = z(35);
        const a3 = z(10);
        const a4 = z(11);
        const a5 = z(8);
        const a6 = z(4);
        const a7 = z(17);
        const a8 = z(6);
        let a9 = D = class extends a4.AbstractNodeTransformer {
            constructor(aa, ab, ac, ad) {
                super(ac, ad);
                this.deadCodeInjectionRootAstHostNodeSet = new Set();
                this.collectedBlockStatements = [];
                this.collectedBlockStatementsTotalLength = 0;
                this.deadCodeInjectionCustomNodeFactory = aa;
                this.transformersRunner = ab;
            }
            static isProhibitedNodeInsideCollectedBlockStatement(aa) {
                return a6.NodeGuards.isBreakStatementNode(aa) || a6.NodeGuards.isContinueStatementNode(aa) || a6.NodeGuards.isAwaitExpressionNode(aa) || a6.NodeGuards.isSuperNode(aa);
            }
            static isScopeHoistingFunctionDeclaration(aa) {
                if (!a6.NodeGuards.isFunctionDeclarationNode(aa)) {
                    return !1;
                }
                const ac = a7.NodeStatementUtils.getScopeOfNode(aa);
                const ad = a6.NodeGuards.isSwitchCaseNode(ac) ? ac.consequent : ac.body;
                const ae = ad.indexOf(aa);
                if (0 === ae) {
                    return !1;
                }
                const af = ad.slice(0, ae);
                const ag = a5.NodeFactory.blockStatementNode(af);
                const ah = aa.id.name;
                let ai = !1;
                V.traverse(ag, {
                    enter: aj => {
                        if (a6.NodeGuards.isIdentifierNode(aj) && aj.name === ah) {
                            ai = !0;
                            return V.VisitorOption.Break;
                        }
                    }
                });
                return ai;
            }
            static isValidCollectedBlockStatementNode(aa) {
                if (!aa.body.length) {
                    return !1;
                }
                let ae = 0;
                let af = !0;
                V.traverse(aa, {
                    enter: ag => {
                        if (a6.NodeGuards.isBlockStatementNode(ag) && ae++, ae > D.maxNestedBlockStatementsCount || D.isProhibitedNodeInsideCollectedBlockStatement(ag) || D.isScopeHoistingFunctionDeclaration(ag)) {
                            af = !1;
                            return V.VisitorOption.Break;
                        }
                    }
                });
                return af;
            }
            static isValidWrappedBlockStatementNode(aa) {
                if (!aa.body.length) {
                    return !1;
                }
                let ae = !0;
                if (V.traverse(aa, {
                        enter: af => {
                            if (D.isScopeHoistingFunctionDeclaration(af)) {
                                ae = !1;
                                return V.VisitorOption.Break;
                            }
                        }
                    }), !ae) {
                    return !1;
                }
                return a7.NodeStatementUtils.getParentNodeWithStatements(aa).type !== a2.NodeType.Program;
            }
            getVisitor(aa) {
                switch (aa) {
                case a3.TransformationStage.DeadCodeInjection:
                    const ae = {
                        enter: (ag, ah) => {
                            if (ah && a6.NodeGuards.isProgramNode(ag)) {
                                this.analyzeNode(ag, ah);
                                return ag;
                            }
                        }
                    };
                    return ae;
                case a3.TransformationStage.Finalizing:
                    const af = {
                        enter: (ag, ah) => {
                            if (ah && this.isDeadCodeInjectionRootAstHostNode(ag)) {
                                return this.restoreNode(ag, ah);
                            }
                        }
                    };
                    if (this.deadCodeInjectionRootAstHostNodeSet.size) {
                        return af;
                    } else {
                        return null;
                    }
                default:
                    return null;
                }
            }
            analyzeNode(aa, ab) {
                V.traverse(aa, {
                    enter: ae => {
                        if (!a6.NodeGuards.isBlockStatementNode(ae)) {
                            return;
                        }
                        const ag = a8.NodeUtils.clone(ae);
                        if (!D.isValidCollectedBlockStatementNode(ag)) {
                            return;
                        }
                        const ah = this.makeClonedBlockStatementNodeUnique(ag);
                        this.collectedBlockStatements.push(ah);
                    }
                });
                this.collectedBlockStatementsTotalLength = this.collectedBlockStatements.length;
            }
            transformNode(aa, ab) {
                if (!this.collectedBlockStatements.length || this.collectedBlockStatementsTotalLength < D.minCollectedBlockStatementsCount) {
                    return V.VisitorOption.Break;
                }
                if (this.randomGenerator.getMathRandom() > this.options.deadCodeInjectionThreshold || !D.isValidWrappedBlockStatementNode(aa)) {
                    return aa;
                }
                const ac = this.collectedBlockStatements.length - 1;
                const ad = this.randomGenerator.getRandomInteger(0, ac);
                const ae = this.collectedBlockStatements.splice(ad, 1)[0];
                if (ae === aa) {
                    return aa;
                } else {
                    return this.replaceBlockStatementNode(aa, ae, ab);
                }
            }
            restoreNode(aa, ab) {
                const ac = aa.body[0];
                if (!a6.NodeGuards.isFunctionDeclarationNode(ac)) {
                    throw new Error('Wrong dead code injection root AST host node. Host node should contain `FunctionDeclaration` node');
                }
                return ac.body;
            }
            isDeadCodeInjectionRootAstHostNode(aa) {
                return a6.NodeGuards.isBlockStatementNode(aa) && this.deadCodeInjectionRootAstHostNodeSet.has(aa);
            }
            makeClonedBlockStatementNodeUnique(aa) {
                const ab = a5.NodeFactory.programNode([a5.NodeFactory.expressionStatementNode(a5.NodeFactory.functionExpressionNode([], aa))]);
                a8.NodeUtils.parentizeAst(ab);
                a8.NodeUtils.parentizeNode(ab, ab);
                this.transformersRunner.transform(ab, D.transformersToRenameBlockScopeIdentifiers, a3.TransformationStage.Obfuscating);
                return aa;
            }
            replaceBlockStatementNode(aa, ab, ac) {
                const ag = a5.NodeFactory.blockStatementNode([a5.NodeFactory.functionDeclarationNode(D.deadCodeInjectionRootAstHostNodeName, [], ab)]);
                this.deadCodeInjectionRootAstHostNodeSet.add(ag);
                const ah = this.deadCodeInjectionCustomNodeFactory(a0.DeadCodeInjectionCustomNode.BlockStatementDeadCodeInjectionNode);
                ah.initialize(aa, ag);
                const ai = ah.getNode()[0];
                a8.NodeUtils.parentizeNode(ai, ac);
                return ai;
            }
        };
        a9.deadCodeInjectionRootAstHostNodeName = 'deadCodeInjectionRootAstHostNode';
        a9.maxNestedBlockStatementsCount = 4;
        a9.minCollectedBlockStatementsCount = 5;
        a9.transformersToRenameBlockScopeIdentifiers = [
            a1.NodeTransformer.LabeledStatementTransformer,
            a1.NodeTransformer.ScopeIdentifiersTransformer
        ];
        a9 = D = K([
            T.injectable(),
            M(0, T.inject(U.ServiceIdentifiers.Factory__IDeadCodeInjectionCustomNode)),
            M(1, T.inject(U.ServiceIdentifiers.ITransformersRunner)),
            M(2, T.inject(U.ServiceIdentifiers.IRandomGenerator)),
            M(3, T.inject(U.ServiceIdentifiers.IOptions)),
            L('design:paramtypes', [
                'function' == typeof (E = void 0 !== W.TDeadNodeInjectionCustomNodeFactory && W.TDeadNodeInjectionCustomNodeFactory) ? E : Object,
                'function' == typeof (G = void 0 !== Z.ITransformersRunner && Z.ITransformersRunner) ? G : Object,
                'function' == typeof (H = void 0 !== Y.IRandomGenerator && Y.IRandomGenerator) ? H : Object,
                'function' == typeof (J = void 0 !== X.IOptions && X.IOptions) ? J : Object
            ])
        ], a9);
        x.DeadCodeInjectionTransformer = a9;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (w, z, A) {
        'use strict';
        var E;
        var H;
        var J;
        var K;
        var L;
        var M;
        var P = this && this.__decorate || function (ag, ah, ai, aj) {
            var ak;
            var al = arguments.length;
            var am = al < 3 ? ah : null === aj ? aj = Object.getOwnPropertyDescriptor(ah, ai) : aj;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                am = Reflect.decorate(ag, ah, ai, aj);
            } else {
                for (var an = ag.length - 1; an >= 0; an--)
                    if (ak = ag[an]) {
                        am = (al < 3 ? ak(am) : al > 3 ? ak(ah, ai, am) : ak(ah, ai)) || am;
                    }
            }
            if (al > 3 && am) {
                Object.defineProperty(ah, ai, am);
            }
            return am;
        };
        var Q = this && this.__metadata || function (ag, ah) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(ag, ah);
            }
        };
        var U = this && this.__param || function (ag, ah) {
            return function (ak, al) {
                ah(ak, al, ag);
            };
        };
        var V = this && this.__importStar || function (ag) {
            if (ag && ag.__esModule) {
                return ag;
            }
            if (null != ag) {
                for (var ai in ag)
                    if (Object.hasOwnProperty.call(ag, ai)) {
                        ah[ai] = ag[ai];
                    }
            }
            return ah;
        };
        Object.defineProperty(z, '__esModule', W);
        const X = A(0);
        const Y = A(1);
        const Z = V(A(12));
        const a0 = A(19);
        const a1 = A(94);
        const a2 = A(95);
        const a3 = A(2);
        const a4 = A(3);
        const a5 = A(20);
        const a6 = A(55);
        const a7 = A(35);
        const a8 = A(10);
        const a9 = A(11);
        const aa = A(21);
        const ab = A(4);
        const ac = A(18);
        const ad = A(17);
        const ae = A(6);
        let af = E = class extends a9.AbstractNodeTransformer {
            constructor(ag, ah, ai, aj, ak) {
                super(aj, ak);
                this.controlFlowData = new Map();
                this.visitedFunctionNodes = new Set();
                this.hostNodesWithControlFlowNode = new Set();
                this.controlFlowStorageFactory = ag;
                this.controlFlowReplacerFactory = ah;
                this.controlFlowCustomNodeFactory = ai;
            }
            getVisitor(ag) {
                switch (ag) {
                case a8.TransformationStage.ControlFlowFlattening:
                    return ai;
                default:
                    return null;
                }
            }
            transformNode(ag, ah) {
                if (this.visitedFunctionNodes.add(ag), !ab.NodeGuards.isBlockStatementNode(ag.body)) {
                    return ag;
                }
                const ak = this.getHostNode(ag.body);
                const al = this.getControlFlowStorage(ak);
                if (this.controlFlowData.set(ak, al), this.transformFunctionBody(ag.body, al), !al.getLength()) {
                    return ag;
                }
                const am = this.controlFlowCustomNodeFactory(a5.ControlFlowCustomNode.ControlFlowStorageNode);
                am.initialize(al);
                aa.NodeAppender.prepend(ak, am.getNode());
                this.hostNodesWithControlFlowNode.add(ak);
                ae.NodeUtils.parentizeAst(ag);
                return ag;
            }
            getControlFlowStorage(ag) {
                const aj = this.controlFlowStorageFactory();
                if (this.controlFlowData.has(ag)) {
                    if (this.hostNodesWithControlFlowNode.has(ag)) {
                        if (ab.NodeGuards.isSwitchCaseNode(ag)) {
                            ag.consequent.shift();
                        } else {
                            ag.body.shift();
                        }
                    }
                    const al = this.controlFlowData.get(ag);
                    aj.mergeWith(al, !0);
                }
                return aj;
            }
            getHostNode(ag) {
                const ai = ad.NodeStatementUtils.getParentNodesWithStatements(ag);
                if (1 === ai.length) {
                    return ag;
                } else {
                    ai.pop();
                    if (ai.length > E.hostNodeSearchMinDepth) {
                        ai.splice(0, E.hostNodeSearchMinDepth);
                    }
                    if (ai.length > E.hostNodeSearchMaxDepth) {
                    }
                    return this.randomGenerator.getRandomGenerator().pickone(ai);
                }
            }
            isVisitedFunctionNode(ag) {
                return (ab.NodeGuards.isFunctionDeclarationNode(ag) || ab.NodeGuards.isFunctionExpressionNode(ag) || ab.NodeGuards.isArrowFunctionExpressionNode(ag)) && this.visitedFunctionNodes.has(ag);
            }
            transformFunctionBody(ag, ah) {
                Z.replace(ag, {
                    enter: (ai, aj) => {
                        if (ac.NodeMetadata.isIgnoredNode(ai)) {
                            return Z.VisitorOption.Skip;
                        }
                        if (this.isVisitedFunctionNode(ai) || !aj) {
                            return Z.VisitorOption.Skip;
                        }
                        if (!E.controlFlowReplacersMap.has(ai.type)) {
                            return ai;
                        }
                        if (this.randomGenerator.getMathRandom() > this.options.controlFlowFlatteningThreshold) {
                            return ai;
                        }
                        const ak = E.controlFlowReplacersMap.get(ai.type);
                        if (void 0 === ak) {
                            return ai;
                        } else {
                            return Object.assign(Object.assign({}, this.controlFlowReplacerFactory(ak).replace(ai, aj, ah)), { parentNode: aj });
                        }
                    }
                });
            }
        };
        af.controlFlowReplacersMap = new Map([
            [
                a7.NodeType.BinaryExpression,
                a6.ControlFlowReplacer.BinaryExpressionControlFlowReplacer
            ],
            [
                a7.NodeType.CallExpression,
                a6.ControlFlowReplacer.CallExpressionControlFlowReplacer
            ],
            [
                a7.NodeType.LogicalExpression,
                a6.ControlFlowReplacer.LogicalExpressionControlFlowReplacer
            ],
            [
                a7.NodeType.Literal,
                a6.ControlFlowReplacer.StringLiteralControlFlowReplacer
            ]
        ]);
        af.hostNodeSearchMinDepth = 0;
        af.hostNodeSearchMaxDepth = 2;
        af = E = P([
            X.injectable(),
            U(0, X.inject(Y.ServiceIdentifiers.Factory__TControlFlowStorage)),
            U(1, X.inject(Y.ServiceIdentifiers.Factory__IControlFlowReplacer)),
            U(2, X.inject(Y.ServiceIdentifiers.Factory__IControlFlowCustomNode)),
            U(3, X.inject(Y.ServiceIdentifiers.IRandomGenerator)),
            U(4, X.inject(Y.ServiceIdentifiers.IOptions)),
            Q('design:paramtypes', [
                'function' == typeof (H = void 0 !== a2.TControlFlowStorageFactory && a2.TControlFlowStorageFactory) ? H : Object,
                'function' == typeof (J = void 0 !== a1.TControlFlowReplacerFactory && a1.TControlFlowReplacerFactory) ? J : Object,
                'function' == typeof (K = void 0 !== a0.TControlFlowCustomNodeFactory && a0.TControlFlowCustomNodeFactory) ? K : Object,
                'function' == typeof (L = void 0 !== a4.IRandomGenerator && a4.IRandomGenerator) ? L : Object,
                'function' == typeof (M = void 0 !== a3.IOptions && a3.IOptions) ? M : Object
            ])
        ], af);
        z.FunctionControlFlowTransformer = af;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (T, U, V, W) {
            var Z;
            var a0 = arguments.length;
            var a1 = a0 < 3 ? U : null === W ? W = Object.getOwnPropertyDescriptor(U, V) : W;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a1 = Reflect.decorate(T, U, V, W);
            } else {
                for (var a2 = T.length - 1; a2 >= 0; a2--)
                    if (Z = T[a2]) {
                        a1 = (a0 < 3 ? Z(a1) : a0 > 3 ? Z(U, V, a1) : Z(U, V)) || a1;
                    }
            }
            if (a0 > 3 && a1) {
                Object.defineProperty(U, V, a1);
            }
            return a1;
        };
        var F = this && this.__metadata || function (T, U) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(T, U);
            }
        };
        var G = this && this.__param || function (T, U) {
            return function (W, X) {
                U(W, X, T);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const I = w(0);
        const J = w(1);
        const K = w(19);
        const L = w(2);
        const M = w(3);
        const O = w(20);
        const P = w(56);
        const Q = w(4);
        const R = w(6);
        let S = A = class extends P.ExpressionWithOperatorControlFlowReplacer {
            constructor(T, U, V) {
                super(T, U, V);
            }
            replace(T, U, V) {
                if (this.checkForProhibitedExpressions(T.left, T.right)) {
                    return T;
                }
                const Z = T.operator;
                const a0 = this.controlFlowCustomNodeFactory(O.ControlFlowCustomNode.LogicalExpressionFunctionNode);
                a0.initialize(Z);
                const a1 = this.insertCustomNodeToControlFlowStorage(a0, V, Z, A.usingExistingIdentifierChance);
                return this.getControlFlowStorageCallNode(V.getStorageId(), a1, T.left, T.right);
            }
            checkForProhibitedExpressions(T, U) {
                return [
                    T,
                    U
                ].some(X => {
                    let a1;
                    a1 = Q.NodeGuards.isUnaryExpressionNode(X) ? R.NodeUtils.getUnaryExpressionArgumentNode(X) : X;
                    return !(Q.NodeGuards.isLiteralNode(a1) || Q.NodeGuards.isIdentifierNode(a1) || Q.NodeGuards.isObjectExpressionNode(a1) || Q.NodeGuards.isExpressionStatementNode(a1));
                });
            }
        };
        S.usingExistingIdentifierChance = 0.5;
        S = A = E([
            I.injectable(),
            G(0, I.inject(J.ServiceIdentifiers.Factory__IControlFlowCustomNode)),
            G(1, I.inject(J.ServiceIdentifiers.IRandomGenerator)),
            G(2, I.inject(J.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (B = void 0 !== K.TControlFlowCustomNodeFactory && K.TControlFlowCustomNodeFactory) ? B : Object,
                'function' == typeof (C = void 0 !== M.IRandomGenerator && M.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== L.IOptions && L.IOptions) ? D : Object
            ])
        ], S);
        v.LogicalExpressionControlFlowReplacer = S;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (R, S, T, U) {
            var X;
            var Y = arguments.length;
            var Z = Y < 3 ? S : null === U ? U = Object.getOwnPropertyDescriptor(S, T) : U;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                Z = Reflect.decorate(R, S, T, U);
            } else {
                for (var a0 = R.length - 1; a0 >= 0; a0--)
                    if (X = R[a0]) {
                        Z = (Y < 3 ? X(Z) : Y > 3 ? X(S, T, Z) : X(S, T)) || Z;
                    }
            }
            if (Y > 3 && Z) {
                Object.defineProperty(S, T, Z);
            }
            return Z;
        };
        var F = this && this.__metadata || function (R, S) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(R, S);
            }
        };
        var G = this && this.__param || function (R, S) {
            return function (T, U) {
                S(T, U, R);
            };
        };
        const H = { value: !0 };
        Object.defineProperty(v, '__esModule', H);
        const I = w(0);
        const J = w(1);
        const K = w(19);
        const L = w(2);
        const M = w(3);
        const N = w(20);
        const O = w(46);
        const P = w(4);
        let Q = A = class extends O.AbstractControlFlowReplacer {
            constructor(R, S, T) {
                super(R, S, T);
            }
            replace(R, S, T) {
                if (P.NodeGuards.isPropertyNode(S) && S.key === R) {
                    return R;
                }
                if ('string' != typeof R.value || R.value.length < 3) {
                    return R;
                }
                const X = String(R.value);
                const Y = this.controlFlowCustomNodeFactory(N.ControlFlowCustomNode.StringLiteralNode);
                Y.initialize(R.value);
                const Z = this.insertCustomNodeToControlFlowStorage(Y, T, X, A.usingExistingIdentifierChance);
                return this.getControlFlowStorageCallNode(T.getStorageId(), Z);
            }
            getControlFlowStorageCallNode(R, S) {
                const W = this.controlFlowCustomNodeFactory(N.ControlFlowCustomNode.StringLiteralControlFlowStorageCallNode);
                W.initialize(R, S);
                const X = W.getNode()[0];
                if (!X || !P.NodeGuards.isExpressionStatementNode(X)) {
                    throw new Error('`controlFlowStorageCallCustomNode.getNode()[0]` should returns array with `ExpressionStatement` node');
                }
                return X.expression;
            }
        };
        Q.usingExistingIdentifierChance = 1;
        Q = A = E([
            I.injectable(),
            G(0, I.inject(J.ServiceIdentifiers.Factory__IControlFlowCustomNode)),
            G(1, I.inject(J.ServiceIdentifiers.IRandomGenerator)),
            G(2, I.inject(J.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (B = void 0 !== K.TControlFlowCustomNodeFactory && K.TControlFlowCustomNodeFactory) ? B : Object,
                'function' == typeof (C = void 0 !== M.IRandomGenerator && M.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== L.IOptions && L.IOptions) ? D : Object
            ])
        ], Q);
        v.StringLiteralControlFlowReplacer = Q;
    },
    function (j, k, q) {
        'use strict';
        Object.defineProperty(k, '__esModule', x);
        const y = q(0);
        const z = q(16);
        const A = q(1);
        const B = q(24);
        const C = q(61);
        const D = q(99);
        const E = q(101);
        const F = q(102);
        const G = q(103);
        const H = q(105);
        const I = q(106);
        const J = q(107);
        const K = q(108);
        k.convertingTransformersModule = new y.ContainerModule(L => {
            L(A.ServiceIdentifiers.INodeTransformer).to(E.MemberExpressionTransformer).whenTargetNamed(B.NodeTransformer.MemberExpressionTransformer);
            L(A.ServiceIdentifiers.INodeTransformer).to(F.MethodDefinitionTransformer).whenTargetNamed(B.NodeTransformer.MethodDefinitionTransformer);
            L(A.ServiceIdentifiers.INodeTransformer).to(G.ObjectExpressionKeysTransformer).whenTargetNamed(B.NodeTransformer.ObjectExpressionKeysTransformer);
            L(A.ServiceIdentifiers.INodeTransformer).to(H.ObjectExpressionTransformer).whenTargetNamed(B.NodeTransformer.ObjectExpressionTransformer);
            L(A.ServiceIdentifiers.INodeTransformer).to(I.SplitStringTransformer).whenTargetNamed(B.NodeTransformer.SplitStringTransformer);
            L(A.ServiceIdentifiers.INodeTransformer).to(J.TemplateLiteralTransformer).whenTargetNamed(B.NodeTransformer.TemplateLiteralTransformer);
            L(A.ServiceIdentifiers.IObjectExpressionExtractor).to(D.ObjectExpressionToVariableDeclarationExtractor).whenTargetNamed(C.ObjectExpressionExtractor.ObjectExpressionToVariableDeclarationExtractor);
            L(A.ServiceIdentifiers.IObjectExpressionExtractor).to(K.BasePropertiesExtractor).whenTargetNamed(C.ObjectExpressionExtractor.BasePropertiesExtractor);
            L(A.ServiceIdentifiers.Factory__IObjectExpressionExtractor).toFactory(z.InversifyContainerFacade.getCacheFactory(A.ServiceIdentifiers.IObjectExpressionExtractor));
        });
    },
    function (j, k, q) {
        'use strict';
        var x;
        var z = this && this.__decorate || function (N, O, P, Q) {
            var R;
            var S = arguments.length;
            var T = S < 3 ? O : null === Q ? Q = Object.getOwnPropertyDescriptor(O, P) : Q;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                T = Reflect.decorate(N, O, P, Q);
            } else {
                for (var U = N.length - 1; U >= 0; U--)
                    if (R = N[U]) {
                        T = (S < 3 ? R(T) : S > 3 ? R(O, P, T) : R(O, P)) || T;
                    }
            }
            if (S > 3 && T) {
                Object.defineProperty(O, P, T);
            }
            return T;
        };
        var A = this && this.__metadata || function (N, O) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(N, O);
            }
        };
        var B = this && this.__param || function (N, O) {
            return function (R, S) {
                O(R, S, N);
            };
        };
        Object.defineProperty(k, '__esModule', C);
        const D = q(0);
        const E = q(1);
        const F = q(100);
        const G = q(62);
        const H = q(21);
        const I = q(4);
        const J = q(17);
        const K = q(6);
        const L = q(22);
        let M = class {
            constructor(N) {
                this.objectExpressionKeysTransformerCustomNodeFactory = N;
            }
            extract(N, O) {
                return this.transformObjectExpressionToVariableDeclaration(N, O);
            }
            transformObjectExpressionToVariableDeclaration(N, O) {
                var P;
                const R = J.NodeStatementUtils.getScopeOfNode(O);
                const S = I.NodeGuards.isNodeWithLexicalScope(R) ? R : null !== (P = L.NodeLexicalScopeUtils.getLexicalScope(R)) && void 0 !== P ? P : null;
                if (!S) {
                    throw new Error('Cannot find lexical scope node for the host statement node');
                }
                const T = N.properties;
                const U = this.getObjectExpressionHostNode(S, T);
                const V = [U];
                H.NodeAppender.insertBefore(R, V, O);
                K.NodeUtils.parentizeAst(U);
                K.NodeUtils.parentizeNode(U, R);
                return {
                    nodeToReplace: this.getObjectExpressionIdentifierNode(U),
                    objectExpressionHostStatement: U,
                    objectExpressionNode: this.getObjectExpressionNode(U)
                };
            }
            getObjectExpressionHostNode(N, O) {
                const Q = this.objectExpressionKeysTransformerCustomNodeFactory(G.ObjectExpressionKeysTransformerCustomNode.ObjectExpressionVariableDeclarationHostNode);
                Q.initialize(N, O);
                const R = Q.getNode()[0];
                if (!R || !I.NodeGuards.isVariableDeclarationNode(R)) {
                    throw new Error('`objectExpressionHostCustomNode.getNode()[0]` should returns array with `VariableDeclaration` node');
                }
                return R;
            }
            getObjectExpressionIdentifierNode(N) {
                const P = N.declarations[0].id;
                if (!I.NodeGuards.isIdentifierNode(P)) {
                    throw new Error('`objectExpressionHostNode` should contain `VariableDeclarator` node with `Identifier` id property');
                }
                return P;
            }
            getObjectExpressionNode(N) {
                var O;
                const Q = null !== (O = N.declarations[0].init) && void 0 !== O ? O : null;
                if (!Q || !I.NodeGuards.isObjectExpressionNode(Q)) {
                    throw new Error('`objectExpressionHostNode` should contain `VariableDeclarator` node with `ObjectExpression` init property');
                }
                return Q;
            }
        };
        M = z([
            D.injectable(),
            B(0, D.inject(E.ServiceIdentifiers.Factory__IObjectExpressionKeysTransformerCustomNode)),
            A('design:paramtypes', ['function' == typeof (x = void 0 !== F.TObjectExpressionKeysTransformerCustomNodeFactory && F.TObjectExpressionKeysTransformerCustomNodeFactory) ? x : Object])
        ], M);
        k.ObjectExpressionToVariableDeclarationExtractor = M;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (j, k, q) {
        'use strict';
        var x;
        var z;
        var A = this && this.__decorate || function (N, O, P, Q) {
            var R;
            var S = arguments.length;
            var T = S < 3 ? O : null === Q ? Q = Object.getOwnPropertyDescriptor(O, P) : Q;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                T = Reflect.decorate(N, O, P, Q);
            } else {
                for (var U = N.length - 1; U >= 0; U--)
                    if (R = N[U]) {
                        T = (S < 3 ? R(T) : S > 3 ? R(O, P, T) : R(O, P)) || T;
                    }
            }
            if (S > 3 && T) {
                Object.defineProperty(O, P, T);
            }
            return T;
        };
        var B = this && this.__metadata || function (N, O) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(N, O);
            }
        };
        var C = this && this.__param || function (N, O) {
            return function (R, S) {
                O(R, S, N);
            };
        };
        Object.defineProperty(k, '__esModule', D);
        const E = q(0);
        const F = q(1);
        const G = q(2);
        const H = q(3);
        const I = q(10);
        const J = q(11);
        const K = q(8);
        const L = q(4);
        let M = class extends J.AbstractNodeTransformer {
            constructor(N, O) {
                super(N, O);
            }
            getVisitor(N) {
                switch (N) {
                case I.TransformationStage.Converting:
                    return R;
                default:
                    return null;
                }
            }
            transformNode(N, O) {
                if (L.NodeGuards.isIdentifierNode(N.property)) {
                    if (N.computed) {
                        return N;
                    }
                    N.computed = !0;
                    N.property = K.NodeFactory.literalNode(N.property.name);
                }
                return N;
            }
        };
        M = A([
            E.injectable(),
            C(0, E.inject(F.ServiceIdentifiers.IRandomGenerator)),
            C(1, E.inject(F.ServiceIdentifiers.IOptions)),
            B('design:paramtypes', [
                'function' == typeof (x = void 0 !== H.IRandomGenerator && H.IRandomGenerator) ? x : Object,
                'function' == typeof (z = void 0 !== G.IOptions && G.IOptions) ? z : Object
            ])
        ], M);
        k.MemberExpressionTransformer = M;
    },
    function (k, q, v) {
        'use strict';
        var z;
        var A;
        var B;
        var C = this && this.__decorate || function (P, Q, R, S) {
            var T;
            var U = arguments.length;
            var V = U < 3 ? Q : null === S ? S = Object.getOwnPropertyDescriptor(Q, R) : S;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                V = Reflect.decorate(P, Q, R, S);
            } else {
                for (var W = P.length - 1; W >= 0; W--)
                    if (T = P[W]) {
                        V = (U < 3 ? T(V) : U > 3 ? T(Q, R, V) : T(Q, R)) || V;
                    }
            }
            if (U > 3 && V) {
                Object.defineProperty(Q, R, V);
            }
            return V;
        };
        var D = this && this.__metadata || function (P, Q) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(P, Q);
            }
        };
        var E = this && this.__param || function (P, Q) {
            return function (U, V) {
                Q(U, V, P);
            };
        };
        const F = { value: !0 };
        Object.defineProperty(q, '__esModule', F);
        const G = v(0);
        const H = v(1);
        const I = v(2);
        const J = v(3);
        const K = v(10);
        const L = v(11);
        const M = v(8);
        const N = v(4);
        let O = z = class extends L.AbstractNodeTransformer {
            constructor(P, Q) {
                super(P, Q);
            }
            getVisitor(P) {
                switch (P) {
                case K.TransformationStage.Converting:
                    return T;
                default:
                    return null;
                }
            }
            transformNode(P, Q) {
                if (N.NodeGuards.isIdentifierNode(P.key)) {
                    return this.replaceIdentifierKey(P, P.key);
                } else {
                    if (N.NodeGuards.isLiteralNode(P.key)) {
                        return this.replaceLiteralKey(P, P.key);
                    } else {
                        return P;
                    }
                }
            }
            replaceIdentifierKey(P, Q) {
                z.ignoredNames.includes(Q.name) || P.computed || (P.computed = !0, P.key = M.NodeFactory.literalNode(Q.name));
                return P;
            }
            replaceLiteralKey(P, Q) {
                'string' != typeof Q.value || z.ignoredNames.includes(Q.value) || P.computed || (P.computed = !0);
                return P;
            }
        };
        O.ignoredNames = ['constructor'];
        O = z = C([
            G.injectable(),
            E(0, G.inject(H.ServiceIdentifiers.IRandomGenerator)),
            E(1, G.inject(H.ServiceIdentifiers.IOptions)),
            D('design:paramtypes', [
                'function' == typeof (A = void 0 !== J.IRandomGenerator && J.IRandomGenerator) ? A : Object,
                'function' == typeof (B = void 0 !== I.IOptions && I.IOptions) ? B : Object
            ])
        ], O);
        q.MethodDefinitionTransformer = O;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E;
        var F = this && this.__decorate || function (Z, a0, a1, a2) {
            var a5;
            var a6 = arguments.length;
            var a7 = a6 < 3 ? a0 : null === a2 ? a2 = Object.getOwnPropertyDescriptor(a0, a1) : a2;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a7 = Reflect.decorate(Z, a0, a1, a2);
            } else {
                for (var a8 = Z.length - 1; a8 >= 0; a8--)
                    if (a5 = Z[a8]) {
                        a7 = (a6 < 3 ? a5(a7) : a6 > 3 ? a5(a0, a1, a7) : a5(a0, a1)) || a7;
                    }
            }
            if (a6 > 3 && a7) {
                Object.defineProperty(a0, a1, a7);
            }
            return a7;
        };
        var G = this && this.__metadata || function (Z, a0) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(Z, a0);
            }
        };
        var H = this && this.__param || function (Z, a0) {
            return function (a3, a4) {
                a0(a3, a4, Z);
            };
        };
        var J = this && this.__importStar || function (Z) {
            if (Z && Z.__esModule) {
                return Z;
            }
            if (null != Z) {
                for (var a3 in Z)
                    if (Object.hasOwnProperty.call(Z, a3)) {
                        a2[a3] = Z[a3];
                    }
            }
            return a2;
        };
        Object.defineProperty(w, '__esModule', K);
        const L = x(0);
        const M = x(1);
        const O = J(x(12));
        const P = x(104);
        const Q = x(2);
        const R = x(3);
        const T = x(10);
        const U = x(11);
        const V = x(4);
        const W = x(17);
        const X = x(61);
        let Y = B = class extends U.AbstractNodeTransformer {
            constructor(Z, a0, a1) {
                super(a0, a1);
                this.objectExpressionExtractorFactory = Z;
            }
            static isProhibitedHostStatement(Z, a0) {
                return B.isReferencedIdentifierName(Z, a0) || B.isProhibitedSequenceExpression(Z, a0);
            }
            static isReferencedIdentifierName(Z, a0) {
                const a3 = [];
                let a4 = !1;
                let a5 = !1;
                O.traverse(a0, {
                    enter: a6 => {
                        if (a6 === Z) {
                            a5 = !0;
                        }
                        if (V.NodeGuards.isIdentifierNode(a6)) {
                            if (a5) {
                                if (a3.includes(a6.name)) {
                                    a4 = !0;
                                }
                            } else {
                                a3.push(a6.name);
                            }
                        }
                    },
                    leave: a6 => {
                        if (a6 === Z) {
                            a5 = !1;
                            return O.VisitorOption.Break;
                        }
                    }
                });
                return a4;
            }
            static isProhibitedSequenceExpression(Z, a0) {
                return V.NodeGuards.isExpressionStatementNode(a0) && V.NodeGuards.isSequenceExpressionNode(a0.expression) && a0.expression.expressions.some(a1 => V.NodeGuards.isCallExpressionNode(a1) && V.NodeGuards.isSuperNode(a1.callee));
            }
            getVisitor(Z) {
                if (!this.options.transformObjectKeys) {
                    return null;
                }
                switch (Z) {
                case T.TransformationStage.Converting:
                    return a2;
                default:
                    return null;
                }
            }
            transformNode(Z, a0) {
                if (!Z.properties.length) {
                    return Z;
                }
                const a2 = W.NodeStatementUtils.getRootStatementOfNode(Z);
                if (B.isProhibitedHostStatement(Z, a2)) {
                    return Z;
                } else {
                    return this.applyObjectExpressionKeysExtractorsRecursive(B.objectExpressionExtractorNames, Z, a2);
                }
            }
            applyObjectExpressionKeysExtractorsRecursive(Z, a0, a1) {
                const a3 = [...Z];
                const a4 = a3.shift();
                if (!a4) {
                    return a0;
                }
                const {
                    nodeToReplace: a5,
                    objectExpressionHostStatement: a6,
                    objectExpressionNode: a7
                } = this.objectExpressionExtractorFactory(a4).extract(a0, a1);
                this.applyObjectExpressionKeysExtractorsRecursive(a3, a7, a6);
                return a5;
            }
        };
        Y.objectExpressionExtractorNames = [
            X.ObjectExpressionExtractor.ObjectExpressionToVariableDeclarationExtractor,
            X.ObjectExpressionExtractor.BasePropertiesExtractor
        ];
        Y = B = F([
            L.injectable(),
            H(0, L.inject(M.ServiceIdentifiers.Factory__IObjectExpressionExtractor)),
            H(1, L.inject(M.ServiceIdentifiers.IRandomGenerator)),
            H(2, L.inject(M.ServiceIdentifiers.IOptions)),
            G('design:paramtypes', [
                'function' == typeof (C = void 0 !== P.TObjectExpressionExtractorFactory && P.TObjectExpressionExtractorFactory) ? C : Object,
                'function' == typeof (D = void 0 !== R.IRandomGenerator && R.IRandomGenerator) ? D : Object,
                'function' == typeof (E = void 0 !== Q.IOptions && Q.IOptions) ? E : Object
            ])
        ], Y);
        w.ObjectExpressionKeysTransformer = Y;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (j, k, q) {
        'use strict';
        var x;
        var z;
        var A = this && this.__decorate || function (N, O, P, Q) {
            var T;
            var U = arguments.length;
            var V = U < 3 ? O : null === Q ? Q = Object.getOwnPropertyDescriptor(O, P) : Q;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                V = Reflect.decorate(N, O, P, Q);
            } else {
                for (var W = N.length - 1; W >= 0; W--)
                    if (T = N[W]) {
                        V = (U < 3 ? T(V) : U > 3 ? T(O, P, V) : T(O, P)) || V;
                    }
            }
            if (U > 3 && V) {
                Object.defineProperty(O, P, V);
            }
            return V;
        };
        var B = this && this.__metadata || function (N, O) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(N, O);
            }
        };
        var C = this && this.__param || function (N, O) {
            return function (R, S) {
                O(R, S, N);
            };
        };
        const D = { value: !0 };
        Object.defineProperty(k, '__esModule', D);
        const E = q(0);
        const F = q(1);
        const G = q(2);
        const H = q(3);
        const I = q(10);
        const J = q(11);
        const K = q(8);
        const L = q(4);
        let M = class extends J.AbstractNodeTransformer {
            constructor(N, O) {
                super(N, O);
            }
            getVisitor(N) {
                switch (N) {
                case I.TransformationStage.Converting:
                    return Q;
                default:
                    return null;
                }
            }
            transformNode(N, O) {
                N.properties.forEach(S => {
                    if (S.key) {
                        if (S.computed) {
                            this.transformComputedProperty(S);
                        } else {
                            this.transformBaseProperty(S);
                        }
                    }
                });
                return N;
            }
            transformComputedProperty(N) {
                if (L.NodeGuards.isLiteralNode(N.key) && 'string' == typeof N.key.value) {
                    N.key = K.NodeFactory.literalNode(N.key.value);
                }
            }
            transformBaseProperty(N) {
                if (N.shorthand) {
                    N.shorthand = !1;
                }
                if (L.NodeGuards.isIdentifierNode(N.key)) {
                    N.key = K.NodeFactory.literalNode(N.key.name);
                }
            }
        };
        M = A([
            E.injectable(),
            C(0, E.inject(F.ServiceIdentifiers.IRandomGenerator)),
            C(1, E.inject(F.ServiceIdentifiers.IOptions)),
            B('design:paramtypes', [
                'function' == typeof (x = void 0 !== H.IRandomGenerator && H.IRandomGenerator) ? x : Object,
                'function' == typeof (z = void 0 !== G.IOptions && G.IOptions) ? z : Object
            ])
        ], M);
        k.ObjectExpressionTransformer = M;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (Z, a0, a1, a2) {
            var a3;
            var a4 = arguments.length;
            var a5 = a4 < 3 ? a0 : null === a2 ? a2 = Object.getOwnPropertyDescriptor(a0, a1) : a2;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a5 = Reflect.decorate(Z, a0, a1, a2);
            } else {
                for (var a6 = Z.length - 1; a6 >= 0; a6--)
                    if (a3 = Z[a6]) {
                        a5 = (a4 < 3 ? a3(a5) : a4 > 3 ? a3(a0, a1, a5) : a3(a0, a1)) || a5;
                    }
            }
            if (a4 > 3 && a5) {
                Object.defineProperty(a0, a1, a5);
            }
            return a5;
        };
        var F = this && this.__metadata || function (Z, a0) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(Z, a0);
            }
        };
        var G = this && this.__param || function (Z, a0) {
            return function (a2, a3) {
                a0(a2, a3, Z);
            };
        };
        var H = this && this.__importStar || function (Z) {
            if (Z && Z.__esModule) {
                return Z;
            }
            if (null != Z) {
                for (var a3 in Z)
                    if (Object.hasOwnProperty.call(Z, a3)) {
                        a2[a3] = Z[a3];
                    }
            }
            return a2;
        };
        const J = { value: !0 };
        Object.defineProperty(w, '__esModule', J);
        const K = x(0);
        const L = x(1);
        const M = H(x(12));
        const O = x(2);
        const P = x(3);
        const Q = x(24);
        const R = x(10);
        const T = x(11);
        const U = x(8);
        const V = x(4);
        const W = x(45);
        const X = x(6);
        let Y = B = class extends T.AbstractNodeTransformer {
            constructor(Z, a0) {
                super(Z, a0);
                this.runAfter = [
                    Q.NodeTransformer.ObjectExpressionKeysTransformer,
                    Q.NodeTransformer.TemplateLiteralTransformer
                ];
            }
            static chunkString(Z, a0) {
                const a3 = Math.ceil(Z.length / a0);
                const a4 = [];
                let a5 = 0;
                for (let a6 = 0; a6 < a3; ++a6, a5 += a0)
                    a4[a6] = Z.substr(a5, a0);
                return a4;
            }
            getVisitor(Z) {
                switch (Z) {
                case R.TransformationStage.Converting:
                    return a3;
                default:
                    return null;
                }
            }
            transformNode(Z, a0) {
                if (W.NodeLiteralUtils.isProhibitedLiteralNode(Z, a0)) {
                    return Z;
                }
                const a3 = this.transformLiteralNodeByChunkLength(Z, a0, B.firstPassChunkLength);
                return M.replace(a3, a4);
            }
            transformLiteralNodeByChunkLength(Z, a0, a1) {
                if ('string' != typeof Z.value) {
                    return Z;
                }
                if (a1 >= Z.value.length) {
                    return Z;
                }
                const a4 = B.chunkString(Z.value, a1);
                const a5 = this.transformStringChunksToBinaryExpressionNode(a4);
                X.NodeUtils.parentizeAst(a5);
                X.NodeUtils.parentizeNode(a5, a0);
                return a5;
            }
            transformStringChunksToBinaryExpressionNode(Z) {
                const a3 = Z.shift();
                const a4 = Z.shift();
                if (!a3 || !a4) {
                    throw new Error('First and second chunks values should not be empty');
                }
                const a5 = U.NodeFactory.binaryExpressionNode('+', U.NodeFactory.literalNode(a3), U.NodeFactory.literalNode(a4));
                return Z.reduce((a6, a7) => {
                    const aa = U.NodeFactory.literalNode(a7);
                    return U.NodeFactory.binaryExpressionNode('+', a6, aa);
                }, a5);
            }
        };
        Y.firstPassChunkLength = 1000;
        Y = B = E([
            K.injectable(),
            G(0, K.inject(L.ServiceIdentifiers.IRandomGenerator)),
            G(1, K.inject(L.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (C = void 0 !== P.IRandomGenerator && P.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== O.IOptions && O.IOptions) ? D : Object
            ])
        ], Y);
        w.SplitStringTransformer = Y;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D = this && this.__decorate || function (R, S, T, U) {
            var X;
            var Y = arguments.length;
            var Z = Y < 3 ? S : null === U ? U = Object.getOwnPropertyDescriptor(S, T) : U;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                Z = Reflect.decorate(R, S, T, U);
            } else {
                for (var a0 = R.length - 1; a0 >= 0; a0--)
                    if (X = R[a0]) {
                        Z = (Y < 3 ? X(Z) : Y > 3 ? X(S, T, Z) : X(S, T)) || Z;
                    }
            }
            if (Y > 3 && Z) {
                Object.defineProperty(S, T, Z);
            }
            return Z;
        };
        var E = this && this.__metadata || function (R, S) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(R, S);
            }
        };
        var F = this && this.__param || function (R, S) {
            return function (W, X) {
                S(W, X, R);
            };
        };
        const G = { value: !0 };
        Object.defineProperty(v, '__esModule', G);
        const H = w(0);
        const I = w(1);
        const J = w(2);
        const K = w(3);
        const L = w(10);
        const M = w(11);
        const N = w(8);
        const O = w(4);
        const P = w(6);
        let Q = A = class extends M.AbstractNodeTransformer {
            constructor(R, S) {
                super(R, S);
            }
            static isLiteralNodeWithStringValue(R) {
                return !!R && O.NodeGuards.isLiteralNode(R) && 'string' == typeof R.value;
            }
            static isValidTemplateLiteralNode(R, S) {
                return O.NodeGuards.isTemplateLiteralNode(R) && !O.NodeGuards.isTaggedTemplateExpressionNode(S);
            }
            getVisitor(R) {
                switch (R) {
                case L.TransformationStage.Converting:
                    return U;
                default:
                    return null;
                }
            }
            transformNode(R, S) {
                const W = R.expressions;
                let X;
                let Y = [];
                if (R.quasis.forEach(Z => {
                        Y.push(N.NodeFactory.literalNode(Z.value.cooked));
                        const a3 = W.shift();
                        if (a3) {
                            Y.push(a3);
                        }
                    }), Y = Y.filter(Z => !(O.NodeGuards.isLiteralNode(Z) && '' === Z.value)), A.isLiteralNodeWithStringValue(Y[0]) || A.isLiteralNodeWithStringValue(Y[1]) || Y.unshift(N.NodeFactory.literalNode('')), Y.length > 1) {
                    let a0 = N.NodeFactory.binaryExpressionNode('+', Y.shift(), Y.shift());
                    Y.forEach(a1 => {
                        a0 = N.NodeFactory.binaryExpressionNode('+', a0, a1);
                    });
                    X = a0;
                } else {
                    X = Y[0];
                }
                P.NodeUtils.parentizeAst(X);
                P.NodeUtils.parentizeNode(X, S);
                return X;
            }
        };
        Q = A = D([
            H.injectable(),
            F(0, H.inject(I.ServiceIdentifiers.IRandomGenerator)),
            F(1, H.inject(I.ServiceIdentifiers.IOptions)),
            E('design:paramtypes', [
                'function' == typeof (B = void 0 !== K.IRandomGenerator && K.IRandomGenerator) ? B : Object,
                'function' == typeof (C = void 0 !== J.IOptions && J.IOptions) ? C : Object
            ])
        ], Q);
        v.TemplateLiteralTransformer = Q;
    },
    function (g, h, j) {
        'use strict';
        var p;
        var q = this && this.__decorate || function (B, C, D, E) {
            var F;
            var G = arguments.length;
            var H = G < 3 ? C : null === E ? E = Object.getOwnPropertyDescriptor(C, D) : E;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                H = Reflect.decorate(B, C, D, E);
            } else {
                for (var I = B.length - 1; I >= 0; I--)
                    if (F = B[I]) {
                        H = (G < 3 ? F(H) : G > 3 ? F(C, D, H) : F(C, D)) || H;
                    }
            }
            if (G > 3 && H) {
                Object.defineProperty(C, D, H);
            }
            return H;
        };
        const u = { value: !0 };
        Object.defineProperty(h, '__esModule', u);
        const v = j(0);
        const w = j(21);
        const x = j(8);
        const y = j(4);
        const z = j(17);
        let A = p = class {
            static getPropertyNodeKeyName(B) {
                const E = B.key;
                if (!y.NodeGuards.isLiteralNode(E) || 'string' != typeof E.value && 'number' != typeof E.value) {
                    if (y.NodeGuards.isIdentifierNode(E)) {
                        return E.name;
                    } else {
                        return null;
                    }
                } else {
                    return E.value.toString();
                }
            }
            static isProhibitedPattern(B) {
                return !B || y.NodeGuards.isObjectPatternNode(B) || y.NodeGuards.isArrayPatternNode(B) || y.NodeGuards.isAssignmentPatternNode(B) || y.NodeGuards.isRestElementNode(B);
            }
            extract(B, C) {
                const E = B.parentNode;
                if (E && y.NodeGuards.isVariableDeclaratorNode(E) && y.NodeGuards.isIdentifierNode(E.id)) {
                    return this.transformObjectExpressionNode(B, C, E.id);
                } else {
                    return {
                        nodeToReplace: B,
                        objectExpressionHostStatement: C,
                        objectExpressionNode: B
                    };
                }
            }
            transformObjectExpressionNode(B, C, D) {
                const F = B.properties;
                const [G, H] = this.extractPropertiesToExpressionStatements(F, C, D);
                const I = z.NodeStatementUtils.getScopeOfNode(C);
                this.filterExtractedObjectExpressionProperties(B, H);
                w.NodeAppender.insertAfter(I, G, C);
                return {
                    nodeToReplace: B,
                    objectExpressionHostStatement: C,
                    objectExpressionNode: B
                };
            }
            extractPropertiesToExpressionStatements(B, C, D) {
                const H = B.length;
                const I = [];
                const J = [];
                for (let K = 0; K < H; K++) {
                    const M = B[K];
                    const N = M.value;
                    if (p.isProhibitedPattern(N)) {
                        continue;
                    }
                    const O = p.getPropertyNodeKeyName(M);
                    if (!O) {
                        continue;
                    }
                    const P = !M.computed || M.computed && !!M.key && y.NodeGuards.isLiteralNode(M.key) ? x.NodeFactory.literalNode(O) : x.NodeFactory.identifierNode(O);
                    const Q = x.NodeFactory.memberExpressionNode(D, P, !0);
                    const R = x.NodeFactory.expressionStatementNode(x.NodeFactory.assignmentExpressionNode('=', Q, N));
                    if (y.NodeGuards.isObjectExpressionNode(M.value)) {
                        this.transformObjectExpressionNode(M.value, C, Q);
                    }
                    I.push(R);
                    J.push(K);
                }
                return [
                    I,
                    J
                ];
            }
            filterExtractedObjectExpressionProperties(B, C) {
                B.properties = B.properties.filter((D, E) => !C.includes(E));
            }
        };
        A = p = q([v.injectable()], A);
        h.BasePropertiesExtractor = A;
    },
    function (q, w, x) {
        'use strict';
        Object.defineProperty(w, '__esModule', B);
        const D = x(16);
        const E = x(0);
        const F = x(1);
        const G = x(27);
        const H = x(63);
        const J = x(110);
        const K = x(111);
        const L = x(112);
        const M = x(113);
        const P = x(114);
        const Q = x(115);
        const R = x(119);
        const T = x(121);
        const U = x(123);
        const V = x(125);
        const W = x(127);
        const X = x(131);
        const Y = x(133);
        const Z = x(135);
        const a0 = x(137);
        const a1 = x(144);
        const a2 = x(146);
        w.customCodeHelpersModule = new E.ContainerModule(a3 => {
            a3(F.ServiceIdentifiers.ICustomCodeHelper).to(Q.ConsoleOutputDisableCodeHelper).whenTargetNamed(G.CustomCodeHelper.ConsoleOutputDisable);
            a3(F.ServiceIdentifiers.ICustomCodeHelper).to(U.DebugProtectionFunctionCallCodeHelper).whenTargetNamed(G.CustomCodeHelper.DebugProtectionFunctionCall);
            a3(F.ServiceIdentifiers.ICustomCodeHelper).to(V.DebugProtectionFunctionIntervalCodeHelper).whenTargetNamed(G.CustomCodeHelper.DebugProtectionFunctionInterval);
            a3(F.ServiceIdentifiers.ICustomCodeHelper).to(W.DebugProtectionFunctionCodeHelper).whenTargetNamed(G.CustomCodeHelper.DebugProtectionFunction);
            a3(F.ServiceIdentifiers.ICustomCodeHelper).to(X.DomainLockCodeHelper).whenTargetNamed(G.CustomCodeHelper.DomainLock);
            a3(F.ServiceIdentifiers.ICustomCodeHelper).to(Y.CallsControllerFunctionCodeHelper).whenTargetNamed(G.CustomCodeHelper.CallsControllerFunction);
            a3(F.ServiceIdentifiers.ICustomCodeHelper).to(Z.SelfDefendingUnicodeCodeHelper).whenTargetNamed(G.CustomCodeHelper.SelfDefendingUnicode);
            a3(F.ServiceIdentifiers.ICustomCodeHelper).to(a0.StringArrayCallsWrapperCodeHelper).whenTargetNamed(G.CustomCodeHelper.StringArrayCallsWrapper);
            a3(F.ServiceIdentifiers.ICustomCodeHelper).to(a1.StringArrayCodeHelper).whenTargetNamed(G.CustomCodeHelper.StringArray);
            a3(F.ServiceIdentifiers.ICustomCodeHelper).to(a2.StringArrayRotateFunctionCodeHelper).whenTargetNamed(G.CustomCodeHelper.StringArrayRotateFunction);
            a3(F.ServiceIdentifiers.ICustomCodeHelperGroup).to(J.ConsoleOutputCodeHelperGroup).whenTargetNamed(H.CustomCodeHelperGroup.ConsoleOutput);
            a3(F.ServiceIdentifiers.ICustomCodeHelperGroup).to(K.DebugProtectionCodeHelperGroup).whenTargetNamed(H.CustomCodeHelperGroup.DebugProtection);
            a3(F.ServiceIdentifiers.ICustomCodeHelperGroup).to(L.DomainLockCustomCodeHelperGroup).whenTargetNamed(H.CustomCodeHelperGroup.DomainLock);
            a3(F.ServiceIdentifiers.ICustomCodeHelperGroup).to(M.SelfDefendingCodeHelperGroup).whenTargetNamed(H.CustomCodeHelperGroup.SelfDefending);
            a3(F.ServiceIdentifiers.ICustomCodeHelperGroup).to(P.StringArrayCodeHelperGroup).whenTargetNamed(H.CustomCodeHelperGroup.StringArray);
            a3(F.ServiceIdentifiers.Factory__ICustomCodeHelper).toFactory(D.InversifyContainerFacade.getFactory(F.ServiceIdentifiers.ICustomCodeHelper));
            a3(F.ServiceIdentifiers.Factory__ICustomCodeHelperGroup).toFactory(D.InversifyContainerFacade.getFactory(F.ServiceIdentifiers.ICustomCodeHelperGroup));
            a3(F.ServiceIdentifiers.ICustomCodeHelperFormatter).to(R.CustomCodeHelperFormatter).inSingletonScope();
            a3(F.ServiceIdentifiers.ICustomCodeHelperObfuscator).to(T.CustomCodeHelperObfuscator).inSingletonScope();
        });
    },
    function (q, w, x) {
        'use strict';
        var B;
        var D;
        var E;
        var F;
        var G;
        var H = this && this.__decorate || function (a3, a4, a5, a6) {
            var a7;
            var a8 = arguments.length;
            var a9 = a8 < 3 ? a4 : null === a6 ? a6 = Object.getOwnPropertyDescriptor(a4, a5) : a6;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a9 = Reflect.decorate(a3, a4, a5, a6);
            } else {
                for (var aa = a3.length - 1; aa >= 0; aa--)
                    if (a7 = a3[aa]) {
                        a9 = (a8 < 3 ? a7(a9) : a8 > 3 ? a7(a4, a5, a9) : a7(a4, a5)) || a9;
                    }
            }
            if (a8 > 3 && a9) {
                Object.defineProperty(a4, a5, a9);
            }
            return a9;
        };
        var J = this && this.__metadata || function (a3, a4) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a3, a4);
            }
        };
        var K = this && this.__param || function (a3, a4) {
            return function (a7, a8) {
                a4(a7, a8, a3);
            };
        };
        Object.defineProperty(w, '__esModule', L);
        const M = x(0);
        const P = x(1);
        const Q = x(29);
        const R = x(5);
        const T = x(2);
        const U = x(3);
        const V = x(7);
        const W = x(27);
        const X = x(25);
        const Y = x(30);
        const Z = x(21);
        const a0 = x(22);
        const a1 = x(4);
        let a2 = class extends Y.AbstractCustomCodeHelperGroup {
            constructor(a3, a4, a5, a6) {
                super(a4, a5, a6);
                this.appendEvent = X.ObfuscationEvent.BeforeObfuscation;
                this.customCodeHelperFactory = a3;
            }
            appendNodes(a3, a4) {
                var a7;
                if (!this.options.disableConsoleOutput) {
                    return;
                }
                const a9 = this.getRandomCallsGraphIndex(a4.length);
                const aa = a4.length ? Z.NodeAppender.getOptimalBlockScope(a4, a9) : a3;
                const ab = a4.length ? Z.NodeAppender.getOptimalBlockScope(a4, a9, 1) : a3;
                const ac = null !== (a7 = a0.NodeLexicalScopeUtils.getLexicalScope(aa)) && void 0 !== a7 ? a7 : null;
                const ad = ac && a1.NodeGuards.isProgramNode(ac) ? this.identifierNamesGenerator.generate(ac) : this.randomGenerator.getRandomString(5);
                const ae = ac && a1.NodeGuards.isProgramNode(ac) ? this.identifierNamesGenerator.generate(ac) : this.randomGenerator.getRandomString(5);
                this.appendCustomNodeIfExist(W.CustomCodeHelper.ConsoleOutputDisable, af => {
                    af.initialize(ae, ad);
                    Z.NodeAppender.prepend(aa, af.getNode());
                });
                this.appendCustomNodeIfExist(W.CustomCodeHelper.CallsControllerFunction, af => {
                    af.initialize(this.appendEvent, ae);
                    Z.NodeAppender.prepend(ab, af.getNode());
                });
            }
            initialize() {
                if (this.customCodeHelpers = new Map(), !this.options.disableConsoleOutput) {
                    return;
                }
                const a4 = this.customCodeHelperFactory(W.CustomCodeHelper.ConsoleOutputDisable);
                const a5 = this.customCodeHelperFactory(W.CustomCodeHelper.CallsControllerFunction);
                this.customCodeHelpers.set(W.CustomCodeHelper.ConsoleOutputDisable, a4);
                this.customCodeHelpers.set(W.CustomCodeHelper.CallsControllerFunction, a5);
            }
        };
        H([
            V.initializable(),
            J('design:type', 'function' == typeof (B = 'undefined' != typeof Map && Map) ? B : Object)
        ], a2.prototype, 'customCodeHelpers', void 0);
        a2 = H([
            M.injectable(),
            K(0, M.inject(P.ServiceIdentifiers.Factory__ICustomCodeHelper)),
            K(1, M.inject(P.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            K(2, M.inject(P.ServiceIdentifiers.IRandomGenerator)),
            K(3, M.inject(P.ServiceIdentifiers.IOptions)),
            J('design:paramtypes', [
                'function' == typeof (D = void 0 !== Q.TCustomCodeHelperFactory && Q.TCustomCodeHelperFactory) ? D : Object,
                'function' == typeof (E = void 0 !== R.TIdentifierNamesGeneratorFactory && R.TIdentifierNamesGeneratorFactory) ? E : Object,
                'function' == typeof (F = void 0 !== U.IRandomGenerator && U.IRandomGenerator) ? F : Object,
                'function' == typeof (G = void 0 !== T.IOptions && T.IOptions) ? G : Object
            ])
        ], a2);
        w.ConsoleOutputCodeHelperGroup = a2;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var D;
        var E;
        var F;
        var G;
        var H = this && this.__decorate || function (a3, a4, a5, a6) {
            var a9;
            var aa = arguments.length;
            var ab = aa < 3 ? a4 : null === a6 ? a6 = Object.getOwnPropertyDescriptor(a4, a5) : a6;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                ab = Reflect.decorate(a3, a4, a5, a6);
            } else {
                for (var ac = a3.length - 1; ac >= 0; ac--)
                    if (a9 = a3[ac]) {
                        ab = (aa < 3 ? a9(ab) : aa > 3 ? a9(a4, a5, ab) : a9(a4, a5)) || ab;
                    }
            }
            if (aa > 3 && ab) {
                Object.defineProperty(a4, a5, ab);
            }
            return ab;
        };
        var J = this && this.__metadata || function (a3, a4) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a3, a4);
            }
        };
        var K = this && this.__param || function (a3, a4) {
            return function (a7, a8) {
                a4(a7, a8, a3);
            };
        };
        Object.defineProperty(w, '__esModule', L);
        const M = x(0);
        const P = x(1);
        const Q = x(29);
        const R = x(5);
        const T = x(2);
        const U = x(3);
        const V = x(7);
        const W = x(27);
        const X = x(25);
        const Y = x(30);
        const Z = x(21);
        const a0 = x(4);
        const a1 = x(22);
        let a2 = class extends Y.AbstractCustomCodeHelperGroup {
            constructor(a3, a4, a5, a6) {
                super(a4, a5, a6);
                this.appendEvent = X.ObfuscationEvent.BeforeObfuscation;
                this.customCodeHelperFactory = a3;
            }
            appendNodes(a3, a4) {
                var a7;
                if (!this.options.debugProtection) {
                    return;
                }
                const a9 = this.getRandomCallsGraphIndex(a4.length);
                const aa = a4.length ? Z.NodeAppender.getOptimalBlockScope(a4, a9) : a3;
                const ab = a4.length ? Z.NodeAppender.getOptimalBlockScope(a4, a9, 1) : a3;
                const ac = null !== (a7 = a1.NodeLexicalScopeUtils.getLexicalScope(aa)) && void 0 !== a7 ? a7 : null;
                const ad = ac && a0.NodeGuards.isProgramNode(ac) ? this.identifierNamesGenerator.generate(ac) : this.randomGenerator.getRandomString(5);
                const ae = ac && a0.NodeGuards.isProgramNode(ac) ? this.identifierNamesGenerator.generate(ac) : this.randomGenerator.getRandomString(5);
                this.appendCustomNodeIfExist(W.CustomCodeHelper.DebugProtectionFunctionCall, af => {
                    af.initialize(ad, ae);
                    Z.NodeAppender.prepend(aa, af.getNode());
                });
                this.appendCustomNodeIfExist(W.CustomCodeHelper.CallsControllerFunction, af => {
                    af.initialize(this.appendEvent, ae);
                    Z.NodeAppender.prepend(ab, af.getNode());
                });
                this.appendCustomNodeIfExist(W.CustomCodeHelper.DebugProtectionFunction, af => {
                    af.initialize(ad);
                    Z.NodeAppender.append(a3, af.getNode());
                });
                this.appendCustomNodeIfExist(W.CustomCodeHelper.DebugProtectionFunctionInterval, af => {
                    const aj = a0.NodeGuards.isSwitchCaseNode(a3) ? a3.consequent.length : a3.body.length;
                    const ak = this.randomGenerator.getRandomInteger(0, aj);
                    af.initialize(ad);
                    Z.NodeAppender.insertAtIndex(a3, af.getNode(), ak);
                });
            }
            initialize() {
                if (this.customCodeHelpers = new Map(), !this.options.debugProtection) {
                    return;
                }
                const a3 = this.customCodeHelperFactory(W.CustomCodeHelper.DebugProtectionFunction);
                const a4 = this.customCodeHelperFactory(W.CustomCodeHelper.DebugProtectionFunctionCall);
                const a5 = this.customCodeHelperFactory(W.CustomCodeHelper.DebugProtectionFunctionInterval);
                const a6 = this.customCodeHelperFactory(W.CustomCodeHelper.CallsControllerFunction);
                this.customCodeHelpers.set(W.CustomCodeHelper.DebugProtectionFunction, a3);
                this.customCodeHelpers.set(W.CustomCodeHelper.DebugProtectionFunctionCall, a4);
                if (this.options.debugProtectionInterval) {
                    this.customCodeHelpers.set(W.CustomCodeHelper.DebugProtectionFunctionInterval, a5);
                }
                this.customCodeHelpers.set(W.CustomCodeHelper.CallsControllerFunction, a6);
            }
        };
        H([
            V.initializable(),
            J('design:type', 'function' == typeof (B = 'undefined' != typeof Map && Map) ? B : Object)
        ], a2.prototype, 'customCodeHelpers', void 0);
        a2 = H([
            M.injectable(),
            K(0, M.inject(P.ServiceIdentifiers.Factory__ICustomCodeHelper)),
            K(1, M.inject(P.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            K(2, M.inject(P.ServiceIdentifiers.IRandomGenerator)),
            K(3, M.inject(P.ServiceIdentifiers.IOptions)),
            J('design:paramtypes', [
                'function' == typeof (D = void 0 !== Q.TCustomCodeHelperFactory && Q.TCustomCodeHelperFactory) ? D : Object,
                'function' == typeof (E = void 0 !== R.TIdentifierNamesGeneratorFactory && R.TIdentifierNamesGeneratorFactory) ? E : Object,
                'function' == typeof (F = void 0 !== U.IRandomGenerator && U.IRandomGenerator) ? F : Object,
                'function' == typeof (G = void 0 !== T.IOptions && T.IOptions) ? G : Object
            ])
        ], a2);
        w.DebugProtectionCodeHelperGroup = a2;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var D;
        var E;
        var F;
        var G;
        var H = this && this.__decorate || function (a3, a4, a5, a6) {
            var a9;
            var aa = arguments.length;
            var ab = aa < 3 ? a4 : null === a6 ? a6 = Object.getOwnPropertyDescriptor(a4, a5) : a6;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                ab = Reflect.decorate(a3, a4, a5, a6);
            } else {
                for (var ac = a3.length - 1; ac >= 0; ac--)
                    if (a9 = a3[ac]) {
                        ab = (aa < 3 ? a9(ab) : aa > 3 ? a9(a4, a5, ab) : a9(a4, a5)) || ab;
                    }
            }
            if (aa > 3 && ab) {
                Object.defineProperty(a4, a5, ab);
            }
            return ab;
        };
        var J = this && this.__metadata || function (a3, a4) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a3, a4);
            }
        };
        var K = this && this.__param || function (a3, a4) {
            return function (a5, a6) {
                a4(a5, a6, a3);
            };
        };
        Object.defineProperty(w, '__esModule', L);
        const M = x(0);
        const P = x(1);
        const Q = x(29);
        const R = x(5);
        const T = x(2);
        const U = x(3);
        const V = x(7);
        const W = x(27);
        const X = x(25);
        const Y = x(30);
        const Z = x(21);
        const a0 = x(22);
        const a1 = x(4);
        let a2 = class extends Y.AbstractCustomCodeHelperGroup {
            constructor(a3, a4, a5, a6) {
                super(a4, a5, a6);
                this.appendEvent = X.ObfuscationEvent.BeforeObfuscation;
                this.customCodeHelperFactory = a3;
            }
            appendNodes(a3, a4) {
                var a7;
                if (!this.options.domainLock.length) {
                    return;
                }
                const a9 = this.getRandomCallsGraphIndex(a4.length);
                const aa = a4.length ? Z.NodeAppender.getOptimalBlockScope(a4, a9) : a3;
                const ab = a4.length ? Z.NodeAppender.getOptimalBlockScope(a4, a9, 1) : a3;
                const ac = null !== (a7 = a0.NodeLexicalScopeUtils.getLexicalScope(aa)) && void 0 !== a7 ? a7 : null;
                const ad = ac && a1.NodeGuards.isProgramNode(ac) ? this.identifierNamesGenerator.generate(ac) : this.randomGenerator.getRandomString(5);
                const ae = ac && a1.NodeGuards.isProgramNode(ac) ? this.identifierNamesGenerator.generate(ac) : this.randomGenerator.getRandomString(5);
                this.appendCustomNodeIfExist(W.CustomCodeHelper.DomainLock, af => {
                    af.initialize(ae, ad);
                    Z.NodeAppender.prepend(aa, af.getNode());
                });
                this.appendCustomNodeIfExist(W.CustomCodeHelper.CallsControllerFunction, af => {
                    af.initialize(this.appendEvent, ae);
                    Z.NodeAppender.prepend(ab, af.getNode());
                });
            }
            initialize() {
                if (this.customCodeHelpers = new Map(), !this.options.domainLock.length) {
                    return;
                }
                const a5 = this.customCodeHelperFactory(W.CustomCodeHelper.DomainLock);
                const a6 = this.customCodeHelperFactory(W.CustomCodeHelper.CallsControllerFunction);
                this.customCodeHelpers.set(W.CustomCodeHelper.DomainLock, a5);
                this.customCodeHelpers.set(W.CustomCodeHelper.CallsControllerFunction, a6);
            }
        };
        H([
            V.initializable(),
            J('design:type', 'function' == typeof (B = 'undefined' != typeof Map && Map) ? B : Object)
        ], a2.prototype, 'customCodeHelpers', void 0);
        a2 = H([
            M.injectable(),
            K(0, M.inject(P.ServiceIdentifiers.Factory__ICustomCodeHelper)),
            K(1, M.inject(P.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            K(2, M.inject(P.ServiceIdentifiers.IRandomGenerator)),
            K(3, M.inject(P.ServiceIdentifiers.IOptions)),
            J('design:paramtypes', [
                'function' == typeof (D = void 0 !== Q.TCustomCodeHelperFactory && Q.TCustomCodeHelperFactory) ? D : Object,
                'function' == typeof (E = void 0 !== R.TIdentifierNamesGeneratorFactory && R.TIdentifierNamesGeneratorFactory) ? E : Object,
                'function' == typeof (F = void 0 !== U.IRandomGenerator && U.IRandomGenerator) ? F : Object,
                'function' == typeof (G = void 0 !== T.IOptions && T.IOptions) ? G : Object
            ])
        ], a2);
        w.DomainLockCustomCodeHelperGroup = a2;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E;
        var F;
        var G = this && this.__decorate || function (a1, a2, a3, a4) {
            var a7;
            var a8 = arguments.length;
            var a9 = a8 < 3 ? a2 : null === a4 ? a4 = Object.getOwnPropertyDescriptor(a2, a3) : a4;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a9 = Reflect.decorate(a1, a2, a3, a4);
            } else {
                for (var aa = a1.length - 1; aa >= 0; aa--)
                    if (a7 = a1[aa]) {
                        a9 = (a8 < 3 ? a7(a9) : a8 > 3 ? a7(a2, a3, a9) : a7(a2, a3)) || a9;
                    }
            }
            if (a8 > 3 && a9) {
                Object.defineProperty(a2, a3, a9);
            }
            return a9;
        };
        var H = this && this.__metadata || function (a1, a2) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a1, a2);
            }
        };
        var J = this && this.__param || function (a1, a2) {
            return function (a6, a7) {
                a2(a6, a7, a1);
            };
        };
        Object.defineProperty(w, '__esModule', K);
        const L = x(0);
        const M = x(1);
        const P = x(29);
        const Q = x(5);
        const R = x(2);
        const T = x(3);
        const U = x(7);
        const V = x(27);
        const W = x(25);
        const X = x(30);
        const Y = x(21);
        const Z = x(22);
        let a0 = class extends X.AbstractCustomCodeHelperGroup {
            constructor(a1, a2, a3, a4) {
                super(a2, a3, a4);
                this.appendEvent = W.ObfuscationEvent.BeforeObfuscation;
                this.customCodeHelperFactory = a1;
            }
            appendNodes(a1, a2) {
                var a5;
                if (!this.options.selfDefending) {
                    return;
                }
                const a7 = this.getRandomCallsGraphIndex(a2.length);
                const a8 = a2.length ? Y.NodeAppender.getOptimalBlockScope(a2, a7) : a1;
                const a9 = a2.length ? Y.NodeAppender.getOptimalBlockScope(a2, a7, 1) : a1;
                const aa = null !== (a5 = Z.NodeLexicalScopeUtils.getLexicalScope(a8)) && void 0 !== a5 ? a5 : null;
                const ab = aa ? this.identifierNamesGenerator.generate(aa) : this.identifierNamesGenerator.generateForGlobalScope();
                const ac = aa ? this.identifierNamesGenerator.generate(aa) : this.identifierNamesGenerator.generateForGlobalScope();
                this.appendCustomNodeIfExist(V.CustomCodeHelper.SelfDefendingUnicode, ad => {
                    ad.initialize(ac, ab);
                    Y.NodeAppender.prepend(a8, ad.getNode());
                });
                this.appendCustomNodeIfExist(V.CustomCodeHelper.CallsControllerFunction, ad => {
                    ad.initialize(this.appendEvent, ac);
                    Y.NodeAppender.prepend(a9, ad.getNode());
                });
            }
            initialize() {
                if (this.customCodeHelpers = new Map(), !this.options.selfDefending) {
                    return;
                }
                const a4 = this.customCodeHelperFactory(V.CustomCodeHelper.SelfDefendingUnicode);
                const a5 = this.customCodeHelperFactory(V.CustomCodeHelper.CallsControllerFunction);
                this.customCodeHelpers.set(V.CustomCodeHelper.SelfDefendingUnicode, a4);
                this.customCodeHelpers.set(V.CustomCodeHelper.CallsControllerFunction, a5);
            }
        };
        G([
            U.initializable(),
            H('design:type', 'function' == typeof (B = 'undefined' != typeof Map && Map) ? B : Object)
        ], a0.prototype, 'customCodeHelpers', void 0);
        a0 = G([
            L.injectable(),
            J(0, L.inject(M.ServiceIdentifiers.Factory__ICustomCodeHelper)),
            J(1, L.inject(M.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            J(2, L.inject(M.ServiceIdentifiers.IRandomGenerator)),
            J(3, L.inject(M.ServiceIdentifiers.IOptions)),
            H('design:paramtypes', [
                'function' == typeof (C = void 0 !== P.TCustomCodeHelperFactory && P.TCustomCodeHelperFactory) ? C : Object,
                'function' == typeof (D = void 0 !== Q.TIdentifierNamesGeneratorFactory && Q.TIdentifierNamesGeneratorFactory) ? D : Object,
                'function' == typeof (E = void 0 !== T.IRandomGenerator && T.IRandomGenerator) ? E : Object,
                'function' == typeof (F = void 0 !== R.IOptions && R.IOptions) ? F : Object
            ])
        ], a0);
        w.SelfDefendingCodeHelperGroup = a0;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var D;
        var E;
        var F;
        var G;
        var H;
        var J = this && this.__decorate || function (a3, a4, a5, a6) {
            var a7;
            var a8 = arguments.length;
            var a9 = a8 < 3 ? a4 : null === a6 ? a6 = Object.getOwnPropertyDescriptor(a4, a5) : a6;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a9 = Reflect.decorate(a3, a4, a5, a6);
            } else {
                for (var aa = a3.length - 1; aa >= 0; aa--)
                    if (a7 = a3[aa]) {
                        a9 = (a8 < 3 ? a7(a9) : a8 > 3 ? a7(a4, a5, a9) : a7(a4, a5)) || a9;
                    }
            }
            if (a8 > 3 && a9) {
                Object.defineProperty(a4, a5, a9);
            }
            return a9;
        };
        var K = this && this.__metadata || function (a3, a4) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a3, a4);
            }
        };
        var L = this && this.__param || function (a3, a4) {
            return function (a8, a9) {
                a4(a8, a9, a3);
            };
        };
        Object.defineProperty(w, '__esModule', M);
        const P = x(0);
        const Q = x(1);
        const R = x(29);
        const T = x(5);
        const U = x(2);
        const V = x(3);
        const W = x(37);
        const X = x(7);
        const Y = x(27);
        const Z = x(25);
        const a0 = x(30);
        const a1 = x(21);
        let a2 = class extends a0.AbstractCustomCodeHelperGroup {
            constructor(a3, a4, a5, a6, a7) {
                super(a5, a6, a7);
                this.appendEvent = Z.ObfuscationEvent.AfterObfuscation;
                this.customCodeHelperFactory = a3;
                this.stringArrayStorage = a4;
            }
            appendNodes(a3, a4) {
                if (this.stringArrayStorage.getLength()) {
                    this.appendCustomNodeIfExist(Y.CustomCodeHelper.StringArray, a7 => {
                        a1.NodeAppender.prepend(a3, a7.getNode());
                    });
                    this.appendCustomNodeIfExist(Y.CustomCodeHelper.StringArrayCallsWrapper, a7 => {
                        a1.NodeAppender.insertAtIndex(a3, a7.getNode(), 1);
                    });
                    this.appendCustomNodeIfExist(Y.CustomCodeHelper.StringArrayRotateFunction, a7 => {
                        a1.NodeAppender.insertAtIndex(a3, a7.getNode(), 1);
                    });
                }
            }
            initialize() {
                if (this.customCodeHelpers = new Map(), !this.options.stringArray) {
                    return;
                }
                const a5 = this.customCodeHelperFactory(Y.CustomCodeHelper.StringArray);
                const a6 = this.customCodeHelperFactory(Y.CustomCodeHelper.StringArrayCallsWrapper);
                const a7 = this.customCodeHelperFactory(Y.CustomCodeHelper.StringArrayRotateFunction);
                const a8 = this.stringArrayStorage.getStorageName();
                const a9 = this.stringArrayStorage.getStorageCallsWrapperName();
                const aa = this.stringArrayStorage.getRotationAmount();
                a5.initialize(this.stringArrayStorage, a8);
                a6.initialize(a8, a9);
                a7.initialize(a8, aa);
                this.customCodeHelpers.set(Y.CustomCodeHelper.StringArray, a5);
                this.customCodeHelpers.set(Y.CustomCodeHelper.StringArrayCallsWrapper, a6);
                if (this.options.rotateStringArray) {
                    this.customCodeHelpers.set(Y.CustomCodeHelper.StringArrayRotateFunction, a7);
                }
            }
        };
        J([
            X.initializable(),
            K('design:type', 'function' == typeof (B = 'undefined' != typeof Map && Map) ? B : Object)
        ], a2.prototype, 'customCodeHelpers', void 0);
        a2 = J([
            P.injectable(),
            L(0, P.inject(Q.ServiceIdentifiers.Factory__ICustomCodeHelper)),
            L(1, P.inject(Q.ServiceIdentifiers.IStringArrayStorage)),
            L(2, P.inject(Q.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            L(3, P.inject(Q.ServiceIdentifiers.IRandomGenerator)),
            L(4, P.inject(Q.ServiceIdentifiers.IOptions)),
            K('design:paramtypes', [
                'function' == typeof (D = void 0 !== R.TCustomCodeHelperFactory && R.TCustomCodeHelperFactory) ? D : Object,
                'function' == typeof (E = void 0 !== W.IStringArrayStorage && W.IStringArrayStorage) ? E : Object,
                'function' == typeof (F = void 0 !== T.TIdentifierNamesGeneratorFactory && T.TIdentifierNamesGeneratorFactory) ? F : Object,
                'function' == typeof (G = void 0 !== V.IRandomGenerator && V.IRandomGenerator) ? G : Object,
                'function' == typeof (H = void 0 !== U.IOptions && U.IOptions) ? H : Object
            ])
        ], a2);
        w.StringArrayCodeHelperGroup = a2;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var D;
        var E;
        var F;
        var G;
        var H = this && this.__decorate || function (a3, a4, a5, a6) {
            var a7;
            var a8 = arguments.length;
            var a9 = a8 < 3 ? a4 : null === a6 ? a6 = Object.getOwnPropertyDescriptor(a4, a5) : a6;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a9 = Reflect.decorate(a3, a4, a5, a6);
            } else {
                for (var aa = a3.length - 1; aa >= 0; aa--)
                    if (a7 = a3[aa]) {
                        a9 = (a8 < 3 ? a7(a9) : a8 > 3 ? a7(a4, a5, a9) : a7(a4, a5)) || a9;
                    }
            }
            if (a8 > 3 && a9) {
                Object.defineProperty(a4, a5, a9);
            }
            return a9;
        };
        var J = this && this.__metadata || function (a3, a4) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a3, a4);
            }
        };
        var K = this && this.__param || function (a3, a4) {
            return function (a7, a8) {
                a4(a7, a8, a3);
            };
        };
        Object.defineProperty(w, '__esModule', L);
        const M = x(0);
        const P = x(1);
        const Q = x(5);
        const R = x(9);
        const T = x(13);
        const U = x(2);
        const V = x(3);
        const W = x(23);
        const X = x(116);
        const Y = x(48);
        const Z = x(7);
        const a0 = x(15);
        const a1 = x(6);
        let a2 = class extends a0.AbstractCustomCodeHelper {
            constructor(a3, a4, a5, a6, a7) {
                super(a3, a4, a5, a6, a7);
            }
            initialize(a3, a4) {
                this.callsControllerFunctionName = a3;
                this.consoleOutputDisableFunctionName = a4;
            }
            getNodeStructure(a3) {
                return a1.NodeUtils.convertCodeToStructure(a3);
            }
            getCodeHelperTemplate() {
                const a3 = this.options.target !== W.ObfuscationTarget.BrowserNoEval ? this.getGlobalVariableTemplate() : Y.GlobalVariableNoEvalTemplate();
                const a4 = {
                    callControllerFunctionName: this.callsControllerFunctionName,
                    consoleLogDisableFunctionName: this.consoleOutputDisableFunctionName,
                    globalVariableTemplate: a3
                };
                return this.customCodeHelperFormatter.formatTemplate(X.ConsoleOutputDisableExpressionTemplate(), a4);
            }
        };
        H([
            Z.initializable(),
            J('design:type', String)
        ], a2.prototype, 'callsControllerFunctionName', void 0);
        H([
            Z.initializable(),
            J('design:type', String)
        ], a2.prototype, 'consoleOutputDisableFunctionName', void 0);
        a2 = H([
            M.injectable(),
            K(0, M.inject(P.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            K(1, M.inject(P.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            K(2, M.inject(P.ServiceIdentifiers.ICustomCodeHelperObfuscator)),
            K(3, M.inject(P.ServiceIdentifiers.IRandomGenerator)),
            K(4, M.inject(P.ServiceIdentifiers.IOptions)),
            J('design:paramtypes', [
                'function' == typeof (B = void 0 !== Q.TIdentifierNamesGeneratorFactory && Q.TIdentifierNamesGeneratorFactory) ? B : Object,
                'function' == typeof (D = void 0 !== R.ICustomCodeHelperFormatter && R.ICustomCodeHelperFormatter) ? D : Object,
                'function' == typeof (E = void 0 !== T.ICustomCodeHelperObfuscator && T.ICustomCodeHelperObfuscator) ? E : Object,
                'function' == typeof (F = void 0 !== V.IRandomGenerator && V.IRandomGenerator) ? F : Object,
                'function' == typeof (G = void 0 !== U.IOptions && U.IOptions) ? G : Object
            ])
        ], a2);
        w.ConsoleOutputDisableCodeHelper = a2;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.ConsoleOutputDisableExpressionTemplate = function () {
            return '\n        const {consoleLogDisableFunctionName} = {callControllerFunctionName}(this, function () {\n            const func = function () {};\n            \n            {globalVariableTemplate}\n                        \n            if (!that.console) {\n                that.console = (function (func){\n                    const c = {};\n                    \n                    c.log = func;\n                    c.warn = func;\n                    c.debug = func;\n                    c.info = func;\n                    c.error = func;\n                    c.exception = func;\n                    c.table = func;\n                    c.trace = func;\n                    \n                    return c;\n                })(func);\n            } else {\n                that.console.log = func;\n                that.console.warn = func;\n                that.console.debug = func;\n                that.console.info = func;\n                that.console.error = func;\n                that.console.exception = func;\n                that.console.table = func;\n                that.console.trace = func;\n            }\n        });\n        \n        {consoleLogDisableFunctionName}();\n    ';
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.GlobalVariableTemplate1 = function () {
            return '\n        let that;\n        \n        try {\n            const getGlobal = Function(\'return (function() \' + \'{}.constructor("return this")( )\' + \');\');\n            \n            that = getGlobal();\n        } catch (e) {\n            that = window;\n        }\n    ';
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.GlobalVariableTemplate2 = function () {
            return '\n        const getGlobal = function () {\n            let globalObject;\n        \n            try {\n                globalObject = Function(\'return (function() \' + \'{}.constructor("return this")( )\' + \');\')();\n            } catch (e) {\n                globalObject = window;\n            }\n            \n            return globalObject;\n        };\n        const that = getGlobal();\n    ';
        };
    },
    function (j, k, q) {
        'use strict';
        var x;
        var y = this && this.__decorate || function (L, M, N, O) {
            var R;
            var S = arguments.length;
            var T = S < 3 ? M : null === O ? O = Object.getOwnPropertyDescriptor(M, N) : O;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                T = Reflect.decorate(L, M, N, O);
            } else {
                for (var U = L.length - 1; U >= 0; U--)
                    if (R = L[U]) {
                        T = (S < 3 ? R(T) : S > 3 ? R(M, N, T) : R(M, N)) || T;
                    }
            }
            if (S > 3 && T) {
                Object.defineProperty(M, N, T);
            }
            return T;
        };
        var z = this && this.__metadata || function (L, M) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(L, M);
            }
        };
        var A = this && this.__param || function (L, M) {
            return function (N, O) {
                M(N, O, L);
            };
        };
        var B = this && this.__importStar || function (L) {
            if (L && L.__esModule) {
                return L;
            }
            if (null != L) {
                for (var N in L)
                    if (Object.hasOwnProperty.call(L, N)) {
                        M[N] = L[N];
                    }
            }
            return M;
        };
        var C = this && this.__importDefault || function (L) {
            if (L && L.__esModule) {
                return L;
            } else {
                return { default: L };
            }
        };
        Object.defineProperty(k, '__esModule', D);
        const E = q(0);
        const F = q(1);
        const G = B(q(12));
        const H = C(q(120));
        const I = q(64);
        const J = q(4);
        let K = class {
            constructor(L) {
                this.prevailingKindOfVariables = L.getPrevailingKind();
            }
            formatTemplate(L, M) {
                return H.default(L, M);
            }
            formatStructure(L) {
                for (const N of L)
                    G.replace(N, {
                        enter: O => {
                            if (J.NodeGuards.isVariableDeclarationNode(O)) {
                                if ('var' === this.prevailingKindOfVariables) {
                                    O.kind = 'var';
                                }
                                return O;
                            }
                        }
                    });
                return L;
            }
        };
        K = y([
            E.injectable(),
            A(0, E.inject(F.ServiceIdentifiers.IPrevailingKindOfVariablesAnalyzer)),
            z('design:paramtypes', ['function' == typeof (x = void 0 !== I.IPrevailingKindOfVariablesAnalyzer && I.IPrevailingKindOfVariablesAnalyzer) ? x : Object])
        ], K);
        k.CustomCodeHelperFormatter = K;
    },
    function (b, c) {
        b.exports = require('string-template');
    },
    function (h, j, k) {
        'use strict';
        var w;
        var x;
        var y = this && this.__decorate || function (J, K, L, M) {
            var P;
            var Q = arguments.length;
            var R = Q < 3 ? K : null === M ? M = Object.getOwnPropertyDescriptor(K, L) : M;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                R = Reflect.decorate(J, K, L, M);
            } else {
                for (var S = J.length - 1; S >= 0; S--)
                    if (P = J[S]) {
                        R = (Q < 3 ? P(R) : Q > 3 ? P(K, L, R) : P(K, L)) || R;
                    }
            }
            if (Q > 3 && R) {
                Object.defineProperty(K, L, R);
            }
            return R;
        };
        var z = this && this.__metadata || function (J, K) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(J, K);
            }
        };
        var A = this && this.__param || function (J, K) {
            return function (L, M) {
                K(L, M, J);
            };
        };
        Object.defineProperty(j, '__esModule', B);
        const C = k(0);
        const D = k(1);
        const E = k(2);
        const F = k(3);
        const G = k(122);
        const H = k(53);
        let I = class {
            constructor(J, K) {
                this.randomGenerator = J;
                this.options = K;
            }
            obfuscateTemplate(J, K = {}) {
                const N = {
                    identifierNamesGenerator: this.options.identifierNamesGenerator,
                    identifiersDictionary: this.options.identifiersDictionary
                };
                return H.JavaScriptObfuscator.obfuscate(J, Object.assign(Object.assign(Object.assign({}, G.NO_ADDITIONAL_NODES_PRESET), N), K)).getObfuscatedCode();
            }
        };
        I = y([
            C.injectable(),
            A(0, C.inject(D.ServiceIdentifiers.IRandomGenerator)),
            A(1, C.inject(D.ServiceIdentifiers.IOptions)),
            z('design:paramtypes', [
                'function' == typeof (w = void 0 !== F.IRandomGenerator && F.IRandomGenerator) ? w : Object,
                'function' == typeof (x = void 0 !== E.IOptions && E.IOptions) ? x : Object
            ])
        ], I);
        j.CustomCodeHelperObfuscator = I;
    },
    function (d, f, g) {
        'use strict';
        Object.defineProperty(f, '__esModule', k);
        const l = g(33);
        const m = g(23);
        const p = g(34);
        const q = {
            compact: !0,
            controlFlowFlattening: !1,
            debugProtection: !1,
            debugProtectionInterval: !1,
            disableConsoleOutput: !1,
            exclude: [],
            identifierNamesGenerator: l.IdentifierNamesGenerator.HexadecimalIdentifierNamesGenerator,
            identifiersPrefix: '',
            identifiersDictionary: [],
            inputFileName: '',
            renameGlobals: !1,
            reservedNames: [],
            reservedStrings: [],
            rotateStringArray: !1,
            shuffleStringArray: !1,
            sourceMapBaseUrl: '',
            sourceMapMode: p.SourceMapMode.Separate,
            splitStrings: !1,
            splitStringsChunkLength: 0,
            transformObjectKeys: !1,
            unicodeEscapeSequence: !1
        };
        f.NO_ADDITIONAL_NODES_PRESET = Object.freeze(q);
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E;
        var F;
        var G = this && this.__decorate || function (Z, a0, a1, a2) {
            var a3;
            var a4 = arguments.length;
            var a5 = a4 < 3 ? a0 : null === a2 ? a2 = Object.getOwnPropertyDescriptor(a0, a1) : a2;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a5 = Reflect.decorate(Z, a0, a1, a2);
            } else {
                for (var a6 = Z.length - 1; a6 >= 0; a6--)
                    if (a3 = Z[a6]) {
                        a5 = (a4 < 3 ? a3(a5) : a4 > 3 ? a3(a0, a1, a5) : a3(a0, a1)) || a5;
                    }
            }
            if (a4 > 3 && a5) {
                Object.defineProperty(a0, a1, a5);
            }
            return a5;
        };
        var H = this && this.__metadata || function (Z, a0) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(Z, a0);
            }
        };
        var J = this && this.__param || function (Z, a0) {
            return function (a4, a5) {
                a0(a4, a5, Z);
            };
        };
        Object.defineProperty(w, '__esModule', K);
        const L = x(0);
        const M = x(1);
        const O = x(5);
        const P = x(9);
        const Q = x(13);
        const R = x(2);
        const T = x(3);
        const U = x(7);
        const V = x(124);
        const W = x(15);
        const X = x(6);
        let Y = class extends W.AbstractCustomCodeHelper {
            constructor(Z, a0, a1, a2, a3) {
                super(Z, a0, a1, a2, a3);
            }
            initialize(Z, a0) {
                this.debugProtectionFunctionName = Z;
                this.callsControllerFunctionName = a0;
            }
            getNodeStructure(Z) {
                return X.NodeUtils.convertCodeToStructure(Z);
            }
            getCodeHelperTemplate() {
                const Z = {
                    debugProtectionFunctionName: this.debugProtectionFunctionName,
                    callControllerFunctionName: this.callsControllerFunctionName
                };
                return this.customCodeHelperFormatter.formatTemplate(V.DebugProtectionFunctionCallTemplate(), Z);
            }
        };
        G([
            U.initializable(),
            H('design:type', String)
        ], Y.prototype, 'callsControllerFunctionName', void 0);
        G([
            U.initializable(),
            H('design:type', String)
        ], Y.prototype, 'debugProtectionFunctionName', void 0);
        Y = G([
            L.injectable(),
            J(0, L.inject(M.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            J(1, L.inject(M.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            J(2, L.inject(M.ServiceIdentifiers.ICustomCodeHelperObfuscator)),
            J(3, L.inject(M.ServiceIdentifiers.IRandomGenerator)),
            J(4, L.inject(M.ServiceIdentifiers.IOptions)),
            H('design:paramtypes', [
                'function' == typeof (B = void 0 !== O.TIdentifierNamesGeneratorFactory && O.TIdentifierNamesGeneratorFactory) ? B : Object,
                'function' == typeof (C = void 0 !== P.ICustomCodeHelperFormatter && P.ICustomCodeHelperFormatter) ? C : Object,
                'function' == typeof (D = void 0 !== Q.ICustomCodeHelperObfuscator && Q.ICustomCodeHelperObfuscator) ? D : Object,
                'function' == typeof (E = void 0 !== T.IRandomGenerator && T.IRandomGenerator) ? E : Object,
                'function' == typeof (F = void 0 !== R.IOptions && R.IOptions) ? F : Object
            ])
        ], Y);
        w.DebugProtectionFunctionCallCodeHelper = Y;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.DebugProtectionFunctionCallTemplate = function () {
            return '\n        (function () {\n            {callControllerFunctionName}(\n                this,\n                function () {\n                    const regExp1 = new RegExp(\'function *\\\\( *\\\\)\');\n                    const regExp2 = new RegExp(\'\\\\+\\\\+ *\\(?:[a-zA-Z_$][0-9a-zA-Z_$]*\\)\', \'i\');\n           \n                    const result = {debugProtectionFunctionName}(\'init\');\n                    \n                    if (!regExp1.test(result + \'chain\') || !regExp2.test(result + \'input\')) {\n                        result(\'0\');\n                    } else {\n                        {debugProtectionFunctionName}();\n                    }\n                }\n            )();\n        })();\n    ';
        };
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E;
        var F;
        var G = this && this.__decorate || function (Z, a0, a1, a2) {
            var a3;
            var a4 = arguments.length;
            var a5 = a4 < 3 ? a0 : null === a2 ? a2 = Object.getOwnPropertyDescriptor(a0, a1) : a2;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a5 = Reflect.decorate(Z, a0, a1, a2);
            } else {
                for (var a6 = Z.length - 1; a6 >= 0; a6--)
                    if (a3 = Z[a6]) {
                        a5 = (a4 < 3 ? a3(a5) : a4 > 3 ? a3(a0, a1, a5) : a3(a0, a1)) || a5;
                    }
            }
            if (a4 > 3 && a5) {
                Object.defineProperty(a0, a1, a5);
            }
            return a5;
        };
        var H = this && this.__metadata || function (Z, a0) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(Z, a0);
            }
        };
        var J = this && this.__param || function (Z, a0) {
            return function (a2, a3) {
                a0(a2, a3, Z);
            };
        };
        Object.defineProperty(w, '__esModule', K);
        const L = x(0);
        const M = x(1);
        const O = x(5);
        const P = x(9);
        const Q = x(13);
        const R = x(2);
        const T = x(3);
        const U = x(7);
        const V = x(126);
        const W = x(15);
        const X = x(6);
        let Y = class extends W.AbstractCustomCodeHelper {
            constructor(Z, a0, a1, a2, a3) {
                super(Z, a0, a1, a2, a3);
            }
            initialize(Z) {
                this.debugProtectionFunctionName = Z;
            }
            getNodeStructure(Z) {
                return X.NodeUtils.convertCodeToStructure(Z);
            }
            getCodeHelperTemplate() {
                const a0 = { debugProtectionFunctionName: this.debugProtectionFunctionName };
                return this.customCodeHelperFormatter.formatTemplate(V.DebugProtectionFunctionIntervalTemplate(), a0);
            }
        };
        G([
            U.initializable(),
            H('design:type', String)
        ], Y.prototype, 'debugProtectionFunctionName', void 0);
        Y = G([
            L.injectable(),
            J(0, L.inject(M.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            J(1, L.inject(M.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            J(2, L.inject(M.ServiceIdentifiers.ICustomCodeHelperObfuscator)),
            J(3, L.inject(M.ServiceIdentifiers.IRandomGenerator)),
            J(4, L.inject(M.ServiceIdentifiers.IOptions)),
            H('design:paramtypes', [
                'function' == typeof (B = void 0 !== O.TIdentifierNamesGeneratorFactory && O.TIdentifierNamesGeneratorFactory) ? B : Object,
                'function' == typeof (C = void 0 !== P.ICustomCodeHelperFormatter && P.ICustomCodeHelperFormatter) ? C : Object,
                'function' == typeof (D = void 0 !== Q.ICustomCodeHelperObfuscator && Q.ICustomCodeHelperObfuscator) ? D : Object,
                'function' == typeof (E = void 0 !== T.IRandomGenerator && T.IRandomGenerator) ? E : Object,
                'function' == typeof (F = void 0 !== R.IOptions && R.IOptions) ? F : Object
            ])
        ], Y);
        w.DebugProtectionFunctionIntervalCodeHelper = Y;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.DebugProtectionFunctionIntervalTemplate = function () {
            return '\n        setInterval(function () {\n            {debugProtectionFunctionName}();\n        }, 4000);\n    ';
        };
    },
    function (w, x, z) {
        'use strict';
        var D;
        var E;
        var F;
        var G;
        var H;
        var J = this && this.__decorate || function (a5, a6, a7, a8) {
            var ab;
            var ac = arguments.length;
            var ad = ac < 3 ? a6 : null === a8 ? a8 = Object.getOwnPropertyDescriptor(a6, a7) : a8;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                ad = Reflect.decorate(a5, a6, a7, a8);
            } else {
                for (var ae = a5.length - 1; ae >= 0; ae--)
                    if (ab = a5[ae]) {
                        ad = (ac < 3 ? ab(ad) : ac > 3 ? ab(a6, a7, ad) : ab(a6, a7)) || ad;
                    }
            }
            if (ac > 3 && ad) {
                Object.defineProperty(a6, a7, ad);
            }
            return ad;
        };
        var K = this && this.__metadata || function (a5, a6) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a5, a6);
            }
        };
        var L = this && this.__param || function (a5, a6) {
            return function (a9, aa) {
                a6(a9, aa, a5);
            };
        };
        Object.defineProperty(x, '__esModule', M);
        const P = z(0);
        const Q = z(1);
        const R = z(5);
        const T = z(9);
        const U = z(13);
        const V = z(2);
        const W = z(3);
        const X = z(23);
        const Y = z(7);
        const Z = z(128);
        const a0 = z(129);
        const a1 = z(130);
        const a2 = z(15);
        const a3 = z(6);
        let a4 = class extends a2.AbstractCustomCodeHelper {
            constructor(a5, a6, a7, a8, a9) {
                super(a5, a6, a7, a8, a9);
            }
            initialize(a5) {
                this.debugProtectionFunctionName = a5;
            }
            getNodeStructure(a5) {
                return a3.NodeUtils.convertCodeToStructure(a5);
            }
            getCodeHelperTemplate() {
                const a6 = this.options.target !== X.ObfuscationTarget.BrowserNoEval ? Z.DebuggerTemplate() : a0.DebuggerTemplateNoEval();
                const a7 = {
                    debuggerTemplate: a6,
                    debugProtectionFunctionName: this.debugProtectionFunctionName
                };
                return this.customCodeHelperFormatter.formatTemplate(a1.DebugProtectionFunctionTemplate(), a7);
            }
        };
        J([
            Y.initializable(),
            K('design:type', String)
        ], a4.prototype, 'debugProtectionFunctionName', void 0);
        a4 = J([
            P.injectable(),
            L(0, P.inject(Q.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            L(1, P.inject(Q.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            L(2, P.inject(Q.ServiceIdentifiers.ICustomCodeHelperObfuscator)),
            L(3, P.inject(Q.ServiceIdentifiers.IRandomGenerator)),
            L(4, P.inject(Q.ServiceIdentifiers.IOptions)),
            K('design:paramtypes', [
                'function' == typeof (D = void 0 !== R.TIdentifierNamesGeneratorFactory && R.TIdentifierNamesGeneratorFactory) ? D : Object,
                'function' == typeof (E = void 0 !== T.ICustomCodeHelperFormatter && T.ICustomCodeHelperFormatter) ? E : Object,
                'function' == typeof (F = void 0 !== U.ICustomCodeHelperObfuscator && U.ICustomCodeHelperObfuscator) ? F : Object,
                'function' == typeof (G = void 0 !== W.IRandomGenerator && W.IRandomGenerator) ? G : Object,
                'function' == typeof (H = void 0 !== V.IOptions && V.IOptions) ? H : Object
            ])
        ], a4);
        x.DebugProtectionFunctionCodeHelper = a4;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.DebuggerTemplate = function () {
            return '\n        if (typeof counter === \'string\') {\n            return (function (arg) {}.constructor(\'while (true) {}\').apply(\'counter\'));\n        } else {\n            if ((\'\' + counter / counter)[\'length\'] !== 1 || counter % 20 === 0) {\n                (function () {return true;}.constructor(\'debu\' + \'gger\').call(\'action\'));\n            } else {\n                (function () {return false;}.constructor(\'debu\' + \'gger\').apply(\'stateObject\'));\n            }\n            \n        }\n    ';
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.DebuggerTemplateNoEval = function () {
            return '\n        if (typeof counter === \'string\') {\n            const func = function () {\n                while (true) {}\n            };\n            \n            return func();\n        } else {\n            if ((\'\' + counter / counter)[\'length\'] !== 1 || counter % 20 === 0) {\n                debugger;\n            } else {\n                debugger;\n            }\n            \n        }\n    ';
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.DebugProtectionFunctionTemplate = function () {
            return '\n        function {debugProtectionFunctionName} (ret) {\n            function debuggerProtection (counter) {\n            \n                {debuggerTemplate}\n                \n                debuggerProtection(++counter);\n            }\n            \n            try {\n                if (ret) {\n                    return debuggerProtection;\n                } else {\n                    debuggerProtection(0);\n                }\n            } catch (y) {}\n        }\n    ';
        };
    },
    function (w, x, z) {
        'use strict';
        var D;
        var E;
        var F;
        var G;
        var H;
        var J;
        var K = this && this.__decorate || function (a6, a7, a8, a9) {
            var ac;
            var ad = arguments.length;
            var ae = ad < 3 ? a7 : null === a9 ? a9 = Object.getOwnPropertyDescriptor(a7, a8) : a9;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                ae = Reflect.decorate(a6, a7, a8, a9);
            } else {
                for (var af = a6.length - 1; af >= 0; af--)
                    if (ac = a6[af]) {
                        ae = (ad < 3 ? ac(ae) : ad > 3 ? ac(a7, a8, ae) : ac(a7, a8)) || ae;
                    }
            }
            if (ad > 3 && ae) {
                Object.defineProperty(a7, a8, ae);
            }
            return ae;
        };
        var L = this && this.__metadata || function (a6, a7) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a6, a7);
            }
        };
        var M = this && this.__param || function (a6, a7) {
            return function (a8, a9) {
                a7(a8, a9, a6);
            };
        };
        Object.defineProperty(x, '__esModule', P);
        const Q = z(0);
        const R = z(1);
        const T = z(5);
        const U = z(9);
        const V = z(13);
        const W = z(49);
        const X = z(2);
        const Y = z(3);
        const Z = z(23);
        const a0 = z(7);
        const a1 = z(132);
        const a2 = z(48);
        const a3 = z(15);
        const a4 = z(6);
        let a5 = class extends a3.AbstractCustomCodeHelper {
            constructor(a6, a7, a8, a9, aa, ab) {
                super(a6, a7, a8, a9, aa);
                this.cryptUtils = ab;
            }
            initialize(a6, a7) {
                this.callsControllerFunctionName = a6;
                this.domainLockFunctionName = a7;
            }
            getNodeStructure(a6) {
                return a4.NodeUtils.convertCodeToStructure(a6);
            }
            getCodeHelperTemplate() {
                const a8 = this.options.domainLock.join(';');
                const [a9, aa] = this.cryptUtils.hideString(a8, 3 * a8.length);
                const ab = this.options.target !== Z.ObfuscationTarget.BrowserNoEval ? this.getGlobalVariableTemplate() : a2.GlobalVariableNoEvalTemplate();
                const ac = {
                    callControllerFunctionName: this.callsControllerFunctionName,
                    domainLockFunctionName: this.domainLockFunctionName,
                    diff: aa,
                    domains: a9,
                    globalVariableTemplate: ab
                };
                return this.customCodeHelperFormatter.formatTemplate(a1.DomainLockTemplate(), ac);
            }
        };
        K([
            a0.initializable(),
            L('design:type', String)
        ], a5.prototype, 'callsControllerFunctionName', void 0);
        K([
            a0.initializable(),
            L('design:type', String)
        ], a5.prototype, 'domainLockFunctionName', void 0);
        a5 = K([
            Q.injectable(),
            M(0, Q.inject(R.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            M(1, Q.inject(R.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            M(2, Q.inject(R.ServiceIdentifiers.ICustomCodeHelperObfuscator)),
            M(3, Q.inject(R.ServiceIdentifiers.IRandomGenerator)),
            M(4, Q.inject(R.ServiceIdentifiers.IOptions)),
            M(5, Q.inject(R.ServiceIdentifiers.ICryptUtils)),
            L('design:paramtypes', [
                'function' == typeof (D = void 0 !== T.TIdentifierNamesGeneratorFactory && T.TIdentifierNamesGeneratorFactory) ? D : Object,
                'function' == typeof (E = void 0 !== U.ICustomCodeHelperFormatter && U.ICustomCodeHelperFormatter) ? E : Object,
                'function' == typeof (F = void 0 !== V.ICustomCodeHelperObfuscator && V.ICustomCodeHelperObfuscator) ? F : Object,
                'function' == typeof (G = void 0 !== Y.IRandomGenerator && Y.IRandomGenerator) ? G : Object,
                'function' == typeof (H = void 0 !== X.IOptions && X.IOptions) ? H : Object,
                'function' == typeof (J = void 0 !== W.ICryptUtils && W.ICryptUtils) ? J : Object
            ])
        ], a5);
        x.DomainLockCodeHelper = a5;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.DomainLockTemplate = function () {
            return '\n        const {domainLockFunctionName} = {callControllerFunctionName}(this, function () {\n            \n            {globalVariableTemplate}\n            \n            const func = function () {\n                return {\n                    key: \'item\',\n                    value: \'attribute\',\n                    getAttribute: function () {\n                        for (let i = 0; i < 1000; i--) {\n                            const isPositive = i > 0;\n                            \n                            switch (isPositive) {\n                                case true:\n                                    return this.item + \'_\' + this.value + \'_\' + i;\n                                default:\n                                    this.item + \'_\' + this.value;\n                            }\n                        }\n                    }()\n                };\n            };\n                        \n            const regExp = new RegExp("[{diff}]", "g");\n            const domains = "{domains}".replace(regExp, "").split(";");\n            let document;\n            let domain;\n            let location;\n            let hostname;\n\n            for (let d in that) {\n                if (d.length == 8 && d.charCodeAt(7) == 116 && d.charCodeAt(5) == 101 && d.charCodeAt(3) == 117 && d.charCodeAt(0) == 100) {\n                    document = d;\n                \n                    break;\n                }\n            }\n\n            for (let d1 in that[document]) {\n                if (d1.length == 6 && d1.charCodeAt(5) == 110 && d1.charCodeAt(0) == 100) {\n                    domain = d1;\n                    \n                    break;\n                }\n            }\n\n            if (!("~" > domain)) {\n                for (let d2 in that[document]) {\n                    if (d2.length == 8 && d2.charCodeAt(7) == 110 && d2.charCodeAt(0) == 108) {\n                        location = d2;\n                        \n                        break;\n                    }\n                }\n\n                for (let d3 in that[document][location]) {\n                    if (d3.length == 8 && d3.charCodeAt(7) == 101 && d3.charCodeAt(0) == 104) {\n                        hostname = d3;\n                        \n                        break;\n                    }\n                }\n            }\n            \n            if (!document || !that[document]) {\n                return;\n            }\n            \n            const documentDomain = that[document][domain];\n            const documentLocationHostName = !!that[document][location] && that[document][location][hostname];\n            const currentDomain = documentDomain || documentLocationHostName;\n          \n            if (!currentDomain) {\n                return;\n            }\n          \n            let ok = false;\n                        \n            for (let i = 0; i < domains.length; i++) {\n                const domain = domains[i];\n                const position = currentDomain.length - domain.length;\n                const lastIndex = currentDomain.indexOf(domain, position);\n                const endsWith = lastIndex !== -1 && lastIndex === position;\n                \n                if (endsWith) {\n                    if (currentDomain.length == domain.length || domain.indexOf(".") === 0) {\n                        ok = true;\n                    }\n                }\n            }\n               \n            if (!ok) {\n                data;\n            } else {\n                return;\n            }\n            \n            func();\n        });\n\n        {domainLockFunctionName}();\n    ';
        };
    },
    function (q, w, x) {
        'use strict';
        var B;
        var D;
        var E;
        var F;
        var G;
        var H;
        var J = this && this.__decorate || function (a3, a4, a5, a6) {
            var a7;
            var a8 = arguments.length;
            var a9 = a8 < 3 ? a4 : null === a6 ? a6 = Object.getOwnPropertyDescriptor(a4, a5) : a6;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a9 = Reflect.decorate(a3, a4, a5, a6);
            } else {
                for (var aa = a3.length - 1; aa >= 0; aa--)
                    if (a7 = a3[aa]) {
                        a9 = (a8 < 3 ? a7(a9) : a8 > 3 ? a7(a4, a5, a9) : a7(a4, a5)) || a9;
                    }
            }
            if (a8 > 3 && a9) {
                Object.defineProperty(a4, a5, a9);
            }
            return a9;
        };
        var K = this && this.__metadata || function (a3, a4) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a3, a4);
            }
        };
        var L = this && this.__param || function (a3, a4) {
            return function (a5, a6) {
                a4(a5, a6, a3);
            };
        };
        Object.defineProperty(w, '__esModule', M);
        const P = x(0);
        const Q = x(1);
        const R = x(5);
        const T = x(13);
        const U = x(9);
        const V = x(2);
        const W = x(3);
        const X = x(25);
        const Y = x(7);
        const Z = x(134);
        const a0 = x(15);
        const a1 = x(6);
        let a2 = class extends a0.AbstractCustomCodeHelper {
            constructor(a3, a4, a5, a6, a7) {
                super(a3, a4, a5, a6, a7);
            }
            initialize(a3, a4) {
                this.appendEvent = a3;
                this.callsControllerFunctionName = a4;
            }
            getNodeStructure(a3) {
                return a1.NodeUtils.convertCodeToStructure(a3);
            }
            getCodeHelperTemplate() {
                const a3 = { callControllerFunctionName: this.callsControllerFunctionName };
                const a4 = { callControllerFunctionName: this.callsControllerFunctionName };
                if (this.appendEvent === X.ObfuscationEvent.AfterObfuscation) {
                    return this.customCodeHelperObfuscator.obfuscateTemplate(this.customCodeHelperFormatter.formatTemplate(Z.SingleCallControllerTemplate(), a3));
                } else {
                    return this.customCodeHelperFormatter.formatTemplate(Z.SingleCallControllerTemplate(), a4);
                }
            }
        };
        J([
            Y.initializable(),
            K('design:type', String)
        ], a2.prototype, 'callsControllerFunctionName', void 0);
        J([
            Y.initializable(),
            K('design:type', 'function' == typeof (B = void 0 !== X.ObfuscationEvent && X.ObfuscationEvent) ? B : Object)
        ], a2.prototype, 'appendEvent', void 0);
        a2 = J([
            P.injectable(),
            L(0, P.inject(Q.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            L(1, P.inject(Q.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            L(2, P.inject(Q.ServiceIdentifiers.ICustomCodeHelperObfuscator)),
            L(3, P.inject(Q.ServiceIdentifiers.IRandomGenerator)),
            L(4, P.inject(Q.ServiceIdentifiers.IOptions)),
            K('design:paramtypes', [
                'function' == typeof (D = void 0 !== R.TIdentifierNamesGeneratorFactory && R.TIdentifierNamesGeneratorFactory) ? D : Object,
                'function' == typeof (E = void 0 !== U.ICustomCodeHelperFormatter && U.ICustomCodeHelperFormatter) ? E : Object,
                'function' == typeof (F = void 0 !== T.ICustomCodeHelperObfuscator && T.ICustomCodeHelperObfuscator) ? F : Object,
                'function' == typeof (G = void 0 !== W.IRandomGenerator && W.IRandomGenerator) ? G : Object,
                'function' == typeof (H = void 0 !== V.IOptions && V.IOptions) ? H : Object
            ])
        ], a2);
        w.CallsControllerFunctionCodeHelper = a2;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.SingleCallControllerTemplate = function () {
            return '\n        const {callControllerFunctionName} = (function(){\n            let firstCall = true;\n            \n            return function (context, fn){\n                const rfn = firstCall ? function(){\n                    if(fn){\n                        const res = fn.apply(context, arguments);\n                        fn = null;\n                        return res;\n                    }\n                } : function(){}\n                \n                firstCall = false;\n                \n                return rfn;\n            }\n        })();\n    ';
        };
    },
    function (q, w, x) {
        'use strict';
        var B;
        var D;
        var E;
        var F;
        var G;
        var H;
        var J = this && this.__decorate || function (a3, a4, a5, a6) {
            var a7;
            var a8 = arguments.length;
            var a9 = a8 < 3 ? a4 : null === a6 ? a6 = Object.getOwnPropertyDescriptor(a4, a5) : a6;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a9 = Reflect.decorate(a3, a4, a5, a6);
            } else {
                for (var aa = a3.length - 1; aa >= 0; aa--)
                    if (a7 = a3[aa]) {
                        a9 = (a8 < 3 ? a7(a9) : a8 > 3 ? a7(a4, a5, a9) : a7(a4, a5)) || a9;
                    }
            }
            if (a8 > 3 && a9) {
                Object.defineProperty(a4, a5, a9);
            }
            return a9;
        };
        var K = this && this.__metadata || function (a3, a4) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a3, a4);
            }
        };
        var L = this && this.__param || function (a3, a4) {
            return function (a8, a9) {
                a4(a8, a9, a3);
            };
        };
        Object.defineProperty(w, '__esModule', M);
        const P = x(0);
        const Q = x(1);
        const R = x(5);
        const T = x(9);
        const U = x(13);
        const V = x(32);
        const W = x(2);
        const X = x(3);
        const Y = x(7);
        const Z = x(136);
        const a0 = x(15);
        const a1 = x(6);
        let a2 = class extends a0.AbstractCustomCodeHelper {
            constructor(a3, a4, a5, a6, a7, a8) {
                super(a3, a4, a5, a6, a7);
                this.escapeSequenceEncoder = a8;
            }
            initialize(a3, a4) {
                this.callsControllerFunctionName = a3;
                this.selfDefendingFunctionName = a4;
            }
            getNodeStructure(a3) {
                return a1.NodeUtils.convertCodeToStructure(a3);
            }
            getCodeHelperTemplate() {
                const a5 = {
                    callControllerFunctionName: this.callsControllerFunctionName,
                    selfDefendingFunctionName: this.selfDefendingFunctionName
                };
                return this.customCodeHelperFormatter.formatTemplate(Z.SelfDefendingTemplate(this.escapeSequenceEncoder), a5);
            }
        };
        J([
            Y.initializable(),
            K('design:type', String)
        ], a2.prototype, 'callsControllerFunctionName', void 0);
        J([
            Y.initializable(),
            K('design:type', String)
        ], a2.prototype, 'selfDefendingFunctionName', void 0);
        a2 = J([
            P.injectable(),
            L(0, P.inject(Q.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            L(1, P.inject(Q.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            L(2, P.inject(Q.ServiceIdentifiers.ICustomCodeHelperObfuscator)),
            L(3, P.inject(Q.ServiceIdentifiers.IRandomGenerator)),
            L(4, P.inject(Q.ServiceIdentifiers.IOptions)),
            L(5, P.inject(Q.ServiceIdentifiers.IEscapeSequenceEncoder)),
            K('design:paramtypes', [
                'function' == typeof (B = void 0 !== R.TIdentifierNamesGeneratorFactory && R.TIdentifierNamesGeneratorFactory) ? B : Object,
                'function' == typeof (D = void 0 !== T.ICustomCodeHelperFormatter && T.ICustomCodeHelperFormatter) ? D : Object,
                'function' == typeof (E = void 0 !== U.ICustomCodeHelperObfuscator && U.ICustomCodeHelperObfuscator) ? E : Object,
                'function' == typeof (F = void 0 !== X.IRandomGenerator && X.IRandomGenerator) ? F : Object,
                'function' == typeof (G = void 0 !== W.IOptions && W.IOptions) ? G : Object,
                'function' == typeof (H = void 0 !== V.IEscapeSequenceEncoder && V.IEscapeSequenceEncoder) ? H : Object
            ])
        ], a2);
        w.SelfDefendingUnicodeCodeHelper = a2;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.SelfDefendingTemplate = function (j) {
            return '\n        const {selfDefendingFunctionName} = {callControllerFunctionName}(this, function () {\n            const test = function () {\n                const regExp = test\n                    .constructor(\'return /" + this + "/\')()\n                    .compile(\'^([^ ]+( +[^ ]+)+)+[^ ]}\');\n                \n                return !regExp.test({selfDefendingFunctionName});\n            };\n            \n            return test();\n        });\n        \n        {selfDefendingFunctionName}();\n    ';
        };
    },
    function (z, A, B) {
        'use strict';
        var H;
        var J;
        var K;
        var L;
        var M;
        var P;
        var Q = this && this.__decorate || function (ai, aj, ak, al) {
            var ao;
            var ap = arguments.length;
            var aq = ap < 3 ? aj : null === al ? al = Object.getOwnPropertyDescriptor(aj, ak) : al;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                aq = Reflect.decorate(ai, aj, ak, al);
            } else {
                for (var ar = ai.length - 1; ar >= 0; ar--)
                    if (ao = ai[ar]) {
                        aq = (ap < 3 ? ao(aq) : ap > 3 ? ao(aj, ak, aq) : ao(aj, ak)) || aq;
                    }
            }
            if (ap > 3 && aq) {
                Object.defineProperty(aj, ak, aq);
            }
            return aq;
        };
        var U = this && this.__metadata || function (ai, aj) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(ai, aj);
            }
        };
        var V = this && this.__param || function (ai, aj) {
            return function (ak, al) {
                aj(ak, al, ai);
            };
        };
        Object.defineProperty(A, '__esModule', W);
        const X = B(0);
        const Y = B(1);
        const Z = B(5);
        const a0 = B(9);
        const a1 = B(13);
        const a2 = B(32);
        const a3 = B(2);
        const a4 = B(3);
        const a5 = B(23);
        const a6 = B(28);
        const a7 = B(7);
        const a8 = B(138);
        const a9 = B(48);
        const aa = B(139);
        const ab = B(140);
        const ac = B(141);
        const ad = B(142);
        const ae = B(143);
        const af = B(15);
        const ag = B(6);
        let ah = class extends af.AbstractCustomCodeHelper {
            constructor(ai, aj, ak, al, am, an) {
                super(ai, aj, ak, al, am);
                this.escapeSequenceEncoder = an;
            }
            initialize(ai, aj) {
                this.stringArrayName = ai;
                this.stringArrayCallsWrapperName = aj;
            }
            getNodeStructure(ai) {
                return ag.NodeUtils.convertCodeToStructure(ai);
            }
            getCodeHelperTemplate() {
                const aj = this.getDecodeStringArrayTemplate();
                const ak = ['^' + this.stringArrayName + '$'];
                const al = {
                    decodeCodeHelperTemplate: aj,
                    stringArrayCallsWrapperName: this.stringArrayCallsWrapperName,
                    stringArrayName: this.stringArrayName
                };
                const am = { reservedNames: ak };
                return this.customCodeHelperObfuscator.obfuscateTemplate(this.customCodeHelperFormatter.formatTemplate(ad.StringArrayCallsWrapperTemplate(), al), am);
            }
            getDecodeStringArrayTemplate() {
                const ai = this.options.target !== a5.ObfuscationTarget.BrowserNoEval ? this.getGlobalVariableTemplate() : a9.GlobalVariableNoEvalTemplate();
                const aj = this.customCodeHelperFormatter.formatTemplate(a8.AtobTemplate(), { globalVariableTemplate: ai });
                let ak = '';
                let al = '';
                const am = {
                    stringArrayCallsWrapperName: this.stringArrayCallsWrapperName,
                    stringArrayName: this.stringArrayName
                };
                switch (this.options.selfDefending && (al = this.customCodeHelperFormatter.formatTemplate(ab.SelfDefendingTemplate(this.randomGenerator, this.escapeSequenceEncoder), am)), this.options.stringArrayEncoding) {
                case a6.StringArrayEncoding.Rc4:
                    const an = {
                        atobPolyfill: aj,
                        selfDefendingCode: al,
                        rc4Polyfill: aa.Rc4Template(),
                        stringArrayCallsWrapperName: this.stringArrayCallsWrapperName
                    };
                    ak = this.customCodeHelperFormatter.formatTemplate(ae.StringArrayRC4DecodeTemplate(this.randomGenerator), an);
                    break;
                case a6.StringArrayEncoding.Base64:
                    const ao = {
                        atobPolyfill: aj,
                        selfDefendingCode: al,
                        stringArrayCallsWrapperName: this.stringArrayCallsWrapperName
                    };
                    ak = this.customCodeHelperFormatter.formatTemplate(ac.StringArrayBase64DecodeTemplate(this.randomGenerator), ao);
                }
                return ak;
            }
        };
        Q([
            a7.initializable(),
            U('design:type', String)
        ], ah.prototype, 'stringArrayName', void 0);
        Q([
            a7.initializable(),
            U('design:type', String)
        ], ah.prototype, 'stringArrayCallsWrapperName', void 0);
        ah = Q([
            X.injectable(),
            V(0, X.inject(Y.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            V(1, X.inject(Y.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            V(2, X.inject(Y.ServiceIdentifiers.ICustomCodeHelperObfuscator)),
            V(3, X.inject(Y.ServiceIdentifiers.IRandomGenerator)),
            V(4, X.inject(Y.ServiceIdentifiers.IOptions)),
            V(5, X.inject(Y.ServiceIdentifiers.IEscapeSequenceEncoder)),
            U('design:paramtypes', [
                'function' == typeof (H = void 0 !== Z.TIdentifierNamesGeneratorFactory && Z.TIdentifierNamesGeneratorFactory) ? H : Object,
                'function' == typeof (J = void 0 !== a0.ICustomCodeHelperFormatter && a0.ICustomCodeHelperFormatter) ? J : Object,
                'function' == typeof (K = void 0 !== a1.ICustomCodeHelperObfuscator && a1.ICustomCodeHelperObfuscator) ? K : Object,
                'function' == typeof (L = void 0 !== a4.IRandomGenerator && a4.IRandomGenerator) ? L : Object,
                'function' == typeof (M = void 0 !== a3.IOptions && a3.IOptions) ? M : Object,
                'function' == typeof (P = void 0 !== a2.IEscapeSequenceEncoder && a2.IEscapeSequenceEncoder) ? P : Object
            ])
        ], ah);
        A.StringArrayCallsWrapperCodeHelper = ah;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.AtobTemplate = function () {
            return '\n        (function () {\n            {globalVariableTemplate}\n            \n            const chars = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\';\n\n            that.atob || (\n                that.atob = function(input) {\n                    const str = String(input).replace(/=+$/, \'\');\n                    let output = \'\';\n                    for (\n                        let bc = 0, bs, buffer, idx = 0;\n                        buffer = str.charAt(idx++);\n                        ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n                            bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n                    ) {\n                        buffer = chars.indexOf(buffer);\n                    }\n                    return output;\n                }\n            );\n        })();\n    ';
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.Rc4Template = function () {
            return '\n        const rc4 = function (str, key) {\n            let s = [], j = 0, x, res = \'\', newStr = \'\';\n           \n            str = atob(str);\n                \n            for (let k = 0, length = str.length; k < length; k++) {\n                newStr += \'%\' + (\'00\' + str.charCodeAt(k).toString(16)).slice(-2);\n            }\n        \n            str = decodeURIComponent(newStr);\n                    \t     \n            let i;\n                    \t        \n\t        for (i = 0; i < 256; i++) {\n                s[i] = i;\n            }\n \n            for (i = 0; i < 256; i++) {\n                j = (j + s[i] + key.charCodeAt(i % key.length)) % 256;\n                x = s[i];\n                s[i] = s[j];\n                s[j] = x;\n            }\n            \n            i = 0;\n            j = 0;\n            \n            for (let y = 0; y < str.length; y++) {\n                i = (i + 1) % 256;\n                j = (j + s[i]) % 256;\n                x = s[i];\n                s[i] = s[j];\n                s[j] = x;\n                res += String.fromCharCode(str.charCodeAt(y) ^ s[(s[i] + s[j]) % 256]);\n            }\n                      \n            return res;\n        }\n    ';
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.SelfDefendingTemplate = function (j, k) {
            const m = j.getRandomString(6);
            const p = j.getRandomString(6);
            const q = j.getRandomString(6);
            const u = j.getRandomString(6);
            const v = j.getRandomString(6);
            const w = j.getRandomString(6);
            const x = j.getRandomString(6);
            const y = j.getRandomString(6);
            const z = j.getRandomString(6);
            return '\n        const StatesClass = function (' + m + ') {\n            this.' + m + ' = ' + m + ';\n            this.' + p + ' = [1, 0, 0];\n            this.' + q + ' = function(){return \'newState\';};\n            this.' + u + ' = \'' + k.encode('\\w+ *\\(\\) *{\\w+ *', !0) + '\';\n            this.' + v + ' = \'' + k.encode('[\'|"].+[\'|"];? *}', !0) + '\';\n        };\n        \n        StatesClass.prototype.' + w + ' = function () {\n            const regExp = new RegExp(this.' + u + ' + this.' + v + ');\n            const expression = regExp.test(this.' + q + '.toString())\n                ? --this.' + p + '[1]\n                : --this.' + p + '[0];\n            \n            return this.' + x + '(expression);\n        };\n        \n        StatesClass.prototype.' + x + ' = function (' + z + ') {\n            if (!Boolean(~' + z + ')) {\n                return ' + z + ';\n            }\n            \n            return this.' + y + '(this.' + m + ');\n        };\n\n        StatesClass.prototype.' + y + ' = function (' + m + ') {\n            for (let i = 0, len = this.' + p + '.length; i < len; i++) {\n                this.' + p + '.push(Math.round(Math.random()));\n                len = this.' + p + '.length;\n            }\n            \n            return ' + m + '(this.' + p + '[0]);\n        };\n\n        new StatesClass({stringArrayCallsWrapperName}).' + w + '();\n    ';
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.StringArrayBase64DecodeTemplate = function (j) {
            const m = j.getRandomString(6);
            const n = j.getRandomString(6);
            const p = j.getRandomString(6);
            return '\n        if ({stringArrayCallsWrapperName}.' + m + ' === undefined) {\n            {atobPolyfill}\n            \n            {stringArrayCallsWrapperName}.' + n + ' = function (str) {\n                const string = atob(str);\n                let newStringChars = [];\n                \n                for (let i = 0, length = string.length; i < length; i++) {\n                    newStringChars += \'%\' + (\'00\' + string.charCodeAt(i).toString(16)).slice(-2);\n                }\n                \n                return decodeURIComponent(newStringChars);\n            };\n            \n            {stringArrayCallsWrapperName}.' + p + ' = {};\n            \n            {stringArrayCallsWrapperName}.' + m + ' = true;\n        }\n                  \n        const cachedValue = {stringArrayCallsWrapperName}.' + p + '[index];\n                        \n        if (cachedValue === undefined) {\n            {selfDefendingCode}\n            \n            value = {stringArrayCallsWrapperName}.' + n + '(value);\n            {stringArrayCallsWrapperName}.' + p + '[index] = value;\n        } else {\n            value = cachedValue;\n        }\n    ';
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.StringArrayCallsWrapperTemplate = function () {
            return '\n        const {stringArrayCallsWrapperName} = function (index, key) {\n            index = index - 0;\n            \n            let value = {stringArrayName}[index];\n            \n            {decodeCodeHelperTemplate}\n        \n            return value;\n        };\n    ';
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.StringArrayRC4DecodeTemplate = function (j) {
            const l = j.getRandomString(6);
            const m = j.getRandomString(6);
            const p = j.getRandomString(6);
            const q = j.getRandomString(6);
            return '\n        if ({stringArrayCallsWrapperName}.' + l + ' === undefined) {\n            {atobPolyfill}\n            \n            {rc4Polyfill}\n            {stringArrayCallsWrapperName}.' + m + ' = rc4;\n            \n            {stringArrayCallsWrapperName}.' + p + ' = {};\n            \n            {stringArrayCallsWrapperName}.' + l + ' = true;\n        }\n  \n        const cachedValue = {stringArrayCallsWrapperName}.' + p + '[index];\n\n        if (cachedValue === undefined) {\n            if ({stringArrayCallsWrapperName}.' + q + ' === undefined) {\n                {selfDefendingCode}\n                \n                {stringArrayCallsWrapperName}.' + q + ' = true;\n            }\n            \n            value = {stringArrayCallsWrapperName}.' + m + '(value, key);\n            {stringArrayCallsWrapperName}.' + p + '[index] = value;\n        } else {\n            value = cachedValue;\n        }\n    ';
        };
    },
    function (q, w, x) {
        'use strict';
        var B;
        var D;
        var E;
        var F;
        var G;
        var H;
        var J = this && this.__decorate || function (a3, a4, a5, a6) {
            var a7;
            var a8 = arguments.length;
            var a9 = a8 < 3 ? a4 : null === a6 ? a6 = Object.getOwnPropertyDescriptor(a4, a5) : a6;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a9 = Reflect.decorate(a3, a4, a5, a6);
            } else {
                for (var aa = a3.length - 1; aa >= 0; aa--)
                    if (a7 = a3[aa]) {
                        a9 = (a8 < 3 ? a7(a9) : a8 > 3 ? a7(a4, a5, a9) : a7(a4, a5)) || a9;
                    }
            }
            if (a8 > 3 && a9) {
                Object.defineProperty(a4, a5, a9);
            }
            return a9;
        };
        var K = this && this.__metadata || function (a3, a4) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a3, a4);
            }
        };
        var L = this && this.__param || function (a3, a4) {
            return function (a8, a9) {
                a4(a8, a9, a3);
            };
        };
        Object.defineProperty(w, '__esModule', M);
        const P = x(0);
        const Q = x(1);
        const R = x(5);
        const T = x(9);
        const U = x(13);
        const V = x(2);
        const W = x(3);
        const X = x(37);
        const Y = x(7);
        const Z = x(145);
        const a0 = x(15);
        const a1 = x(6);
        let a2 = class extends a0.AbstractCustomCodeHelper {
            constructor(a3, a4, a5, a6, a7) {
                super(a3, a4, a5, a6, a7);
            }
            initialize(a3, a4) {
                this.stringArrayStorage = a3;
                this.stringArrayName = a4;
            }
            getNodeStructure(a3) {
                return a1.NodeUtils.convertCodeToStructure(a3);
            }
            getCodeHelperTemplate() {
                const a4 = { stringArrayName: this.stringArrayName };
                return this.customCodeHelperFormatter.formatTemplate(Z.StringArrayTemplate(), a4);
            }
        };
        J([
            Y.initializable(),
            K('design:type', 'function' == typeof (B = void 0 !== X.IStringArrayStorage && X.IStringArrayStorage) ? B : Object)
        ], a2.prototype, 'stringArrayStorage', void 0);
        J([
            Y.initializable(),
            K('design:type', String)
        ], a2.prototype, 'stringArrayName', void 0);
        a2 = J([
            P.injectable(),
            L(0, P.inject(Q.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            L(1, P.inject(Q.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            L(2, P.inject(Q.ServiceIdentifiers.ICustomCodeHelperObfuscator)),
            L(3, P.inject(Q.ServiceIdentifiers.IRandomGenerator)),
            L(4, P.inject(Q.ServiceIdentifiers.IOptions)),
            K('design:paramtypes', [
                'function' == typeof (D = void 0 !== R.TIdentifierNamesGeneratorFactory && R.TIdentifierNamesGeneratorFactory) ? D : Object,
                'function' == typeof (E = void 0 !== T.ICustomCodeHelperFormatter && T.ICustomCodeHelperFormatter) ? E : Object,
                'function' == typeof (F = void 0 !== U.ICustomCodeHelperObfuscator && U.ICustomCodeHelperObfuscator) ? F : Object,
                'function' == typeof (G = void 0 !== W.IRandomGenerator && W.IRandomGenerator) ? G : Object,
                'function' == typeof (H = void 0 !== V.IOptions && V.IOptions) ? H : Object
            ])
        ], a2);
        w.StringArrayCodeHelper = a2;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.StringArrayTemplate = function () {
            return '\n        const {stringArrayName} = [{stringArray}];\n    ';
        };
    },
    function (w, x, z) {
        'use strict';
        var D;
        var E;
        var F;
        var G;
        var H;
        var J;
        var K = this && this.__decorate || function (a6, a7, a8, a9) {
            var aa;
            var ab = arguments.length;
            var ac = ab < 3 ? a7 : null === a9 ? a9 = Object.getOwnPropertyDescriptor(a7, a8) : a9;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                ac = Reflect.decorate(a6, a7, a8, a9);
            } else {
                for (var ad = a6.length - 1; ad >= 0; ad--)
                    if (aa = a6[ad]) {
                        ac = (ab < 3 ? aa(ac) : ab > 3 ? aa(a7, a8, ac) : aa(a7, a8)) || ac;
                    }
            }
            if (ab > 3 && ac) {
                Object.defineProperty(a7, a8, ac);
            }
            return ac;
        };
        var L = this && this.__metadata || function (a6, a7) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a6, a7);
            }
        };
        var M = this && this.__param || function (a6, a7) {
            return function (a8, a9) {
                a7(a8, a9, a6);
            };
        };
        Object.defineProperty(x, '__esModule', P);
        const Q = z(0);
        const R = z(1);
        const T = z(5);
        const U = z(9);
        const V = z(13);
        const W = z(32);
        const X = z(2);
        const Y = z(3);
        const Z = z(7);
        const a0 = z(147);
        const a1 = z(148);
        const a2 = z(15);
        const a3 = z(6);
        const a4 = z(38);
        let a5 = class extends a2.AbstractCustomCodeHelper {
            constructor(a6, a7, a8, a9, aa, ab) {
                super(a6, a7, a8, a9, aa);
                this.escapeSequenceEncoder = ab;
            }
            initialize(a6, a7) {
                this.stringArrayName = a6;
                this.stringArrayRotationAmount = a7;
            }
            getNodeStructure(a6) {
                return a3.NodeUtils.convertCodeToStructure(a6);
            }
            getCodeHelperTemplate() {
                const a7 = this.identifierNamesGenerator.generateForGlobalScope();
                const a8 = this.identifierNamesGenerator.generateForGlobalScope();
                const a9 = ['^' + this.stringArrayName + '$'];
                let aa = '';
                const ab = {
                    timesName: a7,
                    whileFunctionName: a8
                };
                const ac = { reservedNames: a9 };
                aa = this.options.selfDefending ? this.customCodeHelperFormatter.formatTemplate(a0.SelfDefendingTemplate(this.escapeSequenceEncoder), ab) : a8 + '(++' + a7 + ')';
                return this.customCodeHelperObfuscator.obfuscateTemplate(this.customCodeHelperFormatter.formatTemplate(a1.StringArrayRotateFunctionTemplate(), {
                    code: aa,
                    timesName: a7,
                    whileFunctionName: a8,
                    stringArrayName: this.stringArrayName,
                    stringArrayRotationAmount: a4.NumberUtils.toHex(this.stringArrayRotationAmount)
                }), ac);
            }
        };
        K([
            Z.initializable(),
            L('design:type', String)
        ], a5.prototype, 'stringArrayName', void 0);
        K([
            Z.initializable(),
            L('design:type', Number)
        ], a5.prototype, 'stringArrayRotationAmount', void 0);
        a5 = K([
            Q.injectable(),
            M(0, Q.inject(R.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            M(1, Q.inject(R.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            M(2, Q.inject(R.ServiceIdentifiers.ICustomCodeHelperObfuscator)),
            M(3, Q.inject(R.ServiceIdentifiers.IRandomGenerator)),
            M(4, Q.inject(R.ServiceIdentifiers.IOptions)),
            M(5, Q.inject(R.ServiceIdentifiers.IEscapeSequenceEncoder)),
            L('design:paramtypes', [
                'function' == typeof (D = void 0 !== T.TIdentifierNamesGeneratorFactory && T.TIdentifierNamesGeneratorFactory) ? D : Object,
                'function' == typeof (E = void 0 !== U.ICustomCodeHelperFormatter && U.ICustomCodeHelperFormatter) ? E : Object,
                'function' == typeof (F = void 0 !== V.ICustomCodeHelperObfuscator && V.ICustomCodeHelperObfuscator) ? F : Object,
                'function' == typeof (G = void 0 !== Y.IRandomGenerator && Y.IRandomGenerator) ? G : Object,
                'function' == typeof (H = void 0 !== X.IOptions && X.IOptions) ? H : Object,
                'function' == typeof (J = void 0 !== W.IEscapeSequenceEncoder && W.IEscapeSequenceEncoder) ? J : Object
            ])
        ], a5);
        x.StringArrayRotateFunctionCodeHelper = a5;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.SelfDefendingTemplate = function (j) {
            return '\n        const selfDefendingFunc = function () {\n            const object = {\n                data: {\n                    key: \'cookie\',\n                    value: \'timeout\'\n                },\n                setCookie: function (options, name, value, document) {\n                    document = document || {};\n                    \n                    let updatedCookie = name + "=" + value;\n                    let i = 0;\n                                                            \n                    for (let i = 0, len = options.length; i < len; i++) {\n                        const propName = options[i];\n                                     \n                        updatedCookie += "; " + propName;\n                        \n                        const propValue = options[propName];\n                        \n                        options.push(propValue);\n                        len = options.length;\n                                                                        \n                        if (propValue !== true) {\n                            updatedCookie += "=" + propValue;\n                        }\n                    }\n\n                    document[\'cookie\'] = updatedCookie;\n                },\n                removeCookie: function(){return \'dev\';},\n                getCookie: function (document, name) {\n                    document = document || function (value) { return value };\n                    const matches = document(new RegExp(\n                        "(?:^|; )" + name.replace(/([.$?*|{}()[]\\/+^])/g, \'\\$1\') + "=([^;]*)"\n                    ));\n                    \n                    const func = function (param1, param2) {\n                        param1(++param2);\n                    };\n                    \n                    func({whileFunctionName}, {timesName});\n                                        \n                    return matches ? decodeURIComponent(matches[1]) : undefined;\n                }\n            };\n            \n            const test1 = function () {\n                const regExp = new RegExp(\'' + j.encode('\\w+ *\\(\\) *{\\w+ *[\'|"].+[\'|"];? *}', !0) + '\');\n                \n                return regExp.test(object.removeCookie.toString());\n            };\n            \n            object[\'updateCookie\'] = test1;\n            \n            let cookie = \'\';\n            const result = object[\'updateCookie\']();\n                                    \n            if (!result) {\n                object[\'setCookie\']([\'*\'], \'counter\', 1);\n            } else if (result) {\n                cookie = object[\'getCookie\'](null, \'counter\');\n            } else {\n                object[\'removeCookie\']();\n            }\n        };\n        \n        selfDefendingFunc();\n    ';
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.StringArrayRotateFunctionTemplate = function () {
            return '\n        (function (array, {timesName}) {\n            const {whileFunctionName} = function (times) {\n                while (--times) {\n                    array[\'push\'](array[\'shift\']());\n                }\n            };\n            \n            {code}\n        })({stringArrayName}, 0x{stringArrayRotationAmount});\n    ';
        };
    },
    function (q, v, w) {
        'use strict';
        Object.defineProperty(v, '__esModule', A);
        const B = w(16);
        const C = w(0);
        const D = w(1);
        const E = w(20);
        const F = w(60);
        const G = w(62);
        const H = w(150);
        const I = w(151);
        const J = w(152);
        const K = w(153);
        const L = w(154);
        const M = w(155);
        const O = w(156);
        const P = w(158);
        const Q = w(159);
        const R = w(160);
        const S = w(161);
        v.customNodesModule = new C.ContainerModule(T => {
            T(D.ServiceIdentifiers.Newable__ICustomNode).toConstructor(I.BinaryExpressionFunctionNode).whenTargetNamed(E.ControlFlowCustomNode.BinaryExpressionFunctionNode);
            T(D.ServiceIdentifiers.Newable__ICustomNode).toConstructor(J.BlockStatementControlFlowFlatteningNode).whenTargetNamed(E.ControlFlowCustomNode.BlockStatementControlFlowFlatteningNode);
            T(D.ServiceIdentifiers.Newable__ICustomNode).toConstructor(L.CallExpressionControlFlowStorageCallNode).whenTargetNamed(E.ControlFlowCustomNode.CallExpressionControlFlowStorageCallNode);
            T(D.ServiceIdentifiers.Newable__ICustomNode).toConstructor(M.CallExpressionFunctionNode).whenTargetNamed(E.ControlFlowCustomNode.CallExpressionFunctionNode);
            T(D.ServiceIdentifiers.Newable__ICustomNode).toConstructor(O.ControlFlowStorageNode).whenTargetNamed(E.ControlFlowCustomNode.ControlFlowStorageNode);
            T(D.ServiceIdentifiers.Newable__ICustomNode).toConstructor(P.ExpressionWithOperatorControlFlowStorageCallNode).whenTargetNamed(E.ControlFlowCustomNode.ExpressionWithOperatorControlFlowStorageCallNode);
            T(D.ServiceIdentifiers.Newable__ICustomNode).toConstructor(Q.LogicalExpressionFunctionNode).whenTargetNamed(E.ControlFlowCustomNode.LogicalExpressionFunctionNode);
            T(D.ServiceIdentifiers.Newable__ICustomNode).toConstructor(S.StringLiteralNode).whenTargetNamed(E.ControlFlowCustomNode.StringLiteralNode);
            T(D.ServiceIdentifiers.Newable__ICustomNode).toConstructor(R.StringLiteralControlFlowStorageCallNode).whenTargetNamed(E.ControlFlowCustomNode.StringLiteralControlFlowStorageCallNode);
            T(D.ServiceIdentifiers.Newable__ICustomNode).toConstructor(K.BlockStatementDeadCodeInjectionNode).whenTargetNamed(F.DeadCodeInjectionCustomNode.BlockStatementDeadCodeInjectionNode);
            T(D.ServiceIdentifiers.Newable__ICustomNode).toConstructor(H.ObjectExpressionVariableDeclarationHostNode).whenTargetNamed(G.ObjectExpressionKeysTransformerCustomNode.ObjectExpressionVariableDeclarationHostNode);
            T(D.ServiceIdentifiers.Factory__IControlFlowCustomNode).toFactory(B.InversifyContainerFacade.getConstructorFactory(D.ServiceIdentifiers.Newable__ICustomNode, D.ServiceIdentifiers.Factory__IIdentifierNamesGenerator, D.ServiceIdentifiers.ICustomCodeHelperFormatter, D.ServiceIdentifiers.IRandomGenerator, D.ServiceIdentifiers.IOptions, D.ServiceIdentifiers.IPrevailingKindOfVariablesAnalyzer));
            T(D.ServiceIdentifiers.Factory__IDeadCodeInjectionCustomNode).toFactory(B.InversifyContainerFacade.getConstructorFactory(D.ServiceIdentifiers.Newable__ICustomNode, D.ServiceIdentifiers.Factory__IIdentifierNamesGenerator, D.ServiceIdentifiers.ICustomCodeHelperFormatter, D.ServiceIdentifiers.IRandomGenerator, D.ServiceIdentifiers.IOptions));
            T(D.ServiceIdentifiers.Factory__IObjectExpressionKeysTransformerCustomNode).toFactory(B.InversifyContainerFacade.getConstructorFactory(D.ServiceIdentifiers.Newable__ICustomNode, D.ServiceIdentifiers.Factory__IIdentifierNamesGenerator, D.ServiceIdentifiers.ICustomCodeHelperFormatter, D.ServiceIdentifiers.IRandomGenerator, D.ServiceIdentifiers.IOptions, D.ServiceIdentifiers.IPrevailingKindOfVariablesAnalyzer));
        });
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (T, U, V, W) {
            var Z;
            var a0 = arguments.length;
            var a1 = a0 < 3 ? U : null === W ? W = Object.getOwnPropertyDescriptor(U, V) : W;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a1 = Reflect.decorate(T, U, V, W);
            } else {
                for (var a2 = T.length - 1; a2 >= 0; a2--)
                    if (Z = T[a2]) {
                        a1 = (a0 < 3 ? Z(a1) : a0 > 3 ? Z(U, V, a1) : Z(U, V)) || a1;
                    }
            }
            if (a0 > 3 && a1) {
                Object.defineProperty(U, V, a1);
            }
            return a1;
        };
        var F = this && this.__metadata || function (T, U) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(T, U);
            }
        };
        var G = this && this.__param || function (T, U) {
            return function (X, Y) {
                U(X, Y, T);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const I = w(0);
        const J = w(1);
        const K = w(5);
        const L = w(9);
        const M = w(2);
        const O = w(3);
        const P = w(14);
        const Q = w(8);
        const R = w(4);
        let S = class extends P.AbstractCustomNode {
            constructor(T, U, V, W) {
                super(T, U, V, W);
            }
            initialize(T, U) {
                this.lexicalScopeNode = T;
                this.properties = U;
            }
            getNodeStructure() {
                const V = R.NodeGuards.isProgramNode(this.lexicalScopeNode) ? this.identifierNamesGenerator.generateForGlobalScope() : this.identifierNamesGenerator.generateForLexicalScope(this.lexicalScopeNode);
                return [Q.NodeFactory.variableDeclarationNode([Q.NodeFactory.variableDeclaratorNode(Q.NodeFactory.identifierNode(V), Q.NodeFactory.objectExpressionNode(this.properties))], 'const')];
            }
        };
        S = E([
            I.injectable(),
            G(0, I.inject(J.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            G(1, I.inject(J.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            G(2, I.inject(J.ServiceIdentifiers.IRandomGenerator)),
            G(3, I.inject(J.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (A = void 0 !== K.TIdentifierNamesGeneratorFactory && K.TIdentifierNamesGeneratorFactory) ? A : Object,
                'function' == typeof (B = void 0 !== L.ICustomCodeHelperFormatter && L.ICustomCodeHelperFormatter) ? B : Object,
                'function' == typeof (C = void 0 !== O.IRandomGenerator && O.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== M.IOptions && M.IOptions) ? D : Object
            ])
        ], S);
        v.ObjectExpressionVariableDeclarationHostNode = S;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (T, U, V, W) {
            var X;
            var Y = arguments.length;
            var Z = Y < 3 ? U : null === W ? W = Object.getOwnPropertyDescriptor(U, V) : W;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                Z = Reflect.decorate(T, U, V, W);
            } else {
                for (var a0 = T.length - 1; a0 >= 0; a0--)
                    if (X = T[a0]) {
                        Z = (Y < 3 ? X(Z) : Y > 3 ? X(U, V, Z) : X(U, V)) || Z;
                    }
            }
            if (Y > 3 && Z) {
                Object.defineProperty(U, V, Z);
            }
            return Z;
        };
        var F = this && this.__metadata || function (T, U) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(T, U);
            }
        };
        var G = this && this.__param || function (T, U) {
            return function (X, Y) {
                U(X, Y, T);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const I = w(0);
        const J = w(1);
        const K = w(5);
        const L = w(9);
        const M = w(2);
        const O = w(3);
        const P = w(14);
        const Q = w(8);
        const R = w(6);
        let S = class extends P.AbstractCustomNode {
            constructor(T, U, V, W) {
                super(T, U, V, W);
            }
            initialize(T) {
                this.operator = T;
            }
            getNodeStructure() {
                const W = Q.NodeFactory.expressionStatementNode(Q.NodeFactory.functionExpressionNode([
                    Q.NodeFactory.identifierNode('x'),
                    Q.NodeFactory.identifierNode('y')
                ], Q.NodeFactory.blockStatementNode([Q.NodeFactory.returnStatementNode(Q.NodeFactory.binaryExpressionNode(this.operator, Q.NodeFactory.identifierNode('x'), Q.NodeFactory.identifierNode('y')))])));
                R.NodeUtils.parentizeAst(W);
                return [W];
            }
        };
        S = E([
            I.injectable(),
            G(0, I.inject(J.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            G(1, I.inject(J.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            G(2, I.inject(J.ServiceIdentifiers.IRandomGenerator)),
            G(3, I.inject(J.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (A = void 0 !== K.TIdentifierNamesGeneratorFactory && K.TIdentifierNamesGeneratorFactory) ? A : Object,
                'function' == typeof (B = void 0 !== L.ICustomCodeHelperFormatter && L.ICustomCodeHelperFormatter) ? B : Object,
                'function' == typeof (C = void 0 !== O.IRandomGenerator && O.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== M.IOptions && M.IOptions) ? D : Object
            ])
        ], S);
        v.BinaryExpressionFunctionNode = S;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E;
        var F = this && this.__decorate || function (X, Y, Z, a0) {
            var a1;
            var a2 = arguments.length;
            var a3 = a2 < 3 ? Y : null === a0 ? a0 = Object.getOwnPropertyDescriptor(Y, Z) : a0;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a3 = Reflect.decorate(X, Y, Z, a0);
            } else {
                for (var a4 = X.length - 1; a4 >= 0; a4--)
                    if (a1 = X[a4]) {
                        a3 = (a2 < 3 ? a1(a3) : a2 > 3 ? a1(Y, Z, a3) : a1(Y, Z)) || a3;
                    }
            }
            if (a2 > 3 && a3) {
                Object.defineProperty(Y, Z, a3);
            }
            return a3;
        };
        var G = this && this.__metadata || function (X, Y) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(X, Y);
            }
        };
        var H = this && this.__param || function (X, Y) {
            return function (a0, a1) {
                Y(a0, a1, X);
            };
        };
        Object.defineProperty(w, '__esModule', J);
        const K = x(0);
        const L = x(1);
        const M = x(5);
        const O = x(9);
        const P = x(2);
        const Q = x(3);
        const R = x(7);
        const S = x(14);
        const T = x(8);
        const U = x(4);
        const V = x(6);
        let W = class extends S.AbstractCustomNode {
            constructor(X, Y, Z, a0) {
                super(X, Y, Z, a0);
            }
            initialize(X, Y, Z) {
                this.blockStatementBody = X;
                this.shuffledKeys = Y;
                this.originalKeysIndexesInShuffledArray = Z;
            }
            getNodeStructure() {
                const a0 = this.randomGenerator.getRandomString(6);
                const a1 = this.randomGenerator.getRandomString(6);
                const a2 = T.NodeFactory.blockStatementNode([
                    T.NodeFactory.variableDeclarationNode([T.NodeFactory.variableDeclaratorNode(T.NodeFactory.identifierNode(a0), T.NodeFactory.callExpressionNode(T.NodeFactory.memberExpressionNode(T.NodeFactory.literalNode(this.originalKeysIndexesInShuffledArray.join('|')), T.NodeFactory.identifierNode('split')), [T.NodeFactory.literalNode('|')]))], 'const'),
                    T.NodeFactory.variableDeclarationNode([T.NodeFactory.variableDeclaratorNode(T.NodeFactory.identifierNode(a1), T.NodeFactory.literalNode(0))], 'let'),
                    T.NodeFactory.whileStatementNode(T.NodeFactory.literalNode(!0), T.NodeFactory.blockStatementNode([
                        T.NodeFactory.switchStatementNode(T.NodeFactory.memberExpressionNode(T.NodeFactory.identifierNode(a0), T.NodeFactory.updateExpressionNode('++', T.NodeFactory.identifierNode(a1)), !0), this.shuffledKeys.map((a3, a4) => {
                            const a6 = this.blockStatementBody[a3];
                            const a7 = [a6];
                            U.NodeGuards.isReturnStatementNode(a6) || a7.push(T.NodeFactory.continueStatement());
                            return T.NodeFactory.switchCaseNode(T.NodeFactory.literalNode(String(a4)), a7);
                        })),
                        T.NodeFactory.breakStatement()
                    ]))
                ]);
                V.NodeUtils.parentizeAst(a2);
                return [a2];
            }
        };
        F([
            R.initializable(),
            G('design:type', Array)
        ], W.prototype, 'blockStatementBody', void 0);
        F([
            R.initializable(),
            G('design:type', Array)
        ], W.prototype, 'originalKeysIndexesInShuffledArray', void 0);
        F([
            R.initializable(),
            G('design:type', Array)
        ], W.prototype, 'shuffledKeys', void 0);
        W = F([
            K.injectable(),
            H(0, K.inject(L.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            H(1, K.inject(L.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            H(2, K.inject(L.ServiceIdentifiers.IRandomGenerator)),
            H(3, K.inject(L.ServiceIdentifiers.IOptions)),
            G('design:paramtypes', [
                'function' == typeof (B = void 0 !== M.TIdentifierNamesGeneratorFactory && M.TIdentifierNamesGeneratorFactory) ? B : Object,
                'function' == typeof (C = void 0 !== O.ICustomCodeHelperFormatter && O.ICustomCodeHelperFormatter) ? C : Object,
                'function' == typeof (D = void 0 !== Q.IRandomGenerator && Q.IRandomGenerator) ? D : Object,
                'function' == typeof (E = void 0 !== P.IOptions && P.IOptions) ? E : Object
            ])
        ], W);
        w.BlockStatementControlFlowFlatteningNode = W;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (T, U, V, W) {
            var X;
            var Y = arguments.length;
            var Z = Y < 3 ? U : null === W ? W = Object.getOwnPropertyDescriptor(U, V) : W;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                Z = Reflect.decorate(T, U, V, W);
            } else {
                for (var a0 = T.length - 1; a0 >= 0; a0--)
                    if (X = T[a0]) {
                        Z = (Y < 3 ? X(Z) : Y > 3 ? X(U, V, Z) : X(U, V)) || Z;
                    }
            }
            if (Y > 3 && Z) {
                Object.defineProperty(U, V, Z);
            }
            return Z;
        };
        var F = this && this.__metadata || function (T, U) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(T, U);
            }
        };
        var G = this && this.__param || function (T, U) {
            return function (X, Y) {
                U(X, Y, T);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const I = w(0);
        const J = w(1);
        const K = w(5);
        const L = w(9);
        const M = w(2);
        const O = w(3);
        const P = w(14);
        const Q = w(8);
        const R = w(6);
        let S = class extends P.AbstractCustomNode {
            constructor(T, U, V, W) {
                super(T, U, V, W);
            }
            initialize(T, U) {
                this.blockStatementNode = T;
                this.deadCodeInjectionRootAstHostNode = U;
            }
            getNodeStructure() {
                const U = this.randomGenerator.getMathRandom() > 0.5;
                const V = this.randomGenerator.getMathRandom() > 0.5;
                const W = U ? '===' : '!==';
                const X = this.randomGenerator.getRandomString(5);
                const Y = V ? X : this.randomGenerator.getRandomString(5);
                const [Z, a0] = U === V ? [
                    this.blockStatementNode,
                    this.deadCodeInjectionRootAstHostNode
                ] : [
                    this.deadCodeInjectionRootAstHostNode,
                    this.blockStatementNode
                ];
                const a1 = Q.NodeFactory.blockStatementNode([Q.NodeFactory.ifStatementNode(Q.NodeFactory.binaryExpressionNode(W, Q.NodeFactory.literalNode(X), Q.NodeFactory.literalNode(Y)), Z, a0)]);
                R.NodeUtils.parentizeAst(a1);
                return [a1];
            }
        };
        S = E([
            I.injectable(),
            G(0, I.inject(J.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            G(1, I.inject(J.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            G(2, I.inject(J.ServiceIdentifiers.IRandomGenerator)),
            G(3, I.inject(J.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (A = void 0 !== K.TIdentifierNamesGeneratorFactory && K.TIdentifierNamesGeneratorFactory) ? A : Object,
                'function' == typeof (B = void 0 !== L.ICustomCodeHelperFormatter && L.ICustomCodeHelperFormatter) ? B : Object,
                'function' == typeof (C = void 0 !== O.IRandomGenerator && O.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== M.IOptions && M.IOptions) ? D : Object
            ])
        ], S);
        v.BlockStatementDeadCodeInjectionNode = S;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E;
        var F;
        var G = this && this.__decorate || function (X, Y, Z, a0) {
            var a1;
            var a2 = arguments.length;
            var a3 = a2 < 3 ? Y : null === a0 ? a0 = Object.getOwnPropertyDescriptor(Y, Z) : a0;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a3 = Reflect.decorate(X, Y, Z, a0);
            } else {
                for (var a4 = X.length - 1; a4 >= 0; a4--)
                    if (a1 = X[a4]) {
                        a3 = (a2 < 3 ? a1(a3) : a2 > 3 ? a1(Y, Z, a3) : a1(Y, Z)) || a3;
                    }
            }
            if (a2 > 3 && a3) {
                Object.defineProperty(Y, Z, a3);
            }
            return a3;
        };
        var H = this && this.__metadata || function (X, Y) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(X, Y);
            }
        };
        var J = this && this.__param || function (X, Y) {
            return function (a1, a2) {
                Y(a1, a2, X);
            };
        };
        Object.defineProperty(w, '__esModule', K);
        const L = x(0);
        const M = x(1);
        const O = x(5);
        const P = x(9);
        const Q = x(2);
        const R = x(3);
        const S = x(7);
        const T = x(14);
        const U = x(8);
        const V = x(6);
        let W = class extends T.AbstractCustomNode {
            constructor(X, Y, Z, a0) {
                super(X, Y, Z, a0);
            }
            initialize(X, Y, Z, a0) {
                this.controlFlowStorageName = X;
                this.controlFlowStorageKey = Y;
                this.callee = Z;
                this.expressionArguments = a0;
            }
            getNodeStructure() {
                const a0 = U.NodeFactory.expressionStatementNode(U.NodeFactory.callExpressionNode(U.NodeFactory.memberExpressionNode(U.NodeFactory.identifierNode(this.controlFlowStorageName), U.NodeFactory.identifierNode(this.controlFlowStorageKey)), [
                    this.callee,
                    ...this.expressionArguments
                ]));
                V.NodeUtils.parentizeAst(a0);
                return [a0];
            }
        };
        G([
            S.initializable(),
            H('design:type', 'function' == typeof (B = 'undefined' != typeof ESTree && ESTree.Expression) ? B : Object)
        ], W.prototype, 'callee', void 0);
        G([
            S.initializable(),
            H('design:type', String)
        ], W.prototype, 'controlFlowStorageKey', void 0);
        G([
            S.initializable(),
            H('design:type', String)
        ], W.prototype, 'controlFlowStorageName', void 0);
        G([
            S.initializable(),
            H('design:type', Array)
        ], W.prototype, 'expressionArguments', void 0);
        W = G([
            L.injectable(),
            J(0, L.inject(M.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            J(1, L.inject(M.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            J(2, L.inject(M.ServiceIdentifiers.IRandomGenerator)),
            J(3, L.inject(M.ServiceIdentifiers.IOptions)),
            H('design:paramtypes', [
                'function' == typeof (C = void 0 !== O.TIdentifierNamesGeneratorFactory && O.TIdentifierNamesGeneratorFactory) ? C : Object,
                'function' == typeof (D = void 0 !== P.ICustomCodeHelperFormatter && P.ICustomCodeHelperFormatter) ? D : Object,
                'function' == typeof (E = void 0 !== R.IRandomGenerator && R.IRandomGenerator) ? E : Object,
                'function' == typeof (F = void 0 !== Q.IOptions && Q.IOptions) ? F : Object
            ])
        ], W);
        w.CallExpressionControlFlowStorageCallNode = W;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (V, W, X, Y) {
            var Z;
            var a0 = arguments.length;
            var a1 = a0 < 3 ? W : null === Y ? Y = Object.getOwnPropertyDescriptor(W, X) : Y;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a1 = Reflect.decorate(V, W, X, Y);
            } else {
                for (var a2 = V.length - 1; a2 >= 0; a2--)
                    if (Z = V[a2]) {
                        a1 = (a0 < 3 ? Z(a1) : a0 > 3 ? Z(W, X, a1) : Z(W, X)) || a1;
                    }
            }
            if (a0 > 3 && a1) {
                Object.defineProperty(W, X, a1);
            }
            return a1;
        };
        var F = this && this.__metadata || function (V, W) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(V, W);
            }
        };
        var G = this && this.__param || function (V, W) {
            return function (Z, a0) {
                W(Z, a0, V);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const J = w(0);
        const K = w(1);
        const L = w(5);
        const M = w(9);
        const O = w(2);
        const P = w(3);
        const Q = w(7);
        const R = w(14);
        const S = w(8);
        const T = w(6);
        let U = class extends R.AbstractCustomNode {
            constructor(V, W, X, Y) {
                super(V, W, X, Y);
            }
            initialize(V) {
                this.expressionArguments = V;
            }
            getNodeStructure() {
                const V = S.NodeFactory.identifierNode('callee');
                const W = [];
                const X = this.expressionArguments.length;
                for (let Z = 0; Z < X; Z++)
                    W.push(S.NodeFactory.identifierNode('param' + (Z + 1)));
                const Y = S.NodeFactory.expressionStatementNode(S.NodeFactory.functionExpressionNode([
                    V,
                    ...W
                ], S.NodeFactory.blockStatementNode([S.NodeFactory.returnStatementNode(S.NodeFactory.callExpressionNode(V, W))])));
                T.NodeUtils.parentizeAst(Y);
                return [Y];
            }
        };
        E([
            Q.initializable(),
            F('design:type', Array)
        ], U.prototype, 'expressionArguments', void 0);
        U = E([
            J.injectable(),
            G(0, J.inject(K.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            G(1, J.inject(K.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            G(2, J.inject(K.ServiceIdentifiers.IRandomGenerator)),
            G(3, J.inject(K.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (A = void 0 !== L.TIdentifierNamesGeneratorFactory && L.TIdentifierNamesGeneratorFactory) ? A : Object,
                'function' == typeof (B = void 0 !== M.ICustomCodeHelperFormatter && M.ICustomCodeHelperFormatter) ? B : Object,
                'function' == typeof (C = void 0 !== P.IRandomGenerator && P.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== O.IOptions && O.IOptions) ? D : Object
            ])
        ], U);
        v.CallExpressionFunctionNode = U;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E;
        var F;
        var G = this && this.__decorate || function (a1, a2, a3, a4) {
            var a5;
            var a6 = arguments.length;
            var a7 = a6 < 3 ? a2 : null === a4 ? a4 = Object.getOwnPropertyDescriptor(a2, a3) : a4;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a7 = Reflect.decorate(a1, a2, a3, a4);
            } else {
                for (var a8 = a1.length - 1; a8 >= 0; a8--)
                    if (a5 = a1[a8]) {
                        a7 = (a6 < 3 ? a5(a7) : a6 > 3 ? a5(a2, a3, a7) : a5(a2, a3)) || a7;
                    }
            }
            if (a6 > 3 && a7) {
                Object.defineProperty(a2, a3, a7);
            }
            return a7;
        };
        var H = this && this.__metadata || function (a1, a2) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a1, a2);
            }
        };
        var J = this && this.__param || function (a1, a2) {
            return function (a6, a7) {
                a2(a6, a7, a1);
            };
        };
        Object.defineProperty(w, '__esModule', K);
        const L = x(0);
        const M = x(1);
        const P = x(157);
        const Q = x(5);
        const R = x(9);
        const T = x(2);
        const U = x(3);
        const V = x(7);
        const W = x(14);
        const X = x(8);
        const Y = x(4);
        const Z = x(6);
        let a0 = class extends W.AbstractCustomNode {
            constructor(a1, a2, a3, a4) {
                super(a1, a2, a3, a4);
            }
            initialize(a1) {
                this.controlFlowStorage = a1;
            }
            getNodeStructure() {
                const a2 = Array.from(this.controlFlowStorage.getStorage()).map(([a4, a5]) => {
                    const a6 = a5.getNode()[0];
                    if (!Y.NodeGuards.isExpressionStatementNode(a6)) {
                        throw new Error('Function node for control flow storage object should be passed inside the `ExpressionStatement` node!');
                    }
                    return X.NodeFactory.propertyNode(X.NodeFactory.identifierNode(a4), a6.expression);
                });
                let a3 = X.NodeFactory.variableDeclarationNode([X.NodeFactory.variableDeclaratorNode(X.NodeFactory.identifierNode(this.controlFlowStorage.getStorageId()), X.NodeFactory.objectExpressionNode(a2))], 'const');
                a3 = Z.NodeUtils.parentizeAst(a3);
                return [a3];
            }
        };
        G([
            V.initializable(),
            H('design:type', 'function' == typeof (B = void 0 !== P.TControlFlowStorage && P.TControlFlowStorage) ? B : Object)
        ], a0.prototype, 'controlFlowStorage', void 0);
        a0 = G([
            L.injectable(),
            J(0, L.inject(M.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            J(1, L.inject(M.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            J(2, L.inject(M.ServiceIdentifiers.IRandomGenerator)),
            J(3, L.inject(M.ServiceIdentifiers.IOptions)),
            H('design:paramtypes', [
                'function' == typeof (C = void 0 !== Q.TIdentifierNamesGeneratorFactory && Q.TIdentifierNamesGeneratorFactory) ? C : Object,
                'function' == typeof (D = void 0 !== R.ICustomCodeHelperFormatter && R.ICustomCodeHelperFormatter) ? D : Object,
                'function' == typeof (E = void 0 !== U.IRandomGenerator && U.IRandomGenerator) ? E : Object,
                'function' == typeof (F = void 0 !== T.IOptions && T.IOptions) ? F : Object
            ])
        ], a0);
        w.ControlFlowStorageNode = a0;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (V, W, X, Y) {
            var a1;
            var a2 = arguments.length;
            var a3 = a2 < 3 ? W : null === Y ? Y = Object.getOwnPropertyDescriptor(W, X) : Y;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a3 = Reflect.decorate(V, W, X, Y);
            } else {
                for (var a4 = V.length - 1; a4 >= 0; a4--)
                    if (a1 = V[a4]) {
                        a3 = (a2 < 3 ? a1(a3) : a2 > 3 ? a1(W, X, a3) : a1(W, X)) || a3;
                    }
            }
            if (a2 > 3 && a3) {
                Object.defineProperty(W, X, a3);
            }
            return a3;
        };
        var F = this && this.__metadata || function (V, W) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(V, W);
            }
        };
        var G = this && this.__param || function (V, W) {
            return function (Z, a0) {
                W(Z, a0, V);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const J = w(0);
        const K = w(1);
        const L = w(5);
        const M = w(9);
        const O = w(2);
        const P = w(3);
        const Q = w(7);
        const R = w(14);
        const S = w(8);
        const T = w(6);
        let U = class extends R.AbstractCustomNode {
            constructor(V, W, X, Y) {
                super(V, W, X, Y);
            }
            initialize(V, W, X, Y) {
                this.controlFlowStorageName = V;
                this.controlFlowStorageKey = W;
                this.leftValue = X;
                this.rightValue = Y;
            }
            getNodeStructure() {
                const V = S.NodeFactory.expressionStatementNode(S.NodeFactory.callExpressionNode(S.NodeFactory.memberExpressionNode(S.NodeFactory.identifierNode(this.controlFlowStorageName), S.NodeFactory.identifierNode(this.controlFlowStorageKey)), [
                    this.leftValue,
                    this.rightValue
                ]));
                T.NodeUtils.parentizeAst(V);
                return [V];
            }
        };
        E([
            Q.initializable(),
            F('design:type', String)
        ], U.prototype, 'controlFlowStorageKey', void 0);
        E([
            Q.initializable(),
            F('design:type', String)
        ], U.prototype, 'controlFlowStorageName', void 0);
        U = E([
            J.injectable(),
            G(0, J.inject(K.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            G(1, J.inject(K.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            G(2, J.inject(K.ServiceIdentifiers.IRandomGenerator)),
            G(3, J.inject(K.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (A = void 0 !== L.TIdentifierNamesGeneratorFactory && L.TIdentifierNamesGeneratorFactory) ? A : Object,
                'function' == typeof (B = void 0 !== M.ICustomCodeHelperFormatter && M.ICustomCodeHelperFormatter) ? B : Object,
                'function' == typeof (C = void 0 !== P.IRandomGenerator && P.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== O.IOptions && O.IOptions) ? D : Object
            ])
        ], U);
        v.ExpressionWithOperatorControlFlowStorageCallNode = U;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (T, U, V, W) {
            var X;
            var Y = arguments.length;
            var Z = Y < 3 ? U : null === W ? W = Object.getOwnPropertyDescriptor(U, V) : W;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                Z = Reflect.decorate(T, U, V, W);
            } else {
                for (var a0 = T.length - 1; a0 >= 0; a0--)
                    if (X = T[a0]) {
                        Z = (Y < 3 ? X(Z) : Y > 3 ? X(U, V, Z) : X(U, V)) || Z;
                    }
            }
            if (Y > 3 && Z) {
                Object.defineProperty(U, V, Z);
            }
            return Z;
        };
        var F = this && this.__metadata || function (T, U) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(T, U);
            }
        };
        var G = this && this.__param || function (T, U) {
            return function (Y, Z) {
                U(Y, Z, T);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const I = w(0);
        const J = w(1);
        const K = w(5);
        const L = w(9);
        const M = w(2);
        const O = w(3);
        const P = w(14);
        const Q = w(8);
        const R = w(6);
        let S = class extends P.AbstractCustomNode {
            constructor(T, U, V, W) {
                super(T, U, V, W);
            }
            initialize(T) {
                this.operator = T;
            }
            getNodeStructure() {
                const U = Q.NodeFactory.expressionStatementNode(Q.NodeFactory.functionExpressionNode([
                    Q.NodeFactory.identifierNode('x'),
                    Q.NodeFactory.identifierNode('y')
                ], Q.NodeFactory.blockStatementNode([Q.NodeFactory.returnStatementNode(Q.NodeFactory.logicalExpressionNode(this.operator, Q.NodeFactory.identifierNode('x'), Q.NodeFactory.identifierNode('y')))])));
                R.NodeUtils.parentizeAst(U);
                return [U];
            }
        };
        S = E([
            I.injectable(),
            G(0, I.inject(J.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            G(1, I.inject(J.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            G(2, I.inject(J.ServiceIdentifiers.IRandomGenerator)),
            G(3, I.inject(J.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (A = void 0 !== K.TIdentifierNamesGeneratorFactory && K.TIdentifierNamesGeneratorFactory) ? A : Object,
                'function' == typeof (B = void 0 !== L.ICustomCodeHelperFormatter && L.ICustomCodeHelperFormatter) ? B : Object,
                'function' == typeof (C = void 0 !== O.IRandomGenerator && O.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== M.IOptions && M.IOptions) ? D : Object
            ])
        ], S);
        v.LogicalExpressionFunctionNode = S;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (V, W, X, Y) {
            var a1;
            var a2 = arguments.length;
            var a3 = a2 < 3 ? W : null === Y ? Y = Object.getOwnPropertyDescriptor(W, X) : Y;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a3 = Reflect.decorate(V, W, X, Y);
            } else {
                for (var a4 = V.length - 1; a4 >= 0; a4--)
                    if (a1 = V[a4]) {
                        a3 = (a2 < 3 ? a1(a3) : a2 > 3 ? a1(W, X, a3) : a1(W, X)) || a3;
                    }
            }
            if (a2 > 3 && a3) {
                Object.defineProperty(W, X, a3);
            }
            return a3;
        };
        var F = this && this.__metadata || function (V, W) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(V, W);
            }
        };
        var G = this && this.__param || function (V, W) {
            return function (X, Y) {
                W(X, Y, V);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const J = w(0);
        const K = w(1);
        const L = w(5);
        const M = w(9);
        const O = w(2);
        const P = w(3);
        const Q = w(7);
        const R = w(14);
        const S = w(8);
        const T = w(6);
        let U = class extends R.AbstractCustomNode {
            constructor(V, W, X, Y) {
                super(V, W, X, Y);
            }
            initialize(V, W) {
                this.controlFlowStorageName = V;
                this.controlFlowStorageKey = W;
            }
            getNodeStructure() {
                const W = S.NodeFactory.expressionStatementNode(S.NodeFactory.memberExpressionNode(S.NodeFactory.identifierNode(this.controlFlowStorageName), S.NodeFactory.identifierNode(this.controlFlowStorageKey)));
                T.NodeUtils.parentizeAst(W);
                return [W];
            }
        };
        E([
            Q.initializable(),
            F('design:type', String)
        ], U.prototype, 'controlFlowStorageKey', void 0);
        E([
            Q.initializable(),
            F('design:type', String)
        ], U.prototype, 'controlFlowStorageName', void 0);
        U = E([
            J.injectable(),
            G(0, J.inject(K.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            G(1, J.inject(K.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            G(2, J.inject(K.ServiceIdentifiers.IRandomGenerator)),
            G(3, J.inject(K.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (A = void 0 !== L.TIdentifierNamesGeneratorFactory && L.TIdentifierNamesGeneratorFactory) ? A : Object,
                'function' == typeof (B = void 0 !== M.ICustomCodeHelperFormatter && M.ICustomCodeHelperFormatter) ? B : Object,
                'function' == typeof (C = void 0 !== P.IRandomGenerator && P.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== O.IOptions && O.IOptions) ? D : Object
            ])
        ], U);
        v.StringLiteralControlFlowStorageCallNode = U;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (T, U, V, W) {
            var X;
            var Y = arguments.length;
            var Z = Y < 3 ? U : null === W ? W = Object.getOwnPropertyDescriptor(U, V) : W;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                Z = Reflect.decorate(T, U, V, W);
            } else {
                for (var a0 = T.length - 1; a0 >= 0; a0--)
                    if (X = T[a0]) {
                        Z = (Y < 3 ? X(Z) : Y > 3 ? X(U, V, Z) : X(U, V)) || Z;
                    }
            }
            if (Y > 3 && Z) {
                Object.defineProperty(U, V, Z);
            }
            return Z;
        };
        var F = this && this.__metadata || function (T, U) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(T, U);
            }
        };
        var G = this && this.__param || function (T, U) {
            return function (X, Y) {
                U(X, Y, T);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const I = w(0);
        const J = w(1);
        const K = w(5);
        const L = w(9);
        const M = w(2);
        const O = w(3);
        const P = w(7);
        const Q = w(14);
        const R = w(8);
        let S = class extends Q.AbstractCustomNode {
            constructor(T, U, V, W) {
                super(T, U, V, W);
            }
            initialize(T) {
                this.literalValue = T;
            }
            getNodeStructure() {
                return [R.NodeFactory.expressionStatementNode(R.NodeFactory.literalNode(this.literalValue))];
            }
        };
        E([
            P.initializable(),
            F('design:type', String)
        ], S.prototype, 'literalValue', void 0);
        S = E([
            I.injectable(),
            G(0, I.inject(J.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            G(1, I.inject(J.ServiceIdentifiers.ICustomCodeHelperFormatter)),
            G(2, I.inject(J.ServiceIdentifiers.IRandomGenerator)),
            G(3, I.inject(J.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (A = void 0 !== K.TIdentifierNamesGeneratorFactory && K.TIdentifierNamesGeneratorFactory) ? A : Object,
                'function' == typeof (B = void 0 !== L.ICustomCodeHelperFormatter && L.ICustomCodeHelperFormatter) ? B : Object,
                'function' == typeof (C = void 0 !== O.IRandomGenerator && O.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== M.IOptions && M.IOptions) ? D : Object
            ])
        ], S);
        v.StringLiteralNode = S;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        const j = f(0);
        d.finalizingTransformersModule = new j.ContainerModule(k => {
        });
    },
    function (f, g, h) {
        'use strict';
        Object.defineProperty(g, '__esModule', l);
        const m = h(0);
        const p = h(1);
        const q = h(33);
        const u = h(164);
        const v = h(165);
        const w = h(166);
        g.generatorsModule = new m.ContainerModule(x => {
            x(p.ServiceIdentifiers.IIdentifierNamesGenerator).to(u.DictionaryIdentifierNamesGenerator).inSingletonScope().whenTargetNamed(q.IdentifierNamesGenerator.DictionaryIdentifierNamesGenerator);
            x(p.ServiceIdentifiers.IIdentifierNamesGenerator).to(v.HexadecimalIdentifierNamesGenerator).inSingletonScope().whenTargetNamed(q.IdentifierNamesGenerator.HexadecimalIdentifierNamesGenerator);
            x(p.ServiceIdentifiers.IIdentifierNamesGenerator).to(w.MangledIdentifierNamesGenerator).inSingletonScope().whenTargetNamed(q.IdentifierNamesGenerator.MangledIdentifierNamesGenerator);
            x(p.ServiceIdentifiers.Factory__IIdentifierNamesGenerator).toFactory(function () {
                let C = null;
                return D => E => {
                    if (C) {
                        return C;
                    }
                    let G;
                    switch (E.identifierNamesGenerator) {
                    case q.IdentifierNamesGenerator.DictionaryIdentifierNamesGenerator:
                        G = D.container.getNamed(p.ServiceIdentifiers.IIdentifierNamesGenerator, q.IdentifierNamesGenerator.DictionaryIdentifierNamesGenerator);
                        break;
                    case q.IdentifierNamesGenerator.MangledIdentifierNamesGenerator:
                        G = D.container.getNamed(p.ServiceIdentifiers.IIdentifierNamesGenerator, q.IdentifierNamesGenerator.MangledIdentifierNamesGenerator);
                        break;
                    case q.IdentifierNamesGenerator.HexadecimalIdentifierNamesGenerator:
                    default:
                        G = D.container.getNamed(p.ServiceIdentifiers.IIdentifierNamesGenerator, q.IdentifierNamesGenerator.HexadecimalIdentifierNamesGenerator);
                    }
                    C = G;
                    return G;
                };
            }());
        });
    },
    function (k, q, v) {
        'use strict';
        var z;
        var A;
        var B;
        var C;
        var D = this && this.__decorate || function (P, Q, R, S) {
            var T;
            var U = arguments.length;
            var V = U < 3 ? Q : null === S ? S = Object.getOwnPropertyDescriptor(Q, R) : S;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                V = Reflect.decorate(P, Q, R, S);
            } else {
                for (var W = P.length - 1; W >= 0; W--)
                    if (T = P[W]) {
                        V = (U < 3 ? T(V) : U > 3 ? T(Q, R, V) : T(Q, R)) || V;
                    }
            }
            if (U > 3 && V) {
                Object.defineProperty(Q, R, V);
            }
            return V;
        };
        var E = this && this.__metadata || function (P, Q) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(P, Q);
            }
        };
        var F = this && this.__param || function (P, Q) {
            return function (T, U) {
                Q(T, U, P);
            };
        };
        const G = { value: !0 };
        Object.defineProperty(q, '__esModule', G);
        const H = v(0);
        const I = v(1);
        const J = v(36);
        const K = v(2);
        const L = v(3);
        const M = v(50);
        const N = v(22);
        let O = z = class extends M.AbstractIdentifierNamesGenerator {
            constructor(P, Q, R) {
                super(P, Q);
                this.arrayUtils = R;
                this.identifierNamesSet = new Set(this.getInitialIdentifierNames(this.options.identifiersDictionary));
                this.identifiersIterator = this.identifierNamesSet.values();
            }
            static incrementIdentifierName(P) {
                let Q = '';
                let R = !1;
                for (const S of P)
                    if (R || S !== S.toUpperCase()) {
                        if (R || S !== S.toLowerCase()) {
                            Q += S;
                        } else {
                            Q += S.toUpperCase();
                            R = !0;
                        }
                    } else {
                        Q += S.toLowerCase();
                    }
                if (R) {
                    return Q;
                } else {
                    return null;
                }
            }
            generateForGlobalScope() {
                const Q = this.generateNewDictionaryName();
                this.preserveName(Q);
                return Q;
            }
            generateForLexicalScope(P) {
                const R = [
                    P,
                    ...N.NodeLexicalScopeUtils.getLexicalScopes(P)
                ];
                const S = this.generateNewDictionaryName();
                if (this.isValidIdentifierNameInLexicalScopes(S, R)) {
                    this.preserveNameForLexicalScope(S, P);
                    return S;
                } else {
                    return this.generateForLexicalScope(P);
                }
            }
            generateWithPrefix() {
                const P = '' + (this.options.identifiersPrefix ? '' + this.options.identifiersPrefix : '') + this.generateNewDictionaryName();
                if (this.isValidIdentifierName(P)) {
                    this.preserveName(P);
                    return P;
                } else {
                    return this.generateWithPrefix();
                }
            }
            generateNewDictionaryName() {
                if (!this.identifierNamesSet.size) {
                    throw new Error('Too many identifiers in the code, add more words to identifiers dictionary');
                }
                const R = this.identifiersIterator.next();
                if (!R.done) {
                    const T = R.value;
                    if (this.isValidIdentifierName(T)) {
                        return R.value;
                    } else {
                        return this.generateNewDictionaryName();
                    }
                }
                this.identifierNamesSet = new Set(this.getIncrementedIdentifierNames([...this.identifierNamesSet]));
                this.identifiersIterator = this.identifierNamesSet.values();
                return this.generateNewDictionaryName();
            }
            getInitialIdentifierNames(P) {
                const Q = P.filter(Boolean).map(R => R.toLowerCase());
                return this.arrayUtils.shuffle(Q);
            }
            getIncrementedIdentifierNames(P) {
                const S = [];
                for (const T of P) {
                    const U = z.incrementIdentifierName(T);
                    if (U) {
                        S.push(U);
                    }
                }
                return this.arrayUtils.shuffle(S);
            }
        };
        O = z = D([
            H.injectable(),
            F(0, H.inject(I.ServiceIdentifiers.IRandomGenerator)),
            F(1, H.inject(I.ServiceIdentifiers.IOptions)),
            F(2, H.inject(I.ServiceIdentifiers.IArrayUtils)),
            E('design:paramtypes', [
                'function' == typeof (A = void 0 !== L.IRandomGenerator && L.IRandomGenerator) ? A : Object,
                'function' == typeof (B = void 0 !== K.IOptions && K.IOptions) ? B : Object,
                'function' == typeof (C = void 0 !== J.IArrayUtils && J.IArrayUtils) ? C : Object
            ])
        ], O);
        q.DictionaryIdentifierNamesGenerator = O;
    },
    function (j, k, q) {
        'use strict';
        var x;
        var z;
        var A;
        var B = this && this.__decorate || function (N, O, P, Q) {
            var R;
            var S = arguments.length;
            var T = S < 3 ? O : null === Q ? Q = Object.getOwnPropertyDescriptor(O, P) : Q;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                T = Reflect.decorate(N, O, P, Q);
            } else {
                for (var U = N.length - 1; U >= 0; U--)
                    if (R = N[U]) {
                        T = (S < 3 ? R(T) : S > 3 ? R(O, P, T) : R(O, P)) || T;
                    }
            }
            if (S > 3 && T) {
                Object.defineProperty(O, P, T);
            }
            return T;
        };
        var C = this && this.__metadata || function (N, O) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(N, O);
            }
        };
        var D = this && this.__param || function (N, O) {
            return function (R, S) {
                O(R, S, N);
            };
        };
        Object.defineProperty(k, '__esModule', E);
        const F = q(0);
        const G = q(1);
        const H = q(2);
        const I = q(3);
        const J = q(50);
        const K = q(38);
        const L = q(26);
        let M = x = class extends J.AbstractIdentifierNamesGenerator {
            constructor(N, O) {
                super(N, O);
            }
            generateForGlobalScope(N) {
                const P = this.randomGenerator.getRandomInteger(10000, 99999999);
                const Q = K.NumberUtils.toHex(P);
                const R = L.Utils.hexadecimalPrefix.length + 1;
                const S = N ? N - R : x.baseIdentifierNameLength;
                const T = Q.substr(0, S);
                const U = '_' + L.Utils.hexadecimalPrefix + T;
                if (this.isValidIdentifierName(U)) {
                    this.preserveName(U);
                    return U;
                } else {
                    return this.generateForGlobalScope(N);
                }
            }
            generateForLexicalScope(N, O) {
                return this.generateForGlobalScope(O);
            }
            generateWithPrefix(N) {
                const P = this.generateForGlobalScope(N);
                return ('' + this.options.identifiersPrefix + P).replace('__', '_');
            }
        };
        M.baseIdentifierNameLength = 6;
        M = x = B([
            F.injectable(),
            D(0, F.inject(G.ServiceIdentifiers.IRandomGenerator)),
            D(1, F.inject(G.ServiceIdentifiers.IOptions)),
            C('design:paramtypes', [
                'function' == typeof (z = void 0 !== I.IRandomGenerator && I.IRandomGenerator) ? z : Object,
                'function' == typeof (A = void 0 !== H.IOptions && H.IOptions) ? A : Object
            ])
        ], M);
        k.HexadecimalIdentifierNamesGenerator = M;
    },
    function (j, k, q) {
        'use strict';
        var x;
        var y;
        var z;
        var A = this && this.__decorate || function (L, M, N, O) {
            var R;
            var S = arguments.length;
            var T = S < 3 ? M : null === O ? O = Object.getOwnPropertyDescriptor(M, N) : O;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                T = Reflect.decorate(L, M, N, O);
            } else {
                for (var U = L.length - 1; U >= 0; U--)
                    if (R = L[U]) {
                        T = (S < 3 ? R(T) : S > 3 ? R(M, N, T) : R(M, N)) || T;
                    }
            }
            if (S > 3 && T) {
                Object.defineProperty(M, N, T);
            }
            return T;
        };
        var B = this && this.__metadata || function (L, M) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(L, M);
            }
        };
        var C = this && this.__param || function (L, M) {
            return function (P, Q) {
                M(P, Q, L);
            };
        };
        Object.defineProperty(k, '__esModule', D);
        const E = q(0);
        const F = q(1);
        const G = q(2);
        const H = q(3);
        const I = q(50);
        const J = q(22);
        let K = x = class extends I.AbstractIdentifierNamesGenerator {
            constructor(L, M) {
                super(L, M);
                this.previousMangledName = x.initMangledNameCharacter;
            }
            generateForGlobalScope(L) {
                const P = this.generateNewMangledName(this.previousMangledName);
                this.previousMangledName = P;
                this.preserveName(P);
                return P;
            }
            generateForLexicalScope(L, M) {
                const Q = [
                    L,
                    ...J.NodeLexicalScopeUtils.getLexicalScopes(L)
                ];
                let R = this.getLastMangledNameForScopes(Q);
                do {
                    R = this.generateNewMangledName(R);
                } while (!this.isValidIdentifierNameInLexicalScopes(R, Q));
                x.lastMangledNameInScopeMap.set(L, R);
                this.preserveNameForLexicalScope(R, L);
                return R;
            }
            generateWithPrefix(L) {
                const O = this.options.identifiersPrefix ? '' + this.options.identifiersPrefix : '';
                const P = this.generateNewMangledName(this.previousMangledName);
                const Q = '' + O + P;
                this.previousMangledName = P;
                return this.isValidIdentifierName(Q) ? (this.preserveName(Q), Q) : this.generateWithPrefix(L);
            }
            isValidIdentifierName(L) {
                return super.isValidIdentifierName(L) && !x.reservedNamesSet.has(L);
            }
            generateNewMangledName(L) {
                let P = (Q => {
                    const U = x.nameSequence;
                    const V = U.length;
                    const W = Q.length;
                    const X = Z => '0'.repeat(Z);
                    let Y = W - 1;
                    do {
                        const Z = Q[Y];
                        const a0 = U.indexOf(Z);
                        if (a0 !== V - 1) {
                            return Q.substring(0, Y) + U[a0 + 1] + X(W - (Y + 1));
                        }
                        --Y;
                    } while (Y >= 0);
                    return 'a' + X(W);
                })(L);
                this.isValidIdentifierName(P) || (P = this.generateNewMangledName(P));
                return P;
            }
            getLastMangledNameForScopes(L) {
                var O;
                for (const Q of L) {
                    const R = null !== (O = x.lastMangledNameInScopeMap.get(Q)) && void 0 !== O ? O : null;
                    if (R) {
                        return R;
                    }
                }
                return x.initMangledNameCharacter;
            }
        };
        K.initMangledNameCharacter = '9';
        K.lastMangledNameInScopeMap = new Map();
        K.nameSequence = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');
        K.reservedNamesSet = new Set([
            'byte',
            'case',
            'char',
            'do',
            'else',
            'enum',
            'eval',
            'for',
            'goto',
            'if',
            'in',
            'int',
            'let',
            'long',
            'new',
            'null',
            'this',
            'true',
            'try',
            'var',
            'void',
            'with'
        ]);
        K = x = A([
            E.injectable(),
            C(0, E.inject(F.ServiceIdentifiers.IRandomGenerator)),
            C(1, E.inject(F.ServiceIdentifiers.IOptions)),
            B('design:paramtypes', [
                'function' == typeof (y = void 0 !== H.IRandomGenerator && H.IRandomGenerator) ? y : Object,
                'function' == typeof (z = void 0 !== G.IOptions && G.IOptions) ? z : Object
            ])
        ], K);
        k.MangledIdentifierNamesGenerator = K;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', j);
        const k = f(0);
        const l = f(1);
        const m = f(168);
        d.nodeModule = new k.ContainerModule(p => {
            p(l.ServiceIdentifiers.IScopeIdentifiersTraverser).to(m.ScopeIdentifiersTraverser).inSingletonScope();
        });
    },
    function (h, j, k) {
        'use strict';
        var q;
        var v;
        var w = this && this.__decorate || function (F, G, H, I) {
            var J;
            var K = arguments.length;
            var L = K < 3 ? G : null === I ? I = Object.getOwnPropertyDescriptor(G, H) : I;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                L = Reflect.decorate(F, G, H, I);
            } else {
                for (var M = F.length - 1; M >= 0; M--)
                    if (J = F[M]) {
                        L = (K < 3 ? J(L) : K > 3 ? J(G, H, L) : J(G, H)) || L;
                    }
            }
            if (K > 3 && L) {
                Object.defineProperty(G, H, L);
            }
            return L;
        };
        var x = this && this.__metadata || function (F, G) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(F, G);
            }
        };
        var y = this && this.__param || function (F, G) {
            return function (J, K) {
                G(J, K, F);
            };
        };
        Object.defineProperty(j, '__esModule', z);
        const A = k(0);
        const B = k(1);
        const C = k(169);
        const D = k(4);
        let E = q = class {
            constructor(F) {
                this.scopeAnalyzer = F;
            }
            traverse(F, G, H) {
                this.scopeAnalyzer.analyze(F);
                const I = this.scopeAnalyzer.acquireScope(F);
                this.traverseScopeVariables(I, I, H);
            }
            traverseScopeVariables(F, G, H) {
                const L = G.variableScope;
                const M = D.NodeGuards.isNodeWithBlockLexicalScope(L.block) ? L.block : null;
                const N = q.globalScopeNames.includes(L.type);
                if (M) {
                    for (const O of G.variables)
                        if (O.name !== q.argumentsVariableName) {
                            H({
                                isGlobalDeclaration: N,
                                rootScope: F,
                                variable: O,
                                variableScope: L,
                                variableLexicalScopeNode: M
                            });
                        }
                    for (const P of G.childScopes)
                        this.traverseScopeVariables(F, P, H);
                }
            }
        };
        E.argumentsVariableName = 'arguments';
        E.globalScopeNames = [
            'global',
            'module'
        ];
        E = q = w([
            A.injectable(),
            y(0, A.inject(B.ServiceIdentifiers.IScopeAnalyzer)),
            x('design:paramtypes', ['function' == typeof (v = void 0 !== C.IScopeAnalyzer && C.IScopeAnalyzer) ? v : Object])
        ], E);
        j.ScopeIdentifiersTraverser = E;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', j);
        const k = f(16);
        const l = f(0);
        const m = f(1);
        d.nodeTransformersModule = new l.ContainerModule(p => {
            p(m.ServiceIdentifiers.Factory__INodeTransformer).toFactory(k.InversifyContainerFacade.getCacheFactory(m.ServiceIdentifiers.INodeTransformer));
        });
    },
    function (j, k, q) {
        'use strict';
        Object.defineProperty(k, '__esModule', x);
        const y = q(16);
        const z = q(0);
        const A = q(1);
        const B = q(39);
        const C = q(65);
        const D = q(24);
        const E = q(172);
        const F = q(173);
        const G = q(174);
        const H = q(175);
        const I = q(177);
        const J = q(178);
        const K = q(179);
        k.obfuscatingTransformersModule = new z.ContainerModule(L => {
            L(A.ServiceIdentifiers.INodeTransformer).to(G.LabeledStatementTransformer).whenTargetNamed(D.NodeTransformer.LabeledStatementTransformer);
            L(A.ServiceIdentifiers.INodeTransformer).to(H.LiteralTransformer).whenTargetNamed(D.NodeTransformer.LiteralTransformer);
            L(A.ServiceIdentifiers.INodeTransformer).to(K.ScopeIdentifiersTransformer).whenTargetNamed(D.NodeTransformer.ScopeIdentifiersTransformer);
            L(A.ServiceIdentifiers.IObfuscatingReplacer).to(F.BooleanLiteralObfuscatingReplacer).whenTargetNamed(C.LiteralObfuscatingReplacer.BooleanLiteralObfuscatingReplacer);
            L(A.ServiceIdentifiers.IObfuscatingReplacer).to(I.NumberLiteralObfuscatingReplacer).whenTargetNamed(C.LiteralObfuscatingReplacer.NumberLiteralObfuscatingReplacer);
            L(A.ServiceIdentifiers.IObfuscatingReplacer).to(J.StringLiteralObfuscatingReplacer).whenTargetNamed(C.LiteralObfuscatingReplacer.StringLiteralObfuscatingReplacer);
            L(A.ServiceIdentifiers.IIdentifierObfuscatingReplacer).to(E.BaseIdentifierObfuscatingReplacer).whenTargetNamed(B.IdentifierObfuscatingReplacer.BaseIdentifierObfuscatingReplacer);
            L(A.ServiceIdentifiers.Factory__IObfuscatingReplacer).toFactory(y.InversifyContainerFacade.getCacheFactory(A.ServiceIdentifiers.IObfuscatingReplacer));
            L(A.ServiceIdentifiers.Factory__IIdentifierObfuscatingReplacer).toFactory(y.InversifyContainerFacade.getCacheFactory(A.ServiceIdentifiers.IIdentifierObfuscatingReplacer));
        });
    },
    function (h, j, k) {
        'use strict';
        var w;
        var x;
        var y = this && this.__decorate || function (J, K, L, M) {
            var N;
            var O = arguments.length;
            var P = O < 3 ? K : null === M ? M = Object.getOwnPropertyDescriptor(K, L) : M;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                P = Reflect.decorate(J, K, L, M);
            } else {
                for (var Q = J.length - 1; Q >= 0; Q--)
                    if (N = J[Q]) {
                        P = (O < 3 ? N(P) : O > 3 ? N(K, L, P) : N(K, L)) || P;
                    }
            }
            if (O > 3 && P) {
                Object.defineProperty(K, L, P);
            }
            return P;
        };
        var z = this && this.__metadata || function (J, K) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(J, K);
            }
        };
        var A = this && this.__param || function (J, K) {
            return function (N, O) {
                K(N, O, J);
            };
        };
        Object.defineProperty(j, '__esModule', B);
        const C = k(0);
        const D = k(1);
        const E = k(5);
        const F = k(2);
        const G = k(40);
        const H = k(8);
        let I = class extends G.AbstractObfuscatingReplacer {
            constructor(J, K) {
                super(K);
                this.blockScopesMap = new Map();
                this.identifierNamesGenerator = J(K);
            }
            replace(J, K) {
                let O = J.name;
                if (this.blockScopesMap.has(K)) {
                    const P = this.blockScopesMap.get(K);
                    if (P.has(O)) {
                        O = P.get(O);
                    }
                }
                return H.NodeFactory.identifierNode(O);
            }
            storeGlobalName(J, K) {
                const N = J.name;
                if (this.isReservedName(N)) {
                    return;
                }
                const O = this.identifierNamesGenerator.generateWithPrefix();
                this.blockScopesMap.has(K) || this.blockScopesMap.set(K, new Map());
                this.blockScopesMap.get(K).set(N, O);
            }
            storeLocalName(J, K) {
                const O = J.name;
                if (this.isReservedName(O)) {
                    return;
                }
                const P = this.identifierNamesGenerator.generateForLexicalScope(K);
                this.blockScopesMap.has(K) || this.blockScopesMap.set(K, new Map());
                this.blockScopesMap.get(K).set(O, P);
            }
            preserveName(J) {
                this.identifierNamesGenerator.preserveName(J.name);
            }
            preserveNameForLexicalScope(J, K) {
                this.identifierNamesGenerator.preserveNameForLexicalScope(J.name, K);
            }
            isReservedName(J) {
                return !!this.options.reservedNames.length && this.options.reservedNames.some(L => null !== new RegExp(L, 'g').exec(J));
            }
        };
        I = y([
            C.injectable(),
            A(0, C.inject(D.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            A(1, C.inject(D.ServiceIdentifiers.IOptions)),
            z('design:paramtypes', [
                'function' == typeof (w = void 0 !== E.TIdentifierNamesGeneratorFactory && E.TIdentifierNamesGeneratorFactory) ? w : Object,
                'function' == typeof (x = void 0 !== F.IOptions && F.IOptions) ? x : Object
            ])
        ], I);
        j.BaseIdentifierObfuscatingReplacer = I;
    },
    function (h, j, k) {
        'use strict';
        var v;
        var w;
        var x = this && this.__decorate || function (H, I, J, K) {
            var L;
            var M = arguments.length;
            var N = M < 3 ? I : null === K ? K = Object.getOwnPropertyDescriptor(I, J) : K;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                N = Reflect.decorate(H, I, J, K);
            } else {
                for (var O = H.length - 1; O >= 0; O--)
                    if (L = H[O]) {
                        N = (M < 3 ? L(N) : M > 3 ? L(I, J, N) : L(I, J)) || N;
                    }
            }
            if (M > 3 && N) {
                Object.defineProperty(I, J, N);
            }
            return N;
        };
        var y = this && this.__metadata || function (H, I) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(H, I);
            }
        };
        var z = this && this.__param || function (H, I) {
            return function (L, M) {
                I(L, M, H);
            };
        };
        const A = { value: !0 };
        Object.defineProperty(j, '__esModule', A);
        const B = k(0);
        const C = k(1);
        const D = k(2);
        const E = k(40);
        const F = k(8);
        let G = v = class extends E.AbstractObfuscatingReplacer {
            constructor(H) {
                super(H);
            }
            static getTrueUnaryExpressionNode() {
                return F.NodeFactory.unaryExpressionNode('!', v.getFalseUnaryExpressionNode());
            }
            static getFalseUnaryExpressionNode() {
                return F.NodeFactory.unaryExpressionNode('!', F.NodeFactory.arrayExpressionNode());
            }
            replace(H) {
                const J = H.value;
                if ('boolean' != typeof J) {
                    throw new Error('`BooleanLiteralObfuscatingReplacer` should accept only literals with `boolean` value');
                }
                if (J) {
                    return v.getTrueUnaryExpressionNode();
                } else {
                    return v.getFalseUnaryExpressionNode();
                }
            }
        };
        G = v = x([
            B.injectable(),
            z(0, B.inject(C.ServiceIdentifiers.IOptions)),
            y('design:paramtypes', ['function' == typeof (w = void 0 !== D.IOptions && D.IOptions) ? w : Object])
        ], G);
        j.BooleanLiteralObfuscatingReplacer = G;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (X, Y, Z, a0) {
            var a3;
            var a4 = arguments.length;
            var a5 = a4 < 3 ? Y : null === a0 ? a0 = Object.getOwnPropertyDescriptor(Y, Z) : a0;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a5 = Reflect.decorate(X, Y, Z, a0);
            } else {
                for (var a6 = X.length - 1; a6 >= 0; a6--)
                    if (a3 = X[a6]) {
                        a5 = (a4 < 3 ? a3(a5) : a4 > 3 ? a3(Y, Z, a5) : a3(Y, Z)) || a5;
                    }
            }
            if (a4 > 3 && a5) {
                Object.defineProperty(Y, Z, a5);
            }
            return a5;
        };
        var F = this && this.__metadata || function (X, Y) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(X, Y);
            }
        };
        var G = this && this.__param || function (X, Y) {
            return function (a2, a3) {
                Y(a2, a3, X);
            };
        };
        var H = this && this.__importStar || function (X) {
            if (X && X.__esModule) {
                return X;
            }
            if (null != X) {
                for (var a1 in X)
                    if (Object.hasOwnProperty.call(X, a1)) {
                        a0[a1] = X[a1];
                    }
            }
            return a0;
        };
        Object.defineProperty(w, '__esModule', J);
        const K = x(0);
        const L = x(1);
        const M = H(x(12));
        const O = x(51);
        const P = x(2);
        const Q = x(3);
        const R = x(39);
        const S = x(10);
        const T = x(11);
        const U = x(4);
        const V = x(22);
        let W = class extends T.AbstractNodeTransformer {
            constructor(X, Y, Z) {
                super(Y, Z);
                this.identifierObfuscatingReplacer = X(R.IdentifierObfuscatingReplacer.BaseIdentifierObfuscatingReplacer);
            }
            getVisitor(X) {
                switch (X) {
                case S.TransformationStage.Obfuscating:
                    return a1;
                default:
                    return null;
                }
            }
            transformNode(X, Y) {
                const a0 = V.NodeLexicalScopeUtils.getLexicalScope(X);
                if (a0) {
                    this.storeLabeledStatementName(X, a0);
                    this.replaceLabeledStatementName(X, a0);
                    return X;
                } else {
                    return X;
                }
            }
            storeLabeledStatementName(X, Y) {
                this.identifierObfuscatingReplacer.storeLocalName(X.label, Y);
            }
            replaceLabeledStatementName(X, Y) {
                M.replace(X, {
                    enter: (a1, a2) => {
                        if (a2 && U.NodeGuards.isLabelIdentifierNode(a1, a2)) {
                            const a6 = this.identifierObfuscatingReplacer.replace(a1, Y);
                            a1.name = a6.name;
                        }
                    }
                });
            }
        };
        W = E([
            K.injectable(),
            G(0, K.inject(L.ServiceIdentifiers.Factory__IIdentifierObfuscatingReplacer)),
            G(1, K.inject(L.ServiceIdentifiers.IRandomGenerator)),
            G(2, K.inject(L.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (B = void 0 !== O.TIdentifierObfuscatingReplacerFactory && O.TIdentifierObfuscatingReplacerFactory) ? B : Object,
                'function' == typeof (C = void 0 !== Q.IRandomGenerator && Q.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== P.IOptions && P.IOptions) ? D : Object
            ])
        ], W);
        w.LabeledStatementTransformer = W;
    },
    function (w, x, z) {
        'use strict';
        var D;
        var E;
        var F;
        var G;
        var H;
        var J = this && this.__decorate || function (a6, a7, a8, a9) {
            var ac;
            var ad = arguments.length;
            var ae = ad < 3 ? a7 : null === a9 ? a9 = Object.getOwnPropertyDescriptor(a7, a8) : a9;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                ae = Reflect.decorate(a6, a7, a8, a9);
            } else {
                for (var af = a6.length - 1; af >= 0; af--)
                    if (ac = a6[af]) {
                        ae = (ad < 3 ? ac(ae) : ad > 3 ? ac(a7, a8, ae) : ac(a7, a8)) || ae;
                    }
            }
            if (ad > 3 && ae) {
                Object.defineProperty(a7, a8, ae);
            }
            return ae;
        };
        var K = this && this.__metadata || function (a6, a7) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a6, a7);
            }
        };
        var L = this && this.__param || function (a6, a7) {
            return function (ab, ac) {
                a7(ab, ac, a6);
            };
        };
        const M = { value: !0 };
        Object.defineProperty(x, '__esModule', M);
        const P = z(0);
        const Q = z(1);
        const R = z(176);
        const T = z(32);
        const U = z(2);
        const V = z(3);
        const W = z(66);
        const X = z(65);
        const Y = z(10);
        const Z = z(11);
        const a0 = z(8);
        const a1 = z(4);
        const a2 = z(45);
        const a3 = z(18);
        const a4 = z(6);
        let a5 = class extends Z.AbstractNodeTransformer {
            constructor(a6, a7, a8, a9, aa) {
                super(a7, a8);
                this.literalObfuscatingReplacerFactory = a6;
                this.stringArrayStorageAnalyzer = a9;
                this.escapeSequenceEncoder = aa;
            }
            getVisitor(a6) {
                switch (a6) {
                case Y.TransformationStage.Obfuscating:
                    const aa = {
                        enter: (ac, ad) => {
                            if (a1.NodeGuards.isProgramNode(ac) && this.analyzeNode(ac), ad && a1.NodeGuards.isLiteralNode(ac) && !a3.NodeMetadata.isReplacedLiteral(ac)) {
                                return this.transformNode(ac, ad);
                            }
                        }
                    };
                    return aa;
                case Y.TransformationStage.Finalizing:
                    const ab = {
                        enter: (ac, ad) => {
                            if (ad && a1.NodeGuards.isLiteralNode(ac)) {
                                return this.encodeLiteralNodeToEscapeSequence(ac, ad);
                            }
                        }
                    };
                    return ab;
                default:
                    return null;
                }
            }
            analyzeNode(a6) {
                this.stringArrayStorageAnalyzer.analyze(a6);
            }
            transformNode(a6, a7) {
                if (a2.NodeLiteralUtils.isProhibitedLiteralNode(a6, a7)) {
                    return a6;
                }
                let a8;
                switch (typeof a6.value) {
                case 'boolean':
                    a8 = this.literalObfuscatingReplacerFactory(X.LiteralObfuscatingReplacer.BooleanLiteralObfuscatingReplacer).replace(a6);
                    break;
                case 'number':
                    a8 = this.literalObfuscatingReplacerFactory(X.LiteralObfuscatingReplacer.NumberLiteralObfuscatingReplacer).replace(a6);
                    break;
                case 'string':
                    a8 = this.literalObfuscatingReplacerFactory(X.LiteralObfuscatingReplacer.StringLiteralObfuscatingReplacer).replace(a6);
                    break;
                default:
                    a8 = a6;
                }
                a4.NodeUtils.parentizeNode(a8, a7);
                return a8;
            }
            encodeLiteralNodeToEscapeSequence(a6, a7) {
                if ('string' != typeof a6.value) {
                    return a6;
                } else {
                    return a0.NodeFactory.literalNode(this.escapeSequenceEncoder.encode(a6.value, this.options.unicodeEscapeSequence));
                }
            }
        };
        a5 = J([
            P.injectable(),
            L(0, P.inject(Q.ServiceIdentifiers.Factory__IObfuscatingReplacer)),
            L(1, P.inject(Q.ServiceIdentifiers.IRandomGenerator)),
            L(2, P.inject(Q.ServiceIdentifiers.IOptions)),
            L(3, P.inject(Q.ServiceIdentifiers.IStringArrayStorageAnalyzer)),
            L(4, P.inject(Q.ServiceIdentifiers.IEscapeSequenceEncoder)),
            K('design:paramtypes', [
                'function' == typeof (D = void 0 !== R.TLiteralObfuscatingReplacerFactory && R.TLiteralObfuscatingReplacerFactory) ? D : Object,
                'function' == typeof (E = void 0 !== V.IRandomGenerator && V.IRandomGenerator) ? E : Object,
                'function' == typeof (F = void 0 !== U.IOptions && U.IOptions) ? F : Object,
                'function' == typeof (G = void 0 !== W.IStringArrayStorageAnalyzer && W.IStringArrayStorageAnalyzer) ? G : Object,
                'function' == typeof (H = void 0 !== T.IEscapeSequenceEncoder && T.IEscapeSequenceEncoder) ? H : Object
            ])
        ], a5);
        x.LiteralTransformer = a5;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (h, j, k) {
        'use strict';
        var w;
        var x = this && this.__decorate || function (J, K, L, M) {
            var P;
            var Q = arguments.length;
            var R = Q < 3 ? K : null === M ? M = Object.getOwnPropertyDescriptor(K, L) : M;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                R = Reflect.decorate(J, K, L, M);
            } else {
                for (var S = J.length - 1; S >= 0; S--)
                    if (P = J[S]) {
                        R = (Q < 3 ? P(R) : Q > 3 ? P(K, L, R) : P(K, L)) || R;
                    }
            }
            if (Q > 3 && R) {
                Object.defineProperty(K, L, R);
            }
            return R;
        };
        var y = this && this.__metadata || function (J, K) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(J, K);
            }
        };
        var z = this && this.__param || function (J, K) {
            return function (O, P) {
                K(O, P, J);
            };
        };
        const A = { value: !0 };
        Object.defineProperty(j, '__esModule', A);
        const B = k(0);
        const C = k(1);
        const D = k(2);
        const E = k(40);
        const F = k(8);
        const G = k(38);
        const H = k(26);
        let I = class extends E.AbstractObfuscatingReplacer {
            constructor(J) {
                super(J);
                this.numberLiteralCache = new Map();
            }
            replace(J) {
                const N = J.value;
                if ('number' != typeof N) {
                    throw new Error('`NumberLiteralObfuscatingReplacer` should accept only literals with `number` value');
                }
                let O;
                if (this.numberLiteralCache.has(N)) {
                    O = this.numberLiteralCache.get(N);
                } else {
                    O = G.NumberUtils.isCeil(N) ? '' + H.Utils.hexadecimalPrefix + G.NumberUtils.toHex(N) : String(N);
                    this.numberLiteralCache.set(N, O);
                }
                return F.NodeFactory.literalNode(N, O);
            }
        };
        I = x([
            B.injectable(),
            z(0, B.inject(C.ServiceIdentifiers.IOptions)),
            y('design:paramtypes', ['function' == typeof (w = void 0 !== D.IOptions && D.IOptions) ? w : Object])
        ], I);
        j.NumberLiteralObfuscatingReplacer = I;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E;
        var F = this && this.__decorate || function (X, Y, Z, a0) {
            var a1;
            var a2 = arguments.length;
            var a3 = a2 < 3 ? Y : null === a0 ? a0 = Object.getOwnPropertyDescriptor(Y, Z) : a0;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a3 = Reflect.decorate(X, Y, Z, a0);
            } else {
                for (var a4 = X.length - 1; a4 >= 0; a4--)
                    if (a1 = X[a4]) {
                        a3 = (a2 < 3 ? a1(a3) : a2 > 3 ? a1(Y, Z, a3) : a1(Y, Z)) || a3;
                    }
            }
            if (a2 > 3 && a3) {
                Object.defineProperty(Y, Z, a3);
            }
            return a3;
        };
        var G = this && this.__metadata || function (X, Y) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(X, Y);
            }
        };
        var H = this && this.__param || function (X, Y) {
            return function (a2, a3) {
                Y(a2, a3, X);
            };
        };
        const J = { value: !0 };
        Object.defineProperty(w, '__esModule', J);
        const K = x(0);
        const L = x(1);
        const M = x(2);
        const O = x(37);
        const P = x(66);
        const Q = x(28);
        const R = x(40);
        const S = x(18);
        const T = x(8);
        const U = x(38);
        const V = x(26);
        let W = B = class extends R.AbstractObfuscatingReplacer {
            constructor(X, Y, Z) {
                super(Z);
                this.nodesCache = new Map();
                this.stringArrayStorage = X;
                this.stringArrayStorageAnalyzer = Y;
            }
            static getHexadecimalLiteralNode(X) {
                const a1 = T.NodeFactory.literalNode(X);
                const a2 = { replacedLiteral: !0 };
                S.NodeMetadata.set(a1, a2);
                return a1;
            }
            static getRc4KeyLiteralNode(X) {
                const Z = T.NodeFactory.literalNode(X);
                const a0 = { replacedLiteral: !0 };
                S.NodeMetadata.set(Z, a0);
                return Z;
            }
            initialize() {
                if (this.options.shuffleStringArray) {
                    this.stringArrayStorage.shuffleStorage();
                }
                if (this.options.rotateStringArray) {
                    this.stringArrayStorage.rotateStorage();
                }
            }
            replace(X) {
                const Z = X.value;
                if ('string' != typeof Z) {
                    throw new Error('`StringLiteralObfuscatingReplacer` should accept only literals with `string` value');
                }
                const a0 = this.stringArrayStorageAnalyzer.getItemDataForLiteralNode(X);
                const a1 = Z + '-' + Boolean(a0);
                if (this.nodesCache.has(a1) && this.options.stringArrayEncoding !== Q.StringArrayEncoding.Rc4) {
                    return this.nodesCache.get(a1);
                }
                const a2 = a0 ? this.replaceWithStringArrayCallNode(a0) : this.replaceWithLiteralNode(Z);
                this.nodesCache.set(a1, a2);
                return a2;
            }
            replaceWithLiteralNode(X) {
                return T.NodeFactory.literalNode(X);
            }
            replaceWithStringArrayCallNode(X) {
                const {
                    index: Z,
                    decodeKey: a0
                } = X;
                const a1 = '' + V.Utils.hexadecimalPrefix + U.NumberUtils.toHex(Z);
                const a2 = [B.getHexadecimalLiteralNode(a1)];
                if (a0) {
                    a2.push(B.getRc4KeyLiteralNode(a0));
                }
                const a3 = T.NodeFactory.identifierNode(this.stringArrayStorage.getStorageCallsWrapperName());
                return T.NodeFactory.callExpressionNode(a3, a2);
            }
        };
        F([
            K.postConstruct(),
            G('design:type', Function),
            G('design:paramtypes', []),
            G('design:returntype', void 0)
        ], W.prototype, 'initialize', null);
        W = B = F([
            K.injectable(),
            H(0, K.inject(L.ServiceIdentifiers.IStringArrayStorage)),
            H(1, K.inject(L.ServiceIdentifiers.IStringArrayStorageAnalyzer)),
            H(2, K.inject(L.ServiceIdentifiers.IOptions)),
            G('design:paramtypes', [
                'function' == typeof (C = void 0 !== O.IStringArrayStorage && O.IStringArrayStorage) ? C : Object,
                'function' == typeof (D = void 0 !== P.IStringArrayStorageAnalyzer && P.IStringArrayStorageAnalyzer) ? D : Object,
                'function' == typeof (E = void 0 !== M.IOptions && M.IOptions) ? E : Object
            ])
        ], W);
        w.StringLiteralObfuscatingReplacer = W;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E;
        var F = this && this.__decorate || function (a1, a2, a3, a4) {
            var a5;
            var a6 = arguments.length;
            var a7 = a6 < 3 ? a2 : null === a4 ? a4 = Object.getOwnPropertyDescriptor(a2, a3) : a4;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a7 = Reflect.decorate(a1, a2, a3, a4);
            } else {
                for (var a8 = a1.length - 1; a8 >= 0; a8--)
                    if (a5 = a1[a8]) {
                        a7 = (a6 < 3 ? a5(a7) : a6 > 3 ? a5(a2, a3, a7) : a5(a2, a3)) || a7;
                    }
            }
            if (a6 > 3 && a7) {
                Object.defineProperty(a2, a3, a7);
            }
            return a7;
        };
        var G = this && this.__metadata || function (a1, a2) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a1, a2);
            }
        };
        var H = this && this.__param || function (a1, a2) {
            return function (a5, a6) {
                a2(a5, a6, a1);
            };
        };
        var J = this && this.__importStar || function (a1) {
            if (a1 && a1.__esModule) {
                return a1;
            }
            if (null != a1) {
                for (var a3 in a1)
                    if (Object.hasOwnProperty.call(a1, a3)) {
                        a2[a3] = a1[a3];
                    }
            }
            return a2;
        };
        Object.defineProperty(w, '__esModule', K);
        const L = x(0);
        const M = x(1);
        const P = J(x(12));
        const Q = x(51);
        const R = x(2);
        const T = x(3);
        const U = x(67);
        const V = x(39);
        const W = x(10);
        const X = x(11);
        const Y = x(4);
        const Z = x(18);
        let a0 = class extends X.AbstractNodeTransformer {
            constructor(a1, a2, a3, a4) {
                super(a2, a3);
                this.lexicalScopesWithObjectPatternWithoutDeclarationMap = new Map();
                this.identifierObfuscatingReplacer = a1(V.IdentifierObfuscatingReplacer.BaseIdentifierObfuscatingReplacer);
                this.scopeIdentifiersTraverser = a4;
            }
            getVisitor(a1) {
                switch (a1) {
                case W.TransformationStage.Obfuscating:
                    return a5;
                default:
                    return null;
                }
            }
            transformNode(a1, a2) {
                this.scopeIdentifiersTraverser.traverse(a1, a2, a5 => {
                    const {
                        isGlobalDeclaration: a8,
                        variable: a9,
                        variableLexicalScopeNode: aa
                    } = a5;
                    if (!this.options.renameGlobals && a8) {
                        if (!a9.defs.every(ab => 'ImportBinding' === ab.type || 'CatchClause' === ab.type)) {
                            return;
                        }
                    }
                    this.transformScopeVariableIdentifiers(a9, aa, a8);
                });
                return a1;
            }
            transformScopeVariableIdentifiers(a1, a2, a3) {
                for (const a5 of a1.identifiers)
                    if (this.isReplaceableIdentifierNode(a5, a2, a1)) {
                        this.storeIdentifierName(a5, a2, a3);
                        this.replaceIdentifierName(a5, a2, a1);
                    }
            }
            storeIdentifierName(a1, a2, a3) {
                if (a3) {
                    this.identifierObfuscatingReplacer.storeGlobalName(a1, a2);
                } else {
                    this.identifierObfuscatingReplacer.storeLocalName(a1, a2);
                }
            }
            replaceIdentifierName(a1, a2, a3) {
                const a6 = this.identifierObfuscatingReplacer.replace(a1, a2);
                a1.name = a6.name;
                a3.references.forEach(a7 => {
                    a7.identifier.name = a1.name;
                });
            }
            isReplaceableIdentifierNode(a1, a2, a3) {
                const a6 = a1.parentNode;
                return !(!a6 || Z.NodeMetadata.isIgnoredNode(a1) || this.isProhibitedPropertyNode(a1, a6) || this.isProhibitedClassDeclarationNameIdentifierNode(a3, a1, a6) || this.isProhibitedExportNamedClassDeclarationIdentifierNode(a1, a6) || this.isProhibitedExportNamedFunctionDeclarationIdentifierNode(a1, a6) || this.isProhibitedExportNamedVariableDeclarationIdentifierNode(a1, a6) || this.isProhibitedImportSpecifierNode(a1, a6) || this.isProhibitedVariableNameUsedInObjectPatternNode(a3, a1, a2) || Y.NodeGuards.isLabelIdentifierNode(a1, a6));
            }
            isProhibitedClassDeclarationNameIdentifierNode(a1, a2, a3) {
                return Y.NodeGuards.isClassDeclarationNode(a1.scope.block) && Y.NodeGuards.isClassDeclarationNode(a3) && a3.id === a2;
            }
            isProhibitedExportNamedClassDeclarationIdentifierNode(a1, a2) {
                return Y.NodeGuards.isClassDeclarationNode(a2) && a2.id === a1 && !!a2.parentNode && Y.NodeGuards.isExportNamedDeclarationNode(a2.parentNode);
            }
            isProhibitedExportNamedFunctionDeclarationIdentifierNode(a1, a2) {
                return Y.NodeGuards.isFunctionDeclarationNode(a2) && a2.id === a1 && !!a2.parentNode && Y.NodeGuards.isExportNamedDeclarationNode(a2.parentNode);
            }
            isProhibitedExportNamedVariableDeclarationIdentifierNode(a1, a2) {
                return Y.NodeGuards.isVariableDeclaratorNode(a2) && a2.id === a1 && !!a2.parentNode && Y.NodeGuards.isVariableDeclarationNode(a2.parentNode) && !!a2.parentNode.parentNode && Y.NodeGuards.isExportNamedDeclarationNode(a2.parentNode.parentNode);
            }
            isProhibitedImportSpecifierNode(a1, a2) {
                return Y.NodeGuards.isImportSpecifierNode(a2) && a2.imported.name === a2.local.name;
            }
            isProhibitedPropertyNode(a1, a2) {
                const a3 = Y.NodeGuards.isPropertyNode(a2) && !a2.computed && a2.key === a1;
                const a4 = Y.NodeGuards.isAssignmentPatternNode(a2) && a2.left === a1 && !!a2.parentNode && Y.NodeGuards.isPropertyNode(a2.parentNode) && a2.left === a2.parentNode.key;
                return a3 || a4;
            }
            isProhibitedVariableNameUsedInObjectPatternNode(a1, a2, a3) {
                let a7 = this.lexicalScopesWithObjectPatternWithoutDeclarationMap.get(a3);
                if (!1 === a7) {
                    return !1;
                }
                if (!a1.defs.some(a9 => 'var' === a9.kind)) {
                    return !1;
                }
                let a8 = !1;
                P.traverse(a3, {
                    enter: (a9, aa) => {
                        if (Y.NodeGuards.isObjectPatternNode(a9) && aa && Y.NodeGuards.isAssignmentExpressionNode(aa)) {
                            a7 = !0;
                            const ac = a9.properties;
                            for (const ad of ac)
                                if (!ad.computed && ad.shorthand && Y.NodeGuards.isIdentifierNode(ad.key) && a2.name === ad.key.name) {
                                    a8 = !0;
                                    return P.VisitorOption.Break;
                                }
                        }
                    }
                });
                this.lexicalScopesWithObjectPatternWithoutDeclarationMap.set(a3, null != a7 && a7);
                return a8;
            }
        };
        a0 = F([
            L.injectable(),
            H(0, L.inject(M.ServiceIdentifiers.Factory__IIdentifierObfuscatingReplacer)),
            H(1, L.inject(M.ServiceIdentifiers.IRandomGenerator)),
            H(2, L.inject(M.ServiceIdentifiers.IOptions)),
            H(3, L.inject(M.ServiceIdentifiers.IScopeIdentifiersTraverser)),
            G('design:paramtypes', [
                'function' == typeof (B = void 0 !== Q.TIdentifierObfuscatingReplacerFactory && Q.TIdentifierObfuscatingReplacerFactory) ? B : Object,
                'function' == typeof (C = void 0 !== T.IRandomGenerator && T.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== R.IOptions && R.IOptions) ? D : Object,
                'function' == typeof (E = void 0 !== U.IScopeIdentifiersTraverser && U.IScopeIdentifiersTraverser) ? E : Object
            ])
        ], a0);
        w.ScopeIdentifiersTransformer = a0;
    },
    function (d, f, g) {
        'use strict';
        Object.defineProperty(f, '__esModule', k);
        const l = g(0);
        const m = g(1);
        const p = g(181);
        const q = g(188);
        f.optionsModule = new l.ContainerModule(s => {
            s(m.ServiceIdentifiers.IOptions).to(p.Options).inSingletonScope();
            s(m.ServiceIdentifiers.IOptionsNormalizer).to(q.OptionsNormalizer).inSingletonScope();
        });
    },
    function (F, G, H) {
        'use strict';
        var L;
        var M;
        var P;
        var Q;
        var T;
        var U;
        var V;
        var W = this && this.__decorate || function (am, an, ao, ap) {
            var aq;
            var ar = arguments.length;
            var as = ar < 3 ? an : null === ap ? ap = Object.getOwnPropertyDescriptor(an, ao) : ap;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                as = Reflect.decorate(am, an, ao, ap);
            } else {
                for (var at = am.length - 1; at >= 0; at--)
                    if (aq = am[at]) {
                        as = (ar < 3 ? aq(as) : ar > 3 ? aq(an, ao, as) : aq(an, ao)) || as;
                    }
            }
            if (ar > 3 && as) {
                Object.defineProperty(an, ao, as);
            }
            return as;
        };
        var X = this && this.__metadata || function (am, an) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(am, an);
            }
        };
        var Y = this && this.__param || function (am, an) {
            return function (aq, ar) {
                an(aq, ar, am);
            };
        };
        Object.defineProperty(G, '__esModule', Z);
        const a0 = H(31);
        const a1 = H(0);
        const a2 = H(1);
        const a3 = H(68);
        const a4 = H(182);
        const a5 = H(183);
        const a6 = H(184);
        const a7 = H(33);
        const a8 = H(23);
        const a9 = H(34);
        const aa = H(28);
        const ab = H(41);
        const ac = H(185);
        const ad = H(186);
        let ae = L = class {
            constructor(am, an) {
                Object.assign(this, ab.DEFAULT_PRESET, am);
                const ap = a3.validateSync(this, L.validatorOptions);
                if (ap.length) {
                    throw new ReferenceError('Validation failed. errors:\n' + ac.ValidationErrorsFormatter.format(ap));
                }
                Object.assign(this, an.normalize(this));
            }
        };
        const ag = { validationError: af };
        const ah = { each: !0 };
        const ai = { each: !0 };
        const aj = { each: !0 };
        const ak = { each: !0 };
        const al = {
            require_protocol: !0,
            require_tld: !1,
            require_valid_protocol: !0
        };
        ae.validatorOptions = ag;
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'compact', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'controlFlowFlattening', void 0);
        W([
            a3.IsNumber(),
            a3.Min(0),
            a3.Max(1),
            X('design:type', Number)
        ], ae.prototype, 'controlFlowFlatteningThreshold', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'deadCodeInjection', void 0);
        W([
            a3.IsNumber(),
            X('design:type', Number)
        ], ae.prototype, 'deadCodeInjectionThreshold', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'debugProtection', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'debugProtectionInterval', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'disableConsoleOutput', void 0);
        W([
            a3.IsArray(),
            a3.ArrayUnique(),
            a3.IsString(ah),
            ad.IsAllowedForObfuscationTargets([
                a8.ObfuscationTarget.Browser,
                a8.ObfuscationTarget.BrowserNoEval
            ]),
            X('design:type', Array)
        ], ae.prototype, 'domainLock', void 0);
        W([
            a3.IsIn([
                a7.IdentifierNamesGenerator.DictionaryIdentifierNamesGenerator,
                a7.IdentifierNamesGenerator.HexadecimalIdentifierNamesGenerator,
                a7.IdentifierNamesGenerator.MangledIdentifierNamesGenerator
            ]),
            X('design:type', 'function' == typeof (M = void 0 !== a0.TypeFromEnum && a0.TypeFromEnum) ? M : Object)
        ], ae.prototype, 'identifierNamesGenerator', void 0);
        W([
            a3.IsString(),
            X('design:type', String)
        ], ae.prototype, 'identifiersPrefix', void 0);
        W([
            a3.IsArray(),
            a3.ArrayUnique(),
            a3.IsString(ai),
            a3.ValidateIf(am => am.identifierNamesGenerator === a7.IdentifierNamesGenerator.DictionaryIdentifierNamesGenerator),
            a3.ArrayNotEmpty(),
            X('design:type', Array)
        ], ae.prototype, 'identifiersDictionary', void 0);
        W([
            a3.IsString(),
            X('design:type', String)
        ], ae.prototype, 'inputFileName', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'log', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'renameGlobals', void 0);
        W([
            a3.IsArray(),
            a3.ArrayUnique(),
            a3.IsString(aj),
            X('design:type', Array)
        ], ae.prototype, 'reservedNames', void 0);
        W([
            a3.IsArray(),
            a3.ArrayUnique(),
            a3.IsString(ak),
            X('design:type', Array)
        ], ae.prototype, 'reservedStrings', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'rotateStringArray', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'selfDefending', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'shuffleStringArray', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'sourceMap', void 0);
        W([
            a3.IsString(),
            a3.ValidateIf(am => Boolean(am.sourceMapBaseUrl)),
            a3.IsUrl(al),
            X('design:type', String)
        ], ae.prototype, 'sourceMapBaseUrl', void 0);
        W([
            a3.IsString(),
            X('design:type', String)
        ], ae.prototype, 'sourceMapFileName', void 0);
        W([
            a3.IsIn([
                a9.SourceMapMode.Inline,
                a9.SourceMapMode.Separate
            ]),
            X('design:type', 'function' == typeof (P = void 0 !== a0.TypeFromEnum && a0.TypeFromEnum) ? P : Object)
        ], ae.prototype, 'sourceMapMode', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'splitStrings', void 0);
        W([
            a3.IsNumber(),
            a3.ValidateIf(am => Boolean(am.splitStrings)),
            a3.Min(1),
            X('design:type', Number)
        ], ae.prototype, 'splitStringsChunkLength', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'stringArray', void 0);
        W([
            a3.IsIn([
                !0,
                !1,
                aa.StringArrayEncoding.Base64,
                aa.StringArrayEncoding.Rc4
            ]),
            X('design:type', 'function' == typeof (Q = void 0 !== a5.TStringArrayEncoding && a5.TStringArrayEncoding) ? Q : Object)
        ], ae.prototype, 'stringArrayEncoding', void 0);
        W([
            a3.IsNumber(),
            a3.Min(0),
            a3.Max(1),
            X('design:type', Number)
        ], ae.prototype, 'stringArrayThreshold', void 0);
        W([
            a3.IsIn([
                a8.ObfuscationTarget.Browser,
                a8.ObfuscationTarget.BrowserNoEval,
                a8.ObfuscationTarget.Node
            ]),
            X('design:type', 'function' == typeof (T = void 0 !== a0.TypeFromEnum && a0.TypeFromEnum) ? T : Object)
        ], ae.prototype, 'target', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'transformObjectKeys', void 0);
        W([
            a3.IsBoolean(),
            X('design:type', Boolean)
        ], ae.prototype, 'unicodeEscapeSequence', void 0);
        ae = L = W([
            a1.injectable(),
            Y(0, a1.inject(a2.ServiceIdentifiers.TInputOptions)),
            Y(1, a1.inject(a2.ServiceIdentifiers.IOptionsNormalizer)),
            X('design:paramtypes', [
                'function' == typeof (U = void 0 !== a4.TInputOptions && a4.TInputOptions) ? U : Object,
                'function' == typeof (V = void 0 !== a6.IOptionsNormalizer && a6.IOptionsNormalizer) ? V : Object
            ])
        ], ae);
        G.Options = ae;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        const h = { OPrWk: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=' };
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        class j {
            static format(k) {
                return k.reduce((m, n) => [
                    ...m,
                    j.formatWithNestedConstraints(n)
                ], []).join('\n');
            }
            static formatWithNestedConstraints(k) {
                const n = k.constraints;
                return '' + ('`' + k.property + '` errors:\n') + Object.keys(n).map(p => '    - ' + n[p] + '\n').join();
            }
        }
        d.ValidationErrorsFormatter = j;
    },
    function (d, f, g) {
        'use strict';
        var k = this && this.__importDefault || function (v) {
            if (v && v.__esModule) {
                return v;
            } else {
                return { default: v };
            }
        };
        Object.defineProperty(f, '__esModule', l);
        const m = g(68);
        const p = k(g(187));
        const q = g(42);
        const u = g(41);
        f.IsAllowedForObfuscationTargets = function (v, w) {
            return (A, B) => {
                m.registerDecorator({
                    propertyName: B,
                    constraints: [v],
                    name: 'IsAllowedForObfuscationTargets',
                    options: w,
                    target: A.constructor,
                    validator: {
                        validate(E, F) {
                            const I = F.object;
                            const J = u.DEFAULT_PRESET[B];
                            return p.default(E, J) || v.includes(I.target);
                        },
                        defaultMessage: E => 'This option allowed only for obfuscation targets: ' + v.join(q.StringSeparator.Comma + ' ')
                    }
                });
            };
        };
    },
    function (b, c) {
        b.exports = require('fast-deep-equal');
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B = this && this.__decorate || function (T, U, V, W) {
            var X;
            var Y = arguments.length;
            var Z = Y < 3 ? U : null === W ? W = Object.getOwnPropertyDescriptor(U, V) : W;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                Z = Reflect.decorate(T, U, V, W);
            } else {
                for (var a0 = T.length - 1; a0 >= 0; a0--)
                    if (X = T[a0]) {
                        Z = (Y < 3 ? X(Z) : Y > 3 ? X(U, V, Z) : X(U, V)) || Z;
                    }
            }
            if (Y > 3 && Z) {
                Object.defineProperty(U, V, Z);
            }
            return Z;
        };
        Object.defineProperty(v, '__esModule', C);
        const D = w(0);
        const E = w(189);
        const F = w(190);
        const G = w(191);
        const H = w(192);
        const I = w(193);
        const J = w(194);
        const K = w(195);
        const L = w(196);
        const M = w(197);
        const O = w(198);
        const P = w(199);
        const Q = w(200);
        const R = w(201);
        let S = A = class {
            normalize(T) {
                let W = Object.assign({}, T);
                for (const X of A.normalizerRules)
                    W = X(W);
                return W;
            }
        };
        S.normalizerRules = [
            E.ControlFlowFlatteningThresholdRule,
            F.DeadCodeInjectionRule,
            G.DeadCodeInjectionThresholdRule,
            H.DomainLockRule,
            I.InputFileNameRule,
            J.SeedRule,
            K.SelfDefendingRule,
            L.SourceMapBaseUrlRule,
            M.SourceMapFileNameRule,
            O.SplitStringsChunkLengthRule,
            P.StringArrayRule,
            Q.StringArrayEncodingRule,
            R.StringArrayThresholdRule
        ];
        S = A = B([D.injectable()], S);
        v.OptionsNormalizer = S;
    },
    function (d, f, g) {
        'use strict';
        const k = {
            controlFlowFlattening: !1,
            controlFlowFlatteningThreshold: 0
        };
        Object.defineProperty(f, '__esModule', j);
        f.ControlFlowFlatteningThresholdRule = l => (0 === l.controlFlowFlatteningThreshold && (l = Object.assign(Object.assign({}, l), k)), l);
    },
    function (f, g, h) {
        'use strict';
        Object.defineProperty(g, '__esModule', k);
        const l = h(41);
        const m = {
            deadCodeInjection: !0,
            stringArray: !0
        };
        const n = {
            stringArray: !0,
            stringArrayThreshold: l.DEFAULT_PRESET.stringArrayThreshold
        };
        g.DeadCodeInjectionRule = p => (p.deadCodeInjection && ((p = Object.assign(Object.assign({}, p), m)).stringArrayThreshold || (p = Object.assign(Object.assign({}, p), n))), p);
    },
    function (d, f, g) {
        'use strict';
        const k = { deadCodeInjectionThreshold: 0 };
        Object.defineProperty(f, '__esModule', j);
        f.DeadCodeInjectionThresholdRule = l => (0 === l.deadCodeInjectionThreshold && (l = Object.assign(Object.assign({}, l), k)), l);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        const j = f(26);
        d.DomainLockRule = k => {
            if (k.domainLock.length) {
                const n = [];
                for (const q of k.domainLock)
                    n.push(j.Utils.extractDomainFrom(q));
                const p = { domainLock: n };
                k = Object.assign(Object.assign({}, k), p);
            }
            return k;
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        const j = f(42);
        d.InputFileNameRule = k => {
            let {inputFileName: m} = k;
            if (m) {
                m = m.replace(/^\/+/, '').split(j.StringSeparator.Dot).slice(0, -1).join(j.StringSeparator.Dot) || m;
                k = Object.assign(Object.assign({}, k), { inputFileName: m + '.js' });
            }
            return k;
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.SeedRule = j => {
            if (j.seed) {
                return Object.assign(Object.assign({}, j), { seed: j.seed });
            }
            const o = { seed: (m = 0, n = 999999999, Math.floor(Math.random() * (n - m + 1) + m)) };
            return Object.assign(Object.assign({}, j), o);
            var m;
            var n;
        };
    },
    function (d, f, g) {
        'use strict';
        const k = {
            compact: !0,
            selfDefending: !0
        };
        Object.defineProperty(f, '__esModule', j);
        f.SelfDefendingRule = l => (l.selfDefending && (l = Object.assign(Object.assign({}, l), k)), l);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.SourceMapBaseUrlRule = j => {
            const {sourceMapBaseUrl: k} = j;
            const l = { sourceMapBaseUrl: '' };
            if (j.sourceMapFileName) {
                if (k && !k.endsWith('/')) {
                    j = Object.assign(Object.assign({}, j), { sourceMapBaseUrl: k + '/' });
                }
                return j;
            } else {
                return j = Object.assign(Object.assign({}, j), l);
            }
        };
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        const j = f(42);
        d.SourceMapFileNameRule = k => {
            const m = {
                IOZPL: function (p, q) {
                    return p ^ q;
                },
                hEEuD: function (p, q) {
                    return p + q;
                }
            };
            let {sourceMapFileName: p} = k;
            if (p) {
                p = p.replace(/^\/+/, '').replace(/(?:\.js)?(?:\.map)?$/, '');
                let s = p.split(j.StringSeparator.Dot);
                const u = s.length;
                const v = s[u - 1];
                if (u > 1 && v.length <= 3) {
                    s = s.slice(0, -1);
                }
                p = s.join(j.StringSeparator.Dot);
                k = Object.assign(Object.assign({}, k), { sourceMapFileName: p + '.js.map' });
            }
            return k;
        };
    },
    function (d, f, g) {
        'use strict';
        const k = {
            splitStrings: !1,
            splitStringsChunkLength: 0
        };
        Object.defineProperty(f, '__esModule', j);
        f.SplitStringsChunkLengthRule = l => l = 0 === l.splitStringsChunkLength ? Object.assign(Object.assign({}, l), k) : Object.assign(Object.assign({}, l), { splitStringsChunkLength: Math.floor(l.splitStringsChunkLength) });
    },
    function (d, f, g) {
        'use strict';
        const k = {
            rotateStringArray: !1,
            shuffleStringArray: !1,
            stringArray: !1
        };
        Object.defineProperty(f, '__esModule', j);
        f.StringArrayRule = l => (l.stringArray || (l = Object.assign(Object.assign({}, l), k)), l);
    },
    function (d, f, g) {
        'use strict';
        Object.defineProperty(f, '__esModule', j);
        const k = g(28);
        const l = { stringArrayEncoding: k.StringArrayEncoding.Base64 };
        f.StringArrayEncodingRule = m => (!0 === m.stringArrayEncoding && (m = Object.assign(Object.assign({}, m), l)), m);
    },
    function (d, f, g) {
        'use strict';
        const k = {
            rotateStringArray: !1,
            stringArrayThreshold: 0
        };
        Object.defineProperty(f, '__esModule', j);
        f.StringArrayThresholdRule = l => (0 === l.stringArrayThreshold && (l = Object.assign(Object.assign({}, l), k)), l);
    },
    function (k, q, v) {
        'use strict';
        Object.defineProperty(q, '__esModule', z);
        const A = v(16);
        const B = v(0);
        const C = v(1);
        const D = v(24);
        const E = v(69);
        const F = v(203);
        const G = v(204);
        const H = v(70);
        const I = v(205);
        const J = v(209);
        const K = v(211);
        const L = v(212);
        const M = v(214);
        const N = v(215);
        const O = v(216);
        q.preparingTransformersModule = new B.ContainerModule(P => {
            P(C.ServiceIdentifiers.INodeTransformer).to(G.CommentsTransformer).whenTargetNamed(D.NodeTransformer.CommentsTransformer);
            P(C.ServiceIdentifiers.INodeTransformer).to(I.CustomCodeHelpersTransformer).whenTargetNamed(D.NodeTransformer.CustomCodeHelpersTransformer);
            P(C.ServiceIdentifiers.INodeTransformer).to(J.EvalCallExpressionTransformer).whenTargetNamed(D.NodeTransformer.EvalCallExpressionTransformer);
            P(C.ServiceIdentifiers.INodeTransformer).to(K.MetadataTransformer).whenTargetNamed(D.NodeTransformer.MetadataTransformer);
            P(C.ServiceIdentifiers.INodeTransformer).to(L.ObfuscatingGuardsTransformer).whenTargetNamed(D.NodeTransformer.ObfuscatingGuardsTransformer);
            P(C.ServiceIdentifiers.INodeTransformer).to(M.ParentificationTransformer).whenTargetNamed(D.NodeTransformer.ParentificationTransformer);
            P(C.ServiceIdentifiers.INodeGuard).to(F.BlackListObfuscatingGuard).inSingletonScope().whenTargetNamed(E.ObfuscatingGuard.BlackListObfuscatingGuard);
            P(C.ServiceIdentifiers.INodeGuard).to(H.ConditionalCommentObfuscatingGuard).inSingletonScope().whenTargetNamed(E.ObfuscatingGuard.ConditionalCommentObfuscatingGuard);
            P(C.ServiceIdentifiers.INodeGuard).to(N.ReservedStringObfuscatingGuard).inSingletonScope().whenTargetNamed(E.ObfuscatingGuard.ReservedStringObfuscatingGuard);
            P(C.ServiceIdentifiers.Factory__INodeGuard).toFactory(A.InversifyContainerFacade.getCacheFactory(C.ServiceIdentifiers.INodeGuard));
            P(C.ServiceIdentifiers.INodeTransformer).to(O.VariablePreserveTransformer).whenTargetNamed(D.NodeTransformer.VariablePreserveTransformer);
        });
    },
    function (f, g, h) {
        'use strict';
        var l;
        var m = this && this.__decorate || function (x, y, z, A) {
            var B;
            var C = arguments.length;
            var D = C < 3 ? y : null === A ? A = Object.getOwnPropertyDescriptor(y, z) : A;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                D = Reflect.decorate(x, y, z, A);
            } else {
                for (var E = x.length - 1; E >= 0; E--)
                    if (B = x[E]) {
                        D = (C < 3 ? B(D) : C > 3 ? B(y, z, D) : B(y, z)) || D;
                    }
            }
            if (C > 3 && D) {
                Object.defineProperty(y, z, D);
            }
            return D;
        };
        var p = this && this.__metadata || function (x, y) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(x, y);
            }
        };
        Object.defineProperty(g, '__esModule', q);
        const u = h(0);
        const v = h(4);
        let w = l = class {
            constructor() {
                this.blackListGuardsLength = l.blackListGuards.length;
            }
            check(x) {
                for (let y = 0; y < this.blackListGuardsLength; y++)
                    if (l.blackListGuards[y](x)) {
                        return !1;
                    }
                return !0;
            }
        };
        w.blackListGuards = [v.NodeGuards.isUseStrictOperator];
        w = l = m([
            u.injectable(),
            p('design:paramtypes', [])
        ], w);
        g.BlackListObfuscatingGuard = w;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D = this && this.__decorate || function (T, U, V, W) {
            var X;
            var Y = arguments.length;
            var Z = Y < 3 ? U : null === W ? W = Object.getOwnPropertyDescriptor(U, V) : W;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                Z = Reflect.decorate(T, U, V, W);
            } else {
                for (var a0 = T.length - 1; a0 >= 0; a0--)
                    if (X = T[a0]) {
                        Z = (Y < 3 ? X(Z) : Y > 3 ? X(U, V, Z) : X(U, V)) || Z;
                    }
            }
            if (Y > 3 && Z) {
                Object.defineProperty(U, V, Z);
            }
            return Z;
        };
        var E = this && this.__metadata || function (T, U) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(T, U);
            }
        };
        var F = this && this.__param || function (T, U) {
            return function (V, W) {
                U(V, W, T);
            };
        };
        var G = this && this.__importStar || function (T) {
            if (T && T.__esModule) {
                return T;
            }
            if (null != T) {
                for (var V in T)
                    if (Object.hasOwnProperty.call(T, V)) {
                        U[V] = T[V];
                    }
            }
            return U;
        };
        const H = { value: !0 };
        Object.defineProperty(v, '__esModule', H);
        const I = w(0);
        const J = w(1);
        const K = G(w(12));
        const L = w(2);
        const M = w(3);
        const O = w(10);
        const P = w(11);
        const Q = w(4);
        const R = w(70);
        let S = A = class extends P.AbstractNodeTransformer {
            constructor(T, U) {
                super(T, U);
            }
            getVisitor(T) {
                switch (T) {
                case O.TransformationStage.Initializing:
                    return X;
                default:
                    return null;
                }
            }
            transformNode(T) {
                if (!T.comments || !T.comments.length) {
                    return T;
                }
                const W = this.transformComments(T.comments);
                if (0 === W.length) {
                    return T;
                } else {
                    if (T.body.length) {
                        K.traverse(T, {
                            enter: X => {
                                if (X === T) {
                                    return;
                                }
                                const Z = W.findIndex(a0 => a0.range && X.range && a0.range[0] < X.range[0]);
                                if (-1 !== Z) {
                                    X.leadingComments = W.splice(Z, W.length - Z).reverse();
                                }
                            }
                        });
                        if (W.length > 0) {
                            T.trailingComments = W.reverse();
                        }
                        return T;
                    } else {
                        T.leadingComments = W;
                        return T;
                    }
                }
            }
            transformComments(T) {
                return T.filter(U => A.preservedWords.some(V => U.value.includes(V)) || R.ConditionalCommentObfuscatingGuard.isConditionalComment(U)).reverse();
            }
        };
        S.preservedWords = [
            '@license',
            '@preserve'
        ];
        S = A = D([
            I.injectable(),
            F(0, I.inject(J.ServiceIdentifiers.IRandomGenerator)),
            F(1, I.inject(J.ServiceIdentifiers.IOptions)),
            E('design:paramtypes', [
                'function' == typeof (B = void 0 !== M.IRandomGenerator && M.IRandomGenerator) ? B : Object,
                'function' == typeof (C = void 0 !== L.IOptions && L.IOptions) ? C : Object
            ])
        ], S);
        v.CommentsTransformer = S;
    },
    function (q, w, x) {
        'use strict';
        var B;
        var D;
        var E;
        var F;
        var G;
        var H;
        var J = this && this.__decorate || function (a3, a4, a5, a6) {
            var a7;
            var a8 = arguments.length;
            var a9 = a8 < 3 ? a4 : null === a6 ? a6 = Object.getOwnPropertyDescriptor(a4, a5) : a6;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a9 = Reflect.decorate(a3, a4, a5, a6);
            } else {
                for (var aa = a3.length - 1; aa >= 0; aa--)
                    if (a7 = a3[aa]) {
                        a9 = (a8 < 3 ? a7(a9) : a8 > 3 ? a7(a4, a5, a9) : a7(a4, a5)) || a9;
                    }
            }
            if (a8 > 3 && a9) {
                Object.defineProperty(a4, a5, a9);
            }
            return a9;
        };
        var K = this && this.__metadata || function (a3, a4) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a3, a4);
            }
        };
        var L = this && this.__param || function (a3, a4) {
            return function (a7, a8) {
                a4(a7, a8, a3);
            };
        };
        Object.defineProperty(w, '__esModule', M);
        const P = x(0);
        const Q = x(1);
        const R = x(206);
        const T = x(207);
        const U = x(2);
        const V = x(3);
        const W = x(208);
        const X = x(64);
        const Y = x(25);
        const Z = x(10);
        const a0 = x(11);
        const a1 = x(4);
        let a2 = class extends a0.AbstractNodeTransformer {
            constructor(a3, a4, a5, a6, a7, a8) {
                super(a7, a8);
                this.callsGraphData = [];
                this.callsGraphAnalyzer = a3;
                this.prevailingKindOfVariablesAnalyzer = a4;
                this.obfuscationEventEmitter = a5;
                this.customCodeHelperGroupStorage = a6;
            }
            getVisitor(a3) {
                switch (a3) {
                case Z.TransformationStage.Preparing:
                    const a7 = {
                        leave: (a9, aa) => {
                            if (a1.NodeGuards.isProgramNode(a9)) {
                                this.analyzeNode(a9, aa);
                                this.appendCustomNodesBeforeObfuscation(a9, aa);
                                return this.transformNode(a9, aa);
                            }
                        }
                    };
                    return a7;
                case Z.TransformationStage.Finalizing:
                    const a8 = {
                        leave: (a9, aa) => {
                            if (a1.NodeGuards.isProgramNode(a9)) {
                                this.appendCustomNodesAfterObfuscation(a9, aa);
                            }
                        }
                    };
                    return a8;
                default:
                    return null;
                }
            }
            analyzeNode(a3, a4) {
                this.callsGraphData = this.callsGraphAnalyzer.analyze(a3);
                this.prevailingKindOfVariablesAnalyzer.analyze(a3);
            }
            transformNode(a3, a4) {
                return a3;
            }
            appendCustomNodesBeforeObfuscation(a3, a4) {
                this.customCodeHelperGroupStorage.getStorage().forEach(a8 => {
                    a8.initialize();
                    this.obfuscationEventEmitter.once(a8.getAppendEvent(), a8.appendNodes.bind(a8));
                });
                this.obfuscationEventEmitter.emit(Y.ObfuscationEvent.BeforeObfuscation, a3, this.callsGraphData);
            }
            appendCustomNodesAfterObfuscation(a3, a4) {
                this.obfuscationEventEmitter.emit(Y.ObfuscationEvent.AfterObfuscation, a3, this.callsGraphData);
            }
        };
        a2 = J([
            P.injectable(),
            L(0, P.inject(Q.ServiceIdentifiers.ICallsGraphAnalyzer)),
            L(1, P.inject(Q.ServiceIdentifiers.IPrevailingKindOfVariablesAnalyzer)),
            L(2, P.inject(Q.ServiceIdentifiers.IObfuscationEventEmitter)),
            L(3, P.inject(Q.ServiceIdentifiers.TCustomNodeGroupStorage)),
            L(4, P.inject(Q.ServiceIdentifiers.IRandomGenerator)),
            L(5, P.inject(Q.ServiceIdentifiers.IOptions)),
            K('design:paramtypes', [
                'function' == typeof (B = void 0 !== W.ICallsGraphAnalyzer && W.ICallsGraphAnalyzer) ? B : Object,
                'function' == typeof (D = void 0 !== X.IPrevailingKindOfVariablesAnalyzer && X.IPrevailingKindOfVariablesAnalyzer) ? D : Object,
                'function' == typeof (E = void 0 !== T.IObfuscationEventEmitter && T.IObfuscationEventEmitter) ? E : Object,
                'function' == typeof (F = void 0 !== R.TCustomCodeHelperGroupStorage && R.TCustomCodeHelperGroupStorage) ? F : Object,
                'function' == typeof (G = void 0 !== V.IRandomGenerator && V.IRandomGenerator) ? G : Object,
                'function' == typeof (H = void 0 !== U.IOptions && U.IOptions) ? H : Object
            ])
        ], a2);
        w.CustomCodeHelpersTransformer = a2;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D = this && this.__decorate || function (V, W, X, Y) {
            var Z;
            var a0 = arguments.length;
            var a1 = a0 < 3 ? W : null === Y ? Y = Object.getOwnPropertyDescriptor(W, X) : Y;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a1 = Reflect.decorate(V, W, X, Y);
            } else {
                for (var a2 = V.length - 1; a2 >= 0; a2--)
                    if (Z = V[a2]) {
                        a1 = (a0 < 3 ? Z(a1) : a0 > 3 ? Z(W, X, a1) : Z(W, X)) || a1;
                    }
            }
            if (a0 > 3 && a1) {
                Object.defineProperty(W, X, a1);
            }
            return a1;
        };
        var E = this && this.__metadata || function (V, W) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(V, W);
            }
        };
        var F = this && this.__param || function (V, W) {
            return function (Z, a0) {
                W(Z, a0, V);
            };
        };
        var G = this && this.__importDefault || function (V) {
            if (V && V.__esModule) {
                return V;
            } else {
                return { default: V };
            }
        };
        const H = { value: !0 };
        Object.defineProperty(v, '__esModule', H);
        const J = w(0);
        const K = w(1);
        const L = G(w(210));
        const M = w(2);
        const O = w(3);
        const P = w(10);
        const Q = w(11);
        const R = w(8);
        const S = w(4);
        const T = w(6);
        let U = A = class extends Q.AbstractNodeTransformer {
            constructor(V, W) {
                super(V, W);
                this.evalRootAstHostNodeSet = new Set();
            }
            static extractEvalStringFromCallExpressionArgument(V) {
                if (S.NodeGuards.isLiteralNode(V)) {
                    return A.extractEvalStringFromLiteralNode(V);
                } else {
                    if (S.NodeGuards.isTemplateLiteralNode(V)) {
                        return A.extractEvalStringFromTemplateLiteralNode(V);
                    } else {
                        return null;
                    }
                }
            }
            static extractEvalStringFromLiteralNode(V) {
                if ('string' == typeof V.value) {
                    return V.value;
                } else {
                    return null;
                }
            }
            static extractEvalStringFromTemplateLiteralNode(V) {
                const W = V.quasis;
                if (1 !== W.length || V.expressions.length) {
                    return null;
                } else {
                    return W[0].value.cooked;
                }
            }
            getVisitor(V) {
                switch (V) {
                case P.TransformationStage.Preparing:
                    return Y;
                case P.TransformationStage.Finalizing:
                    if (this.evalRootAstHostNodeSet.size) {
                        return Z;
                    } else {
                        return null;
                    }
                default:
                    return null;
                }
            }
            transformNode(V, W) {
                const a0 = V.arguments[0];
                if (!a0) {
                    return V;
                }
                const a1 = A.extractEvalStringFromCallExpressionArgument(a0);
                if (!a1) {
                    return V;
                }
                let a2;
                try {
                    a2 = T.NodeUtils.convertCodeToStructure(a1);
                } catch (a5) {
                    return V;
                }
                const a3 = R.NodeFactory.functionExpressionNode([], R.NodeFactory.blockStatementNode(a2));
                this.evalRootAstHostNodeSet.add(a3);
                return a3;
            }
            restoreNode(V, W) {
                const Y = V.body.body;
                const Z = T.NodeUtils.convertStructureToCode(Y);
                return R.NodeFactory.callExpressionNode(R.NodeFactory.identifierNode('eval'), [R.NodeFactory.literalNode(L.default(Z))]);
            }
            isEvalRootAstHostNode(V) {
                return S.NodeGuards.isFunctionExpressionNode(V) && this.evalRootAstHostNodeSet.has(V);
            }
        };
        U = A = D([
            J.injectable(),
            F(0, J.inject(K.ServiceIdentifiers.IRandomGenerator)),
            F(1, J.inject(K.ServiceIdentifiers.IOptions)),
            E('design:paramtypes', [
                'function' == typeof (B = void 0 !== O.IRandomGenerator && O.IRandomGenerator) ? B : Object,
                'function' == typeof (C = void 0 !== M.IOptions && M.IOptions) ? C : Object
            ])
        ], U);
        v.EvalCallExpressionTransformer = U;
    },
    function (b, c) {
        b.exports = require('js-string-escape');
    },
    function (j, k, q) {
        'use strict';
        var x;
        var z;
        var A = this && this.__decorate || function (N, O, P, Q) {
            var R;
            var S = arguments.length;
            var T = S < 3 ? O : null === Q ? Q = Object.getOwnPropertyDescriptor(O, P) : Q;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                T = Reflect.decorate(N, O, P, Q);
            } else {
                for (var U = N.length - 1; U >= 0; U--)
                    if (R = N[U]) {
                        T = (S < 3 ? R(T) : S > 3 ? R(O, P, T) : R(O, P)) || T;
                    }
            }
            if (S > 3 && T) {
                Object.defineProperty(O, P, T);
            }
            return T;
        };
        var B = this && this.__metadata || function (N, O) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(N, O);
            }
        };
        var C = this && this.__param || function (N, O) {
            return function (Q, R) {
                O(Q, R, N);
            };
        };
        Object.defineProperty(k, '__esModule', D);
        const E = q(0);
        const F = q(1);
        const G = q(2);
        const H = q(3);
        const I = q(10);
        const J = q(11);
        const K = q(4);
        const L = q(18);
        let M = class extends J.AbstractNodeTransformer {
            constructor(N, O) {
                super(N, O);
            }
            getVisitor(N) {
                switch (N) {
                case I.TransformationStage.Preparing:
                    return P;
                default:
                    return null;
                }
            }
            transformNode(N, O) {
                const R = { ignoredNode: !1 };
                const S = { replacedLiteral: !1 };
                L.NodeMetadata.set(N, R);
                if (K.NodeGuards.isLiteralNode(N)) {
                    L.NodeMetadata.set(N, S);
                }
                return N;
            }
        };
        M = A([
            E.injectable(),
            C(0, E.inject(F.ServiceIdentifiers.IRandomGenerator)),
            C(1, E.inject(F.ServiceIdentifiers.IOptions)),
            B('design:paramtypes', [
                'function' == typeof (x = void 0 !== H.IRandomGenerator && H.IRandomGenerator) ? x : Object,
                'function' == typeof (z = void 0 !== G.IOptions && G.IOptions) ? z : Object
            ])
        ], M);
        k.MetadataTransformer = M;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (T, U, V, W) {
            var Z;
            var a0 = arguments.length;
            var a1 = a0 < 3 ? U : null === W ? W = Object.getOwnPropertyDescriptor(U, V) : W;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a1 = Reflect.decorate(T, U, V, W);
            } else {
                for (var a2 = T.length - 1; a2 >= 0; a2--)
                    if (Z = T[a2]) {
                        a1 = (a0 < 3 ? Z(a1) : a0 > 3 ? Z(U, V, a1) : Z(U, V)) || a1;
                    }
            }
            if (a0 > 3 && a1) {
                Object.defineProperty(U, V, a1);
            }
            return a1;
        };
        var F = this && this.__metadata || function (T, U) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(T, U);
            }
        };
        var G = this && this.__param || function (T, U) {
            return function (X, Y) {
                U(X, Y, T);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const I = w(0);
        const J = w(1);
        const K = w(213);
        const L = w(2);
        const M = w(3);
        const O = w(69);
        const P = w(10);
        const Q = w(11);
        const R = w(18);
        let S = A = class extends Q.AbstractNodeTransformer {
            constructor(T, U, V) {
                super(U, V);
                this.obfuscatingGuards = A.obfuscatingGuardsList.map(T);
            }
            getVisitor(T) {
                switch (T) {
                case P.TransformationStage.Preparing:
                    return V;
                default:
                    return null;
                }
            }
            transformNode(T, U) {
                const V = this.obfuscatingGuards.every(X => X.check(T));
                const W = { ignoredNode: !V };
                R.NodeMetadata.set(T, W);
                return T;
            }
        };
        S.obfuscatingGuardsList = [
            O.ObfuscatingGuard.BlackListObfuscatingGuard,
            O.ObfuscatingGuard.ConditionalCommentObfuscatingGuard,
            O.ObfuscatingGuard.ReservedStringObfuscatingGuard
        ];
        S = A = E([
            I.injectable(),
            G(0, I.inject(J.ServiceIdentifiers.Factory__INodeGuard)),
            G(1, I.inject(J.ServiceIdentifiers.IRandomGenerator)),
            G(2, I.inject(J.ServiceIdentifiers.IOptions)),
            F('design:paramtypes', [
                'function' == typeof (B = void 0 !== K.TObfuscatingGuardFactory && K.TObfuscatingGuardFactory) ? B : Object,
                'function' == typeof (C = void 0 !== M.IRandomGenerator && M.IRandomGenerator) ? C : Object,
                'function' == typeof (D = void 0 !== L.IOptions && L.IOptions) ? D : Object
            ])
        ], S);
        v.ObfuscatingGuardsTransformer = S;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (j, k, q) {
        'use strict';
        var x;
        var y;
        var z = this && this.__decorate || function (L, M, N, O) {
            var P;
            var Q = arguments.length;
            var R = Q < 3 ? M : null === O ? O = Object.getOwnPropertyDescriptor(M, N) : O;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                R = Reflect.decorate(L, M, N, O);
            } else {
                for (var S = L.length - 1; S >= 0; S--)
                    if (P = L[S]) {
                        R = (Q < 3 ? P(R) : Q > 3 ? P(M, N, R) : P(M, N)) || R;
                    }
            }
            if (Q > 3 && R) {
                Object.defineProperty(M, N, R);
            }
            return R;
        };
        var A = this && this.__metadata || function (L, M) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(L, M);
            }
        };
        var B = this && this.__param || function (L, M) {
            return function (P, Q) {
                M(P, Q, L);
            };
        };
        Object.defineProperty(k, '__esModule', C);
        const D = q(0);
        const E = q(1);
        const F = q(2);
        const G = q(3);
        const H = q(10);
        const I = q(11);
        const J = q(6);
        let K = class extends I.AbstractNodeTransformer {
            constructor(L, M) {
                super(L, M);
            }
            getVisitor(L) {
                switch (L) {
                case H.TransformationStage.Preparing:
                    return O;
                default:
                    return null;
                }
            }
            transformNode(L, M) {
                return J.NodeUtils.parentizeNode(L, M);
            }
        };
        K = z([
            D.injectable(),
            B(0, D.inject(E.ServiceIdentifiers.IRandomGenerator)),
            B(1, D.inject(E.ServiceIdentifiers.IOptions)),
            A('design:paramtypes', [
                'function' == typeof (x = void 0 !== G.IRandomGenerator && G.IRandomGenerator) ? x : Object,
                'function' == typeof (y = void 0 !== F.IOptions && F.IOptions) ? y : Object
            ])
        ], K);
        k.ParentificationTransformer = K;
    },
    function (g, h, j) {
        'use strict';
        var p;
        var q = this && this.__decorate || function (D, E, F, G) {
            var J;
            var K = arguments.length;
            var L = K < 3 ? E : null === G ? G = Object.getOwnPropertyDescriptor(E, F) : G;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                L = Reflect.decorate(D, E, F, G);
            } else {
                for (var M = D.length - 1; M >= 0; M--)
                    if (J = D[M]) {
                        L = (K < 3 ? J(L) : K > 3 ? J(E, F, L) : J(E, F)) || L;
                    }
            }
            if (K > 3 && L) {
                Object.defineProperty(E, F, L);
            }
            return L;
        };
        var v = this && this.__metadata || function (D, E) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(D, E);
            }
        };
        var w = this && this.__param || function (D, E) {
            return function (F, G) {
                E(F, G, D);
            };
        };
        const x = { value: !0 };
        Object.defineProperty(h, '__esModule', x);
        const y = j(0);
        const z = j(2);
        const A = j(1);
        const B = j(4);
        let C = class {
            constructor(D) {
                this.options = D;
            }
            check(D) {
                return !this.options.reservedStrings.length || !B.NodeGuards.isLiteralNode(D) || 'string' != typeof D.value || !this.isReservedString(D.value);
            }
            isReservedString(D) {
                return this.options.reservedStrings.some(H => null !== new RegExp(H, 'g').exec(D));
            }
        };
        C = q([
            y.injectable(),
            w(0, y.inject(A.ServiceIdentifiers.IOptions)),
            v('design:paramtypes', ['function' == typeof (p = void 0 !== z.IOptions && z.IOptions) ? p : Object])
        ], C);
        h.ReservedStringObfuscatingGuard = C;
    },
    function (q, v, w) {
        'use strict';
        var A;
        var B;
        var C;
        var D;
        var E = this && this.__decorate || function (V, W, X, Y) {
            var a1;
            var a2 = arguments.length;
            var a3 = a2 < 3 ? W : null === Y ? Y = Object.getOwnPropertyDescriptor(W, X) : Y;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a3 = Reflect.decorate(V, W, X, Y);
            } else {
                for (var a4 = V.length - 1; a4 >= 0; a4--)
                    if (a1 = V[a4]) {
                        a3 = (a2 < 3 ? a1(a3) : a2 > 3 ? a1(W, X, a3) : a1(W, X)) || a3;
                    }
            }
            if (a2 > 3 && a3) {
                Object.defineProperty(W, X, a3);
            }
            return a3;
        };
        var F = this && this.__metadata || function (V, W) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(V, W);
            }
        };
        var G = this && this.__param || function (V, W) {
            return function (a0, a1) {
                W(a0, a1, V);
            };
        };
        Object.defineProperty(v, '__esModule', H);
        const J = w(0);
        const K = w(51);
        const L = w(2);
        const M = w(3);
        const O = w(67);
        const P = w(1);
        const Q = w(10);
        const R = w(11);
        const S = w(39);
        const T = w(4);
        let U = class extends R.AbstractNodeTransformer {
            constructor(V, W, X, Y) {
                super(W, X);
                this.identifierObfuscatingReplacer = V(S.IdentifierObfuscatingReplacer.BaseIdentifierObfuscatingReplacer);
                this.scopeIdentifiersTraverser = Y;
            }
            getVisitor(V) {
                switch (V) {
                case Q.TransformationStage.Preparing:
                case Q.TransformationStage.Converting:
                case Q.TransformationStage.Obfuscating:
                    return X;
                default:
                    return null;
                }
            }
            transformNode(V, W) {
                this.scopeIdentifiersTraverser.traverse(V, W, a0 => {
                    const {
                        isGlobalDeclaration: a1,
                        variable: a2,
                        variableScope: a3
                    } = a0;
                    this.preserveScopeVariableIdentifiers(a2, a3, a1);
                });
                return V;
            }
            preserveScopeVariableIdentifiers(V, W, X) {
                for (const Z of V.identifiers)
                    if (X) {
                        this.preserveIdentifierNameForRootLexicalScope(Z);
                    } else {
                        this.preserveIdentifierNameForLexicalScope(Z, W);
                    }
            }
            preserveIdentifierNameForRootLexicalScope(V) {
                this.identifierObfuscatingReplacer.preserveName(V);
            }
            preserveIdentifierNameForLexicalScope(V, W) {
                const X = T.NodeGuards.isNodeWithLexicalScope(W.block) ? W.block : null;
                if (X) {
                    this.identifierObfuscatingReplacer.preserveNameForLexicalScope(V, X);
                }
            }
        };
        U = E([
            J.injectable(),
            G(0, J.inject(P.ServiceIdentifiers.Factory__IIdentifierObfuscatingReplacer)),
            G(1, J.inject(P.ServiceIdentifiers.IRandomGenerator)),
            G(2, J.inject(P.ServiceIdentifiers.IOptions)),
            G(3, J.inject(P.ServiceIdentifiers.IScopeIdentifiersTraverser)),
            F('design:paramtypes', [
                'function' == typeof (A = void 0 !== K.TIdentifierObfuscatingReplacerFactory && K.TIdentifierObfuscatingReplacerFactory) ? A : Object,
                'function' == typeof (B = void 0 !== M.IRandomGenerator && M.IRandomGenerator) ? B : Object,
                'function' == typeof (C = void 0 !== L.IOptions && L.IOptions) ? C : Object,
                'function' == typeof (D = void 0 !== O.IScopeIdentifiersTraverser && O.IScopeIdentifiersTraverser) ? D : Object
            ])
        ], U);
        v.VariablePreserveTransformer = U;
    },
    function (d, f, g) {
        'use strict';
        Object.defineProperty(f, '__esModule', k);
        const l = g(0);
        const m = g(1);
        const p = g(218);
        const q = g(219);
        const u = g(221);
        f.storagesModule = new l.ContainerModule(v => {
            v(m.ServiceIdentifiers.TCustomNodeGroupStorage).to(q.CustomCodeHelperGroupStorage).inSingletonScope();
            v(m.ServiceIdentifiers.IStringArrayStorage).to(u.StringArrayStorage).inSingletonScope();
            v(m.ServiceIdentifiers.Newable__TControlFlowStorage).toConstructor(p.ControlFlowStorage);
            v(m.ServiceIdentifiers.Factory__TControlFlowStorage).toFactory(z => () => {
                const A = new (z.container.get(m.ServiceIdentifiers.Newable__TControlFlowStorage))(z.container.get(m.ServiceIdentifiers.IRandomGenerator), z.container.get(m.ServiceIdentifiers.IOptions));
                A.initialize();
                return A;
            });
        });
    },
    function (h, j, k) {
        'use strict';
        var v;
        var w;
        var x = this && this.__decorate || function (H, I, J, K) {
            var L;
            var M = arguments.length;
            var N = M < 3 ? I : null === K ? K = Object.getOwnPropertyDescriptor(I, J) : K;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                N = Reflect.decorate(H, I, J, K);
            } else {
                for (var O = H.length - 1; O >= 0; O--)
                    if (L = H[O]) {
                        N = (M < 3 ? L(N) : M > 3 ? L(I, J, N) : L(I, J)) || N;
                    }
            }
            if (M > 3 && N) {
                Object.defineProperty(I, J, N);
            }
            return N;
        };
        var y = this && this.__metadata || function (H, I) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(H, I);
            }
        };
        var z = this && this.__param || function (H, I) {
            return function (K, L) {
                I(K, L, H);
            };
        };
        Object.defineProperty(j, '__esModule', A);
        const B = k(0);
        const C = k(1);
        const D = k(2);
        const E = k(3);
        const F = k(52);
        let G = class extends F.MapStorage {
            constructor(H, I) {
                super(H, I);
            }
        };
        G = x([
            B.injectable(),
            z(0, B.inject(C.ServiceIdentifiers.IRandomGenerator)),
            z(1, B.inject(C.ServiceIdentifiers.IOptions)),
            y('design:paramtypes', [
                'function' == typeof (v = void 0 !== E.IRandomGenerator && E.IRandomGenerator) ? v : Object,
                'function' == typeof (w = void 0 !== D.IOptions && D.IOptions) ? w : Object
            ])
        ], G);
        j.ControlFlowStorage = G;
    },
    function (k, q, v) {
        'use strict';
        var z;
        var A;
        var B;
        var C;
        var D = this && this.__decorate || function (P, Q, R, S) {
            var V;
            var W = arguments.length;
            var X = W < 3 ? Q : null === S ? S = Object.getOwnPropertyDescriptor(Q, R) : S;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                X = Reflect.decorate(P, Q, R, S);
            } else {
                for (var Y = P.length - 1; Y >= 0; Y--)
                    if (V = P[Y]) {
                        X = (W < 3 ? V(X) : W > 3 ? V(Q, R, X) : V(Q, R)) || X;
                    }
            }
            if (W > 3 && X) {
                Object.defineProperty(Q, R, X);
            }
            return X;
        };
        var E = this && this.__metadata || function (P, Q) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(P, Q);
            }
        };
        var F = this && this.__param || function (P, Q) {
            return function (U, V) {
                Q(U, V, P);
            };
        };
        Object.defineProperty(q, '__esModule', G);
        const H = v(0);
        const I = v(1);
        const J = v(220);
        const K = v(2);
        const L = v(3);
        const M = v(63);
        const N = v(52);
        let O = z = class extends N.MapStorage {
            constructor(P, Q, R) {
                super(Q, R);
                this.customCodeHelperGroupFactory = P;
            }
            initialize() {
                super.initialize();
                z.customCodeHelperGroupsList.forEach(S => {
                    const T = this.customCodeHelperGroupFactory(S);
                    this.storage.set(S, T);
                });
            }
        };
        O.customCodeHelperGroupsList = [
            M.CustomCodeHelperGroup.ConsoleOutput,
            M.CustomCodeHelperGroup.DebugProtection,
            M.CustomCodeHelperGroup.DomainLock,
            M.CustomCodeHelperGroup.SelfDefending,
            M.CustomCodeHelperGroup.StringArray
        ];
        D([
            H.postConstruct(),
            E('design:type', Function),
            E('design:paramtypes', []),
            E('design:returntype', void 0)
        ], O.prototype, 'initialize', null);
        O = z = D([
            H.injectable(),
            F(0, H.inject(I.ServiceIdentifiers.Factory__ICustomCodeHelperGroup)),
            F(1, H.inject(I.ServiceIdentifiers.IRandomGenerator)),
            F(2, H.inject(I.ServiceIdentifiers.IOptions)),
            E('design:paramtypes', [
                'function' == typeof (A = void 0 !== J.TCustomCodeHelperGroupFactory && J.TCustomCodeHelperGroupFactory) ? A : Object,
                'function' == typeof (B = void 0 !== L.IRandomGenerator && L.IRandomGenerator) ? B : Object,
                'function' == typeof (C = void 0 !== K.IOptions && K.IOptions) ? C : Object
            ])
        ], O);
        q.CustomCodeHelperGroupStorage = O;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (q, w, x) {
        'use strict';
        var B;
        var C;
        var D;
        var E;
        var F;
        var G;
        var H;
        var J = this && this.__decorate || function (a1, a2, a3, a4) {
            var a7;
            var a8 = arguments.length;
            var a9 = a8 < 3 ? a2 : null === a4 ? a4 = Object.getOwnPropertyDescriptor(a2, a3) : a4;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                a9 = Reflect.decorate(a1, a2, a3, a4);
            } else {
                for (var aa = a1.length - 1; aa >= 0; aa--)
                    if (a7 = a1[aa]) {
                        a9 = (a8 < 3 ? a7(a9) : a8 > 3 ? a7(a2, a3, a9) : a7(a2, a3)) || a9;
                    }
            }
            if (a8 > 3 && a9) {
                Object.defineProperty(a2, a3, a9);
            }
            return a9;
        };
        var K = this && this.__metadata || function (a1, a2) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(a1, a2);
            }
        };
        var L = this && this.__param || function (a1, a2) {
            return function (a6, a7) {
                a2(a6, a7, a1);
            };
        };
        const M = { value: !0 };
        Object.defineProperty(w, '__esModule', M);
        const P = x(0);
        const Q = x(1);
        const R = x(5);
        const T = x(36);
        const U = x(49);
        const V = x(32);
        const W = x(2);
        const X = x(3);
        const Y = x(28);
        const Z = x(52);
        let a0 = B = class extends Z.MapStorage {
            constructor(a1, a2, a3, a4, a5, a6) {
                super(a3, a4);
                this.rc4EncodedValuesSourcesCache = new Map();
                this.rotationAmount = 0;
                this.identifierNamesGenerator = a1(a4);
                this.arrayUtils = a2;
                this.cryptUtils = a5;
                this.escapeSequenceEncoder = a6;
                this.rc4Keys = this.randomGenerator.getRandomGenerator().n(() => this.randomGenerator.getRandomGenerator().string({ length: B.rc4KeyLength }), B.rc4KeysCount);
            }
            initialize() {
                super.initialize();
                this.rotationAmount = this.options.rotateStringArray ? this.randomGenerator.getRandomInteger(B.minimumRotationAmount, B.maximumRotationAmount) : 0;
            }
            get(a1) {
                return this.getOrSetIfDoesNotExist(a1);
            }
            getRotationAmount() {
                return this.rotationAmount;
            }
            getStorageName() {
                return this.getStorageId();
            }
            getStorageId() {
                this.stringArrayStorageName || (this.stringArrayStorageName = this.identifierNamesGenerator.generateWithPrefix(B.stringArrayNameLength));
                return this.stringArrayStorageName;
            }
            getStorageCallsWrapperName() {
                this.stringArrayStorageCallsWrapperName || (this.stringArrayStorageCallsWrapperName = this.identifierNamesGenerator.generateWithPrefix(B.stringArrayNameLength));
                return this.stringArrayStorageCallsWrapperName;
            }
            rotateStorage() {
                if (this.getLength()) {
                    this.storage = new Map(this.arrayUtils.rotate(Array.from(this.storage.entries()), this.rotationAmount));
                }
            }
            shuffleStorage() {
                this.storage = new Map(this.arrayUtils.shuffle(Array.from(this.storage.entries())).map(([a2, a3], a4) => (a3.index = a4, [
                    a2,
                    a3
                ])).sort(([, a2], [, a3]) => a2.index - a3.index));
            }
            toString() {
                return Array.from(this.storage.values()).map(a3 => '\'' + this.escapeSequenceEncoder.encode(a3.encodedValue, this.options.unicodeEscapeSequence) + '\'').toString();
            }
            getOrSetIfDoesNotExist(a1) {
                const {
                    encodedValue: a2,
                    decodeKey: a3
                } = this.getEncodedValue(a1);
                const a4 = this.storage.get(a2);
                if (a4) {
                    return a4;
                }
                const a6 = {
                    encodedValue: a2,
                    decodeKey: a3
                };
                this.storage.set(a2, a6);
                return a6;
            }
            getEncodedValue(a1) {
                var a4;
                switch (this.options.stringArrayEncoding) {
                case Y.StringArrayEncoding.Rc4: {
                        const a7 = this.randomGenerator.getRandomGenerator().pickone(this.rc4Keys);
                        const a8 = this.cryptUtils.btoa(this.cryptUtils.rc4(a1, a7));
                        const a9 = null !== (a4 = this.rc4EncodedValuesSourcesCache.get(a8)) && void 0 !== a4 ? a4 : [];
                        let aa = a9.length;
                        if (!aa || !a9.includes(a1)) {
                            a9.push(a1);
                            aa++;
                        }
                        this.rc4EncodedValuesSourcesCache.set(a8, a9);
                        return aa > 1 ? this.getEncodedValue(a1) : {
                            encodedValue: a8,
                            decodeKey: a7
                        };
                    }
                case Y.StringArrayEncoding.Base64: {
                        const ad = null;
                        const ae = {
                            encodedValue: this.cryptUtils.btoa(a1),
                            decodeKey: ad
                        };
                        return ae;
                    }
                default:
                    return a6;
                }
            }
        };
        a0.minimumRotationAmount = 100;
        a0.maximumRotationAmount = 500;
        a0.rc4KeyLength = 4;
        a0.rc4KeysCount = 50;
        a0.stringArrayNameLength = 7;
        J([
            P.postConstruct(),
            K('design:type', Function),
            K('design:paramtypes', []),
            K('design:returntype', void 0)
        ], a0.prototype, 'initialize', null);
        a0 = B = J([
            P.injectable(),
            L(0, P.inject(Q.ServiceIdentifiers.Factory__IIdentifierNamesGenerator)),
            L(1, P.inject(Q.ServiceIdentifiers.IArrayUtils)),
            L(2, P.inject(Q.ServiceIdentifiers.IRandomGenerator)),
            L(3, P.inject(Q.ServiceIdentifiers.IOptions)),
            L(4, P.inject(Q.ServiceIdentifiers.ICryptUtils)),
            L(5, P.inject(Q.ServiceIdentifiers.IEscapeSequenceEncoder)),
            K('design:paramtypes', [
                'function' == typeof (C = void 0 !== R.TIdentifierNamesGeneratorFactory && R.TIdentifierNamesGeneratorFactory) ? C : Object,
                'function' == typeof (D = void 0 !== T.IArrayUtils && T.IArrayUtils) ? D : Object,
                'function' == typeof (E = void 0 !== X.IRandomGenerator && X.IRandomGenerator) ? E : Object,
                'function' == typeof (F = void 0 !== W.IOptions && W.IOptions) ? F : Object,
                'function' == typeof (G = void 0 !== U.ICryptUtils && U.ICryptUtils) ? G : Object,
                'function' == typeof (H = void 0 !== V.IEscapeSequenceEncoder && V.IEscapeSequenceEncoder) ? H : Object
            ])
        ], a0);
        w.StringArrayStorage = a0;
    },
    function (g, h, j) {
        'use strict';
        Object.defineProperty(h, '__esModule', p);
        const q = j(0);
        const u = j(1);
        const v = j(223);
        const w = j(224);
        const x = j(228);
        const y = j(229);
        const z = j(230);
        const A = j(71);
        h.utilsModule = new q.ContainerModule(B => {
            B(u.ServiceIdentifiers.IArrayUtils).to(v.ArrayUtils).inSingletonScope();
            B(u.ServiceIdentifiers.IRandomGenerator).to(A.RandomGenerator).inSingletonScope();
            B(u.ServiceIdentifiers.ICryptUtils).to(w.CryptUtils).inSingletonScope();
            B(u.ServiceIdentifiers.IEscapeSequenceEncoder).to(x.EscapeSequenceEncoder).inSingletonScope();
            B(u.ServiceIdentifiers.ILevelledTopologicalSorter).to(y.LevelledTopologicalSorter);
            B(u.ServiceIdentifiers.INodeTransformerNamesGroupsBuilder).to(z.NodeTransformerNamesGroupsBuilder).inSingletonScope();
        });
    },
    function (g, h, j) {
        'use strict';
        var p;
        var q = this && this.__decorate || function (B, C, D, E) {
            var H;
            var I = arguments.length;
            var J = I < 3 ? C : null === E ? E = Object.getOwnPropertyDescriptor(C, D) : E;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                J = Reflect.decorate(B, C, D, E);
            } else {
                for (var K = B.length - 1; K >= 0; K--)
                    if (H = B[K]) {
                        J = (I < 3 ? H(J) : I > 3 ? H(C, D, J) : H(C, D)) || J;
                    }
            }
            if (I > 3 && J) {
                Object.defineProperty(C, D, J);
            }
            return J;
        };
        var u = this && this.__metadata || function (B, C) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(B, C);
            }
        };
        var v = this && this.__param || function (B, C) {
            return function (E, F) {
                C(E, F, B);
            };
        };
        Object.defineProperty(h, '__esModule', w);
        const x = j(0);
        const y = j(1);
        const z = j(3);
        let A = class {
            constructor(B) {
                this.randomGenerator = B;
            }
            createWithRange(B) {
                const C = [];
                for (let D = 0; D < B; D++)
                    C.push(D);
                return C;
            }
            findMostOccurringElement(B) {
                var C;
                if (!B.length) {
                    return null;
                }
                let E = B[0];
                let F = 1;
                for (const G of B) {
                    const I = (null !== (C = D[G]) && void 0 !== C ? C : 0) + 1;
                    if (I > F) {
                        E = G;
                        F = I;
                    }
                    D[G] = I;
                }
                return E;
            }
            rotate(B, C) {
                if (!B.length) {
                    throw new ReferenceError('Cannot rotate empty array.');
                }
                if (C <= 0) {
                    return B;
                }
                const F = B;
                let G;
                for (; C--;)
                    G = F.pop();
                return F;
            }
            shuffle(B) {
                const E = [...B];
                for (let F = E.length; F; F--) {
                    const H = Math.floor(this.randomGenerator.getMathRandom() * F);
                    [E[F - 1], E[H]] = [
                        E[H],
                        E[F - 1]
                    ];
                }
                return E;
            }
        };
        A = q([
            x.injectable(),
            v(0, x.inject(y.ServiceIdentifiers.IRandomGenerator)),
            u('design:paramtypes', ['function' == typeof (p = void 0 !== z.IRandomGenerator && z.IRandomGenerator) ? p : Object])
        ], A);
        h.ArrayUtils = A;
    },
    function (h, j, k) {
        const p = {
            Lhegx: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
            qlzgG: function (F, G) {
                return F ^ G;
            },
            DsRhv: function (F, G) {
                return F % G;
            }
        };
        'use strict';
        var q;
        var v = this && this.__decorate || function (F, G, H, I) {
            var J;
            var K = arguments.length;
            var L = K < 3 ? G : null === I ? I = Object.getOwnPropertyDescriptor(G, H) : I;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                L = Reflect.decorate(F, G, H, I);
            } else {
                for (var M = F.length - 1; M >= 0; M--)
                    if (J = F[M]) {
                        L = (K < 3 ? J(L) : K > 3 ? J(G, H, L) : J(G, H)) || L;
                    }
            }
            if (K > 3 && L) {
                Object.defineProperty(G, H, L);
            }
            return L;
        };
        var w = this && this.__metadata || function (F, G) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(F, G);
            }
        };
        var x = this && this.__param || function (F, G) {
            return function (J, K) {
                G(J, K, F);
            };
        };
        Object.defineProperty(j, '__esModule', y);
        const z = k(0);
        const A = k(1);
        const B = k(3);
        const C = k(71);
        const D = k(26);
        let E = class {
            constructor(F) {
                this.randomGenerator = F;
            }
            btoa(F) {
                let J = '';
                F = encodeURIComponent(F).replace(/%([0-9A-F]{2})/g, (K, L) => String.fromCharCode(parseInt('' + D.Utils.hexadecimalPrefix + L, 16)));
                for (let K; F.charAt(0 | M) || (N = '=', M % 1); J += N.charAt(63 & K >> 8 - M % 1 * 8)) {
                    if (L = F.charCodeAt(M += 0.75), L > 255) {
                        throw new Error('\'btoa\' failed: The string to be encoded contains characters outside of the Latin1 range.');
                    }
                    K = K << 8 | L;
                }
                return J;
            }
            hideString(F, G) {
                const K = {
                    length: G,
                    pool: C.RandomGenerator.randomGeneratorPool
                };
                let L = this.randomGenerator.getRandomGenerator().string(K).replace(new RegExp('[' + (J = F, J.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&')) + ']', 'g'), '');
                var J;
                const M = L.split('');
                this.randomGenerator.getRandomGenerator().shuffle(M);
                L = M.join('');
                return [
                    ((N, O) => {
                        let Q = -1;
                        let R = -1;
                        let S = '';
                        for (; Q < N.length || R < O.length;)
                            if (this.randomGenerator.getMathRandom() < 0.5 && R < O.length) {
                                S += O.charAt(++R);
                            } else {
                                S += N.charAt(++Q);
                            }
                        return S;
                    })(F, L),
                    L
                ];
            }
            rc4(F, G) {
                const K = [];
                let L;
                let M = 0;
                let N = '';
                for (var J = 0; J < 256; J++)
                    K[J] = J;
                for (J = 0; J < 256; J++)
                    M = (M + K[J] + G.charCodeAt(J % G.length)) % 256;
                J = 0;
                M = 0;
                for (let O = 0; O < F.length; O++)
                    M = (M + K[J = (J + 1) % 256]) % 256;
                return N;
            }
        };
        E = v([
            z.injectable(),
            x(0, z.inject(A.ServiceIdentifiers.IRandomGenerator)),
            w('design:paramtypes', ['function' == typeof (q = void 0 !== B.IRandomGenerator && B.IRandomGenerator) ? q : Object])
        ], E);
        j.CryptUtils = E;
    },
    function (b, c) {
        b.exports = require('md5');
    },
    function (b, c) {
        b.exports = require('chance');
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        var i = this && this.__decorate || function (l, m, p, q) {
            var w;
            var x = arguments.length;
            var y = x < 3 ? m : null === q ? q = Object.getOwnPropertyDescriptor(m, p) : q;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                y = Reflect.decorate(l, m, p, q);
            } else {
                for (var z = l.length - 1; z >= 0; z--)
                    if (w = l[z]) {
                        y = (x < 3 ? w(y) : x > 3 ? w(m, p, y) : w(m, p)) || y;
                    }
            }
            if (x > 3 && y) {
                Object.defineProperty(m, p, y);
            }
            return y;
        };
        Object.defineProperty(d, '__esModule', j);
        let k = class {
            constructor() {
                this.stringsCache = new Map();
            }
            encode(l, m) {
                const q = l + '-' + String(m);
                if (this.stringsCache.has(q)) {
                    return this.stringsCache.get(q);
                }
                const u = new RegExp('[\\s\\S]', 'g');
                const v = new RegExp('[\'"\\\\\\s]');
                const w = new RegExp('[\\x00-\\x7F]');
                let x;
                let y;
                const z = l.replace(u, A => m || v.exec(A) ? (w.exec(A) ? (x = '\\x', y = '00') : (x = '\\u', y = '0000'), '' + x + (y + A.charCodeAt(0).toString(16)).slice(-y.length)) : A);
                this.stringsCache.set(q, z);
                this.stringsCache.set(z + '-' + String(m), z);
                return z;
            }
        };
        k = i([f(0).injectable()], k);
        d.EscapeSequenceEncoder = k;
    },
    function (c, d, f) {
        'use strict';
        var i = this && this.__decorate || function (l, m, p, q) {
            var w;
            var x = arguments.length;
            var y = x < 3 ? m : null === q ? q = Object.getOwnPropertyDescriptor(m, p) : q;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                y = Reflect.decorate(l, m, p, q);
            } else {
                for (var z = l.length - 1; z >= 0; z--)
                    if (w = l[z]) {
                        y = (x < 3 ? w(y) : x > 3 ? w(m, p, y) : w(m, p)) || y;
                    }
            }
            if (x > 3 && y) {
                Object.defineProperty(m, p, y);
            }
            return y;
        };
        Object.defineProperty(d, '__esModule', j);
        let k = class {
            constructor() {
                this.graph = new Map();
            }
            add(l, m = null) {
                if (null !== m) {
                    return this.link(l, m);
                } else {
                    return this.register(l);
                }
            }
            sort() {
                const m = Array.from(this.graph.keys());
                const p = [];
                for (const s of m)
                    if (void 0 === q[s]) {
                        this.visit(p, q, s);
                    }
                return p;
            }
            sortByGroups() {
                this.sort();
                const p = [];
                for (; this.hasNodes();) {
                    const s = this.findRootNodes();
                    p.push(s);
                    for (const u of s)
                        this.delete(u);
                }
                return p;
            }
            delete(l) {
                if (this.getPrecedents(l).length) {
                    throw new Error('Unable to remove non-root node: ' + l);
                }
                this.graph.delete(l);
                const p = Array.from(this.graph.values());
                for (const q of p) {
                    for (let u = q.length - 1; u >= 0; u -= 1)
                        if (q[u] === l) {
                            q.splice(u, 1);
                        }
                }
            }
            findRootNodes() {
                const q = Array.from(this.graph.keys());
                const s = [];
                for (const u of q)
                    this.hasPrecedents(u) || s.push(u);
                return s;
            }
            getPrecedents(l) {
                const s = this.graph.get(l);
                if (!s) {
                    throw new Error('Unknown node: ' + l);
                }
                return s;
            }
            hasNodes() {
                return this.graph.size > 0;
            }
            hasPrecedents(l) {
                return this.getPrecedents(l).length > 0;
            }
            link(l, m) {
                this.register(l);
                this.register(m);
                const q = this.graph.get(m);
                if (q && !q.includes(l)) {
                    q.push(l);
                }
                return this;
            }
            register(l) {
                this.graph.has(l) || this.graph.set(l, []);
                return this;
            }
            visit(l, m, p) {
                const u = m[p];
                if ('visiting' === u) {
                    throw new Error('Detected cycle involving node: ' + p);
                }
                if (u) {
                    return;
                }
                m[p] = 'visiting';
                const v = this.getPrecedents(p);
                for (const w of v)
                    this.visit(l, m, w);
                m[p] = 'ok';
                l.push(p);
            }
        };
        k = i([f(0).injectable()], k);
        d.LevelledTopologicalSorter = k;
    },
    function (g, h, j) {
        'use strict';
        var p;
        var q = this && this.__decorate || function (B, C, D, E) {
            var H;
            var I = arguments.length;
            var J = I < 3 ? C : null === E ? E = Object.getOwnPropertyDescriptor(C, D) : E;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                J = Reflect.decorate(B, C, D, E);
            } else {
                for (var K = B.length - 1; K >= 0; K--)
                    if (H = B[K]) {
                        J = (I < 3 ? H(J) : I > 3 ? H(C, D, J) : H(C, D)) || J;
                    }
            }
            if (I > 3 && J) {
                Object.defineProperty(C, D, J);
            }
            return J;
        };
        var u = this && this.__metadata || function (B, C) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(B, C);
            }
        };
        var v = this && this.__param || function (B, C) {
            return function (F, G) {
                C(F, G, B);
            };
        };
        Object.defineProperty(h, '__esModule', w);
        const x = j(0);
        const y = j(1);
        const z = j(231);
        let A = class {
            constructor(B) {
                this.levelledTopologicalSorter = B;
            }
            build(B) {
                const F = Object.keys(B);
                const G = this.buildNodeTransformersRelationEdges(F, B);
                for (const [H, I] of G)
                    this.levelledTopologicalSorter.add(H, I);
                return this.levelledTopologicalSorter.sortByGroups();
            }
            buildNodeTransformersRelationEdges(B, C) {
                const G = [];
                for (const H of B) {
                    const J = C[H].runAfter;
                    if (J && J.length) {
                        for (const K of J) {
                            if (void 0 === C[K]) {
                                G.push([
                                    H,
                                    null
                                ]);
                            } else {
                                G.push([
                                    K,
                                    H
                                ]);
                            }
                        }
                    } else {
                        G.push([
                            H,
                            null
                        ]);
                    }
                }
                return G;
            }
        };
        A = q([
            x.injectable(),
            v(0, x.inject(y.ServiceIdentifiers.ILevelledTopologicalSorter)),
            u('design:paramtypes', ['function' == typeof (p = void 0 !== z.ILevelledTopologicalSorter && z.ILevelledTopologicalSorter) ? p : Object])
        ], A);
        h.NodeTransformerNamesGroupsBuilder = A;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (z, A, B) {
        'use strict';
        var G;
        var H;
        var J;
        var K;
        var L;
        var M;
        var P = this && this.__decorate || function (ae, af, ag, ah) {
            var ai;
            var aj = arguments.length;
            var ak = aj < 3 ? af : null === ah ? ah = Object.getOwnPropertyDescriptor(af, ag) : ah;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                ak = Reflect.decorate(ae, af, ag, ah);
            } else {
                for (var al = ae.length - 1; al >= 0; al--)
                    if (ai = ae[al]) {
                        ak = (aj < 3 ? ai(ak) : aj > 3 ? ai(af, ag, ak) : ai(af, ag)) || ak;
                    }
            }
            if (aj > 3 && ak) {
                Object.defineProperty(af, ag, ak);
            }
            return ak;
        };
        var Q = this && this.__metadata || function (ae, af) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(ae, af);
            }
        };
        var T = this && this.__param || function (ae, af) {
            return function (ai, aj) {
                af(ai, aj, ae);
            };
        };
        var U = this && this.__importStar || function (ae) {
            if (ae && ae.__esModule) {
                return ae;
            }
            if (null != ae) {
                for (var ag in ae)
                    if (Object.hasOwnProperty.call(ae, ag)) {
                        af[ag] = ae[ag];
                    }
            }
            return af;
        };
        Object.defineProperty(A, '__esModule', V);
        const W = B(0);
        const X = B(1);
        const Y = U(B(47));
        const Z = B(233);
        const a0 = B(234);
        const a1 = B(2);
        const a2 = B(3);
        const a3 = B(59);
        const a4 = B(235);
        const a5 = B(24);
        const a6 = B(10);
        const a7 = B(44);
        const a8 = B(57);
        const a9 = B(4);
        const aa = B(26);
        let ab = G = class {
            constructor(ae, af, ag, ah, ai) {
                this.transformersRunner = ae;
                this.randomGenerator = af;
                this.obfuscatedCodeFactory = ag;
                this.logger = ah;
                this.options = ai;
            }
            obfuscate(ae) {
                const af = Date.now();
                this.logger.info(a4.LoggingMessage.Version, aa.Utils.buildVersionMessage('0.25.0', 1582395240276));
                this.logger.info(a4.LoggingMessage.ObfuscationStarted);
                this.logger.info(a4.LoggingMessage.RandomGeneratorSeed, this.randomGenerator.getInputSeed());
                const ag = this.parseCode(ae);
                const ah = this.transformAstTree(ag);
                const ai = this.generateCode(ae, ah);
                const aj = (Date.now() - af) / 1000;
                this.logger.success(a4.LoggingMessage.ObfuscationCompleted, aj);
                return this.getObfuscatedCode(ai);
            }
            parseCode(ae) {
                return a8.ASTParserFacade.parse(ae, G.parseOptions);
            }
            transformAstTree(ae) {
                ae = this.runTransformationStage(ae, a6.TransformationStage.Initializing);
                return !a9.NodeGuards.isProgramNode(ae) || ae.body.length || ae.leadingComments || ae.trailingComments ? (ae = this.runTransformationStage(ae, a6.TransformationStage.Preparing), this.options.deadCodeInjection && (ae = this.runTransformationStage(ae, a6.TransformationStage.DeadCodeInjection)), this.options.controlFlowFlattening && (ae = this.runTransformationStage(ae, a6.TransformationStage.ControlFlowFlattening)), ae = this.runTransformationStage(ae, a6.TransformationStage.Converting), ae = this.runTransformationStage(ae, a6.TransformationStage.Obfuscating), ae = this.runTransformationStage(ae, a6.TransformationStage.Finalizing)) : (this.logger.warn(a4.LoggingMessage.EmptySourceCode), ae);
            }
            generateCode(ae, af) {
                const ah = Object.assign({}, G.escodegenParams);
                if (this.options.sourceMap) {
                    ah.sourceMap = this.options.inputFileName || 'sourceMap';
                    ah.sourceContent = ae;
                }
                const ai = { compact: this.options.compact };
                const aj = { format: ai };
                const ak = Y.generate(af, Object.assign(Object.assign({}, ah), aj));
                ak.map = ak.map ? ak.map.toString() : '';
                return ak;
            }
            getObfuscatedCode(ae) {
                return this.obfuscatedCodeFactory(ae.code, ae.map);
            }
            runTransformationStage(ae, af) {
                this.logger.info(a4.LoggingMessage.TransformationStage, af);
                return this.transformersRunner.transform(ae, G.transformersList, af);
            }
        };
        const ac = {
            ecmaVersion: a7.ecmaVersion,
            allowHashBang: !0,
            allowImportExportEverywhere: !0,
            allowReturnOutsideFunction: !0,
            locations: !0,
            ranges: !0
        };
        const ad = {
            comment: !0,
            verbatim: 'x-verbatim-property',
            sourceMapWithCode: !0
        };
        ab.parseOptions = ac;
        ab.escodegenParams = ad;
        ab.transformersList = [
            a5.NodeTransformer.BlockStatementControlFlowTransformer,
            a5.NodeTransformer.CommentsTransformer,
            a5.NodeTransformer.CustomCodeHelpersTransformer,
            a5.NodeTransformer.DeadCodeInjectionTransformer,
            a5.NodeTransformer.EvalCallExpressionTransformer,
            a5.NodeTransformer.FunctionControlFlowTransformer,
            a5.NodeTransformer.LabeledStatementTransformer,
            a5.NodeTransformer.LiteralTransformer,
            a5.NodeTransformer.MemberExpressionTransformer,
            a5.NodeTransformer.MetadataTransformer,
            a5.NodeTransformer.MethodDefinitionTransformer,
            a5.NodeTransformer.ObfuscatingGuardsTransformer,
            a5.NodeTransformer.ObjectExpressionKeysTransformer,
            a5.NodeTransformer.ObjectExpressionTransformer,
            a5.NodeTransformer.ParentificationTransformer,
            a5.NodeTransformer.ScopeIdentifiersTransformer,
            a5.NodeTransformer.SplitStringTransformer,
            a5.NodeTransformer.TemplateLiteralTransformer,
            a5.NodeTransformer.VariablePreserveTransformer
        ];
        ab = G = P([
            W.injectable(),
            T(0, W.inject(X.ServiceIdentifiers.ITransformersRunner)),
            T(1, W.inject(X.ServiceIdentifiers.IRandomGenerator)),
            T(2, W.inject(X.ServiceIdentifiers.Factory__IObfuscatedCode)),
            T(3, W.inject(X.ServiceIdentifiers.ILogger)),
            T(4, W.inject(X.ServiceIdentifiers.IOptions)),
            Q('design:paramtypes', [
                'function' == typeof (H = void 0 !== a3.ITransformersRunner && a3.ITransformersRunner) ? H : Object,
                'function' == typeof (J = void 0 !== a2.IRandomGenerator && a2.IRandomGenerator) ? J : Object,
                'function' == typeof (K = void 0 !== Z.TObfuscatedCodeFactory && Z.TObfuscatedCodeFactory) ? K : Object,
                'function' == typeof (L = void 0 !== a0.ILogger && a0.ILogger) ? L : Object,
                'function' == typeof (M = void 0 !== a1.IOptions && a1.IOptions) ? M : Object
            ])
        ], ab);
        A.JavaScriptObfuscator = ab;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.EmptySourceCode = 'Empty source code. Obfuscation canceled...';
            j.ObfuscationCompleted = 'Obfuscation completed. Total time: %s sec.';
            j.ObfuscationStarted = 'Obfuscation started...';
            j.RandomGeneratorSeed = 'Random generator seed: %s...';
            j.TransformationStage = 'Transformation stage: %s...';
            j.Version = 'Version: %s';
        }(d.LoggingMessage || (d.LoggingMessage = {})));
    },
    function (d, f, g) {
        'use strict';
        var k = this && this.__decorate || function (v, w, x, y) {
            var B;
            var C = arguments.length;
            var D = C < 3 ? w : null === y ? y = Object.getOwnPropertyDescriptor(w, x) : y;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                D = Reflect.decorate(v, w, x, y);
            } else {
                for (var E = v.length - 1; E >= 0; E--)
                    if (B = v[E]) {
                        D = (C < 3 ? B(D) : C > 3 ? B(w, x, D) : B(w, x)) || D;
                    }
            }
            if (C > 3 && D) {
                Object.defineProperty(w, x, D);
            }
            return D;
        };
        var l = this && this.__importDefault || function (v) {
            if (v && v.__esModule) {
                return v;
            } else {
                return { default: v };
            }
        };
        Object.defineProperty(f, '__esModule', m);
        const p = g(0);
        const q = l(g(237));
        p.decorate(p.injectable(), q.default);
        let u = class extends q.default {
        };
        u = k([p.injectable()], u);
        f.ObfuscationEventEmitter = u;
    },
    function (b, c) {
        b.exports = require('eventemitter3');
    },
    function (h, j, k) {
        'use strict';
        var w;
        var x;
        var y = this && this.__decorate || function (J, K, L, M) {
            var N;
            var O = arguments.length;
            var P = O < 3 ? K : null === M ? M = Object.getOwnPropertyDescriptor(K, L) : M;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                P = Reflect.decorate(J, K, L, M);
            } else {
                for (var Q = J.length - 1; Q >= 0; Q--)
                    if (N = J[Q]) {
                        P = (O < 3 ? N(P) : O > 3 ? N(K, L, P) : N(K, L)) || P;
                    }
            }
            if (O > 3 && P) {
                Object.defineProperty(K, L, P);
            }
            return P;
        };
        var z = this && this.__metadata || function (J, K) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(J, K);
            }
        };
        var A = this && this.__param || function (J, K) {
            return function (O, P) {
                K(O, P, J);
            };
        };
        Object.defineProperty(j, '__esModule', B);
        const C = k(0);
        const D = k(1);
        const E = k(49);
        const F = k(7);
        const G = k(34);
        const H = k(2);
        let I = class {
            constructor(J, K) {
                this.cryptUtils = J;
                this.options = K;
            }
            initialize(J, K) {
                this.obfuscatedCode = J;
                this.sourceMap = K;
            }
            getObfuscatedCode() {
                return this.correctObfuscatedCode();
            }
            getSourceMap() {
                return this.sourceMap;
            }
            toString() {
                return this.obfuscatedCode;
            }
            correctObfuscatedCode() {
                if (!this.sourceMap) {
                    return this.obfuscatedCode;
                }
                const K = this.options.sourceMapBaseUrl + this.options.sourceMapFileName;
                let L = '//# sourceMappingURL=';
                switch (this.options.sourceMapMode) {
                case G.SourceMapMode.Inline:
                    L += 'data:application/json;base64,' + this.cryptUtils.btoa(this.sourceMap);
                    break;
                case G.SourceMapMode.Separate:
                default:
                    if (!K) {
                        return this.obfuscatedCode;
                    }
                    L += K;
                }
                return this.obfuscatedCode + '\n' + L;
            }
        };
        y([
            F.initializable(),
            z('design:type', String)
        ], I.prototype, 'obfuscatedCode', void 0);
        y([
            F.initializable(),
            z('design:type', String)
        ], I.prototype, 'sourceMap', void 0);
        I = y([
            C.injectable(),
            A(0, C.inject(D.ServiceIdentifiers.ICryptUtils)),
            A(1, C.inject(D.ServiceIdentifiers.IOptions)),
            z('design:paramtypes', [
                'function' == typeof (w = void 0 !== E.ICryptUtils && E.ICryptUtils) ? w : Object,
                'function' == typeof (x = void 0 !== H.IOptions && H.IOptions) ? x : Object
            ])
        ], I);
        j.ObfuscatedCode = I;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        d.SourceCode = class {
            constructor(j, k) {
                this.sourceCode = j;
                this.sourceMap = k;
            }
            getSourceCode() {
                return this.sourceCode;
            }
            getSourceMap() {
                return this.sourceMap;
            }
            toString() {
                return this.sourceCode;
            }
        };
    },
    function (k, q, v) {
        'use strict';
        var z;
        var A;
        var B = this && this.__decorate || function (P, Q, R, S) {
            var T;
            var U = arguments.length;
            var V = U < 3 ? Q : null === S ? S = Object.getOwnPropertyDescriptor(Q, R) : S;
            if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) {
                V = Reflect.decorate(P, Q, R, S);
            } else {
                for (var W = P.length - 1; W >= 0; W--)
                    if (T = P[W]) {
                        V = (U < 3 ? T(V) : U > 3 ? T(Q, R, V) : T(Q, R)) || V;
                    }
            }
            if (U > 3 && V) {
                Object.defineProperty(Q, R, V);
            }
            return V;
        };
        var C = this && this.__metadata || function (P, Q) {
            if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) {
                return Reflect.metadata(P, Q);
            }
        };
        var D = this && this.__param || function (P, Q) {
            return function (U, V) {
                Q(U, V, P);
            };
        };
        var E = this && this.__importStar || function (P) {
            if (P && P.__esModule) {
                return P;
            }
            if (null != P) {
                for (var T in P)
                    if (Object.hasOwnProperty.call(P, T)) {
                        S[T] = P[T];
                    }
            }
            return S;
        };
        Object.defineProperty(q, '__esModule', F);
        const G = v(0);
        const H = v(1);
        const I = E(v(12));
        const J = v(241);
        const K = v(242);
        const L = v(243);
        const M = v(4);
        const N = v(18);
        let O = class {
            constructor(P, Q) {
                this.cachedNodeTransformersData = new Map();
                this.nodeTransformerFactory = P;
                this.nodeTransformerNamesGroupsBuilder = Q;
            }
            transform(P, Q, R) {
                if (!Q.length) {
                    return P;
                }
                let V;
                let W;
                if (this.cachedNodeTransformersData.has(Q)) {
                    [V, W] = this.cachedNodeTransformersData.get(Q);
                } else {
                    V = this.buildNormalizedNodeTransformers(Q);
                    W = this.nodeTransformerNamesGroupsBuilder.build(V);
                    this.cachedNodeTransformersData.set(Q, [
                        V,
                        W
                    ]);
                }
                for (const X of W) {
                    const Z = [];
                    const a0 = [];
                    for (const a1 of X) {
                        const a2 = V[a1].getVisitor(R);
                        if (a2) {
                            if (a2.enter) {
                                Z.push({ enter: a2.enter });
                            }
                            if (a2.leave) {
                                a0.push({ leave: a2.leave });
                            }
                        }
                    }
                    if (Z.length || a0.length) {
                        I.replace(P, {
                            enter: this.mergeVisitorsForDirection(Z, L.VisitorDirection.Enter),
                            leave: this.mergeVisitorsForDirection(a0, L.VisitorDirection.Leave)
                        });
                    }
                }
                return P;
            }
            buildNormalizedNodeTransformers(P) {
                return P.reduce((Q, R) => Object.assign(Object.assign({}, Q), { [R]: this.nodeTransformerFactory(R) }), {});
            }
            mergeVisitorsForDirection(P, Q) {
                const R = P.length;
                if (R) {
                    return (S, T) => {
                        if (N.NodeMetadata.isIgnoredNode(S)) {
                            return I.VisitorOption.Skip;
                        }
                        for (let W = 0; W < R; W++) {
                            const Y = P[W][Q];
                            if (!Y) {
                                continue;
                            }
                            const Z = Y(S, T);
                            if (Z && M.NodeGuards.isNode(Z)) {
                                S = Z;
                            }
                        }
                        return S;
                    };
                } else {
                    return (S, T) => S;
                }
            }
        };
        O = B([
            G.injectable(),
            D(0, G.inject(H.ServiceIdentifiers.Factory__INodeTransformer)),
            D(1, G.inject(H.ServiceIdentifiers.INodeTransformerNamesGroupsBuilder)),
            C('design:paramtypes', [
                'function' == typeof (z = void 0 !== J.TNodeTransformerFactory && J.TNodeTransformerFactory) ? z : Object,
                'function' == typeof (A = void 0 !== K.INodeTransformerNamesGroupsBuilder && K.INodeTransformerNamesGroupsBuilder) ? A : Object
            ])
        ], O);
        q.TransformersRunner = O;
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
    },
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        (function (j) {
            j.Enter = 'enter';
            j.Leave = 'leave';
        }(d.VisitorDirection || (d.VisitorDirection = {})));
    },
    ,
    ,
    ,
    function (c, d, f) {
        'use strict';
        Object.defineProperty(d, '__esModule', i);
        const j = f(53);
        c.exports = j.JavaScriptObfuscator;
    }
]);